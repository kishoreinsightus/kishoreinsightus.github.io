{"version":3,"sources":["src/app/subject/subject-create.component.html","src/app/subject/subject-details.component.html","src/app/subject/subject-manage.component.html","src/app/subject/subject-update.component.html","src/app/curriculum/curriculum.service.ts","src/app/shared/constants/common.constants.ts","src/app/shared/model/content/subject.model.ts","src/app/subject/subject-create.component.ts","src/app/subject/subject-delete.component.ts","src/app/subject/subject-details.component.ts","src/app/subject/subject-manage.component.ts","src/app/subject/subject-update-publish.component.ts","src/app/subject/subject-update-unpublish.component.ts","src/app/subject/subject-update.component.ts","src/app/subject/subject.module.ts","src/app/subject/subject.route.ts","src/app/subject/subject.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"w-100 my-3 justify-content-between d-flex\\\">\\r\\n  <div class=\\\"btn btn-danger\\\" (click)=\\\"onBack()\\\">\\r\\n    <i class=\\\"fa fa-chevron-left mr-2\\\"></i> Back\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row-flex stepper\\\">\\r\\n  <div class=\\\"nav flex-column nav-pills stepper-left\\\" id=\\\"v-pills-tab\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\r\\n    <a class=\\\"nav-link active\\\" id=\\\"createSubject-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#createSubject\\\" role=\\\"tab\\\"\\r\\n      aria-controls=\\\"createSubject\\\" aria-selected=\\\"false\\\">\\r\\n      <span class=\\\"index-round\\\">\\r\\n        Step 1\\r\\n      </span>\\r\\n      <span class=\\\"step-label\\\">\\r\\n        Create subject\\r\\n      </span>\\r\\n    </a>\\r\\n    <a class=\\\"nav-link disabled\\\" id=\\\"creareSyllabus-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#creareSyllabus\\\" role=\\\"tab\\\"\\r\\n      aria-controls=\\\"creareSyllabus\\\" aria-selected=\\\"false\\\">\\r\\n      <span class=\\\"index-round\\\">\\r\\n        Step 2\\r\\n      </span>\\r\\n      <span class=\\\"step-label\\\">\\r\\n        Create syllabus\\r\\n      </span>\\r\\n    </a>\\r\\n    <a class=\\\"nav-link disabled\\\" id=\\\"confirmation-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#confirmation\\\" role=\\\"tab\\\"\\r\\n      aria-controls=\\\"confirmation\\\" aria-selected=\\\"false\\\">\\r\\n      <span class=\\\"index-round\\\">\\r\\n        Step 3\\r\\n      </span>\\r\\n      <span class=\\\"step-label\\\">\\r\\n        Summary\\r\\n      </span>\\r\\n    </a>\\r\\n  </div>\\r\\n  <div class=\\\"stepper-right tab-content p-3\\\" id=\\\"v-pills-tabContent\\\">\\r\\n    <div class=\\\"tab-pane fade show active\\\" id=\\\"createSubject\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"createSubject-tab\\\">\\r\\n      <form [formGroup]=\\\"subjectForm\\\">\\r\\n        <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n          <label for=\\\"curriculum\\\" class=\\\" col-form-label\\\">Curriculum</label>\\r\\n          <ng-select [items]=\\\"curriculumList\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"acronym\\\"\\r\\n            placeholder=\\\"Select curriculum\\\" formControlName=\\\"curriculum\\\" [(ngModel)]=\\\"selectedCurriculum\\\"\\r\\n            (change)=\\\"onCurriculumChange()\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group mb-2 col-xxl-6\\\" *ngIf=\\\"selectedCurriculum\\\">\\r\\n          <label for=\\\"grade\\\" class=\\\" col-form-label\\\">Grade</label>\\r\\n          <ng-select [items]=\\\"gradeList\\\" formControlName=\\\"grade\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"name\\\"\\r\\n            placeholder=\\\"Select grade\\\" [(ngModel)]=\\\"selectedGrade\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n          <label for=\\\"subjectName\\\" class=\\\"col-form-label\\\">Subject name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter subject name (min length: 3, max length: 50)\\\"\\r\\n            inputRestriction=\\\"alphabetsWithSpace\\\" formControlName=\\\"subjectName\\\" maxlength=\\\"50\\\" minlength=\\\"3\\\">\\r\\n          <div class=\\\"text-muted font-15 my-2\\\">Allowed\\r\\n            characters - Alphabets</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n          <label for=\\\"description\\\" class=\\\" col-form-label\\\">Description\\r\\n            <span class=\\\"text-muted\\\">(Optional)</span></label>\\r\\n          <textarea class=\\\"form-control description-form\\\"\\r\\n            placeholder=\\\"Enter description  (min length: 3, max length: 250)\\\" formControlName=\\\"subjectDescription\\\"\\r\\n            maxlength=\\\"250\\\" minlength=\\\"3\\\"></textarea>\\r\\n          <div class=\\\"text-muted font-15 my-2\\\">\\r\\n            Allowed characters - Alphabets, Numbers and\\r\\n            Special characters\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group mb-2 col-xxl-6 d-flex justify-content-start\\\">\\r\\n          <div class=\\\"checkbox mr-2\\\">\\r\\n            <input type=\\\"checkbox\\\" id=\\\"isLanguage\\\" formControlName=\\\"isLanguage\\\">\\r\\n            <label class=\\\"mt-2 p-3\\\" for=\\\"isLanguage\\\"></label>\\r\\n          </div>\\r\\n          <label class=\\\"mt-2\\\" for=\\\"isLanguage\\\">Is language ?<span class=\\\"text-muted\\\">(Optional)</span></label>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xxl-12 d-flex justify-content-end\\\">\\r\\n            <button class=\\\"btn btn-success next-step\\\" [disabled]=\\\"validateSubjectForm\\\" (click)=\\\"loadSubjectTree()\\\">\\r\\n              Next\\r\\n              <i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tab-pane fade\\\" id=\\\"creareSyllabus\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"creareSyllabus-tab\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xxl-4 p-2\\\">\\r\\n          <div class=\\\"d-flex justify-content-start mb-2\\\" *ngIf=\\\"updatedJSONTree.length > 1\\\">\\r\\n            <div class=\\\"btn btn-primary mr-2\\\" (click)=\\\"toggleTreeNodes()\\\">\\r\\n              <i class=\\\"fa fa-clone mr-2\\\"></i>\\r\\n              <span *ngIf=\\\"enableExpandNode === false\\\">\\r\\n                Expand all\\r\\n              </span>\\r\\n              <span *ngIf=\\\"enableExpandNode === true\\\">\\r\\n                Collapse all\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div id=\\\"buildTree\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xxl-8\\\">\\r\\n          <div class=\\\"w-100 d-flex justify-content-end align-self-start mb-2\\\" *ngIf=\\\"enableNodeOperation\\\">\\r\\n            <div class=\\\"btn btn-primary mr-2\\\" *ngIf=\\\"nodeType !== 'lesson'\\\" (click)=\\\"createNode()\\\">\\r\\n              <i class=\\\"fa fa-plus-circle mr-2\\\"></i>Add new\\r\\n              unit / lesson\\r\\n            </div>\\r\\n            <div class=\\\"btn btn-success mr-2\\\" (click)=\\\"editNode()\\\" *ngIf=\\\"enableEditNodeOperation\\\">\\r\\n              <i class=\\\"fa fa-edit mr-2\\\"></i>Edit {{nodeType}}\\r\\n            </div>\\r\\n            <div class=\\\"btn btn-danger\\\" (click)=\\\"deleteNode()\\\" *ngIf=\\\"nodeType !== 'root'\\\">\\r\\n              <i class=\\\"fa fa-trash mr-2\\\"></i> Delete {{nodeType}}\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"w-100 p-4\\\">\\r\\n            <div *ngIf=\\\"nodeType === 'unit'\\\">\\r\\n              <p><b>Unit name :</b> {{nodeTitle}} </p>\\r\\n              <p><b>Unit description :</b> {{nodeDescription}}</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"nodeType === 'lesson'\\\">\\r\\n              <p><b>Lesson name :</b> {{nodeTitle}}</p>\\r\\n              <p><b>Lesson objective :</b> {{nodeDescription}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"my-2 rounded p-3 border-danger\\\" *ngIf=\\\"enableInstruction\\\">\\r\\n        <p class=\\\"text-danger\\\"><b>NOTE</b></p>\\r\\n        <p class=\\\"text-primary\\\">\\r\\n          <i class=\\\"fa fa-check text-danger mr-2\\\"></i> Select a subject node and do your actions.\\r\\n        </p>\\r\\n        <p class=\\\"text-primary\\\">\\r\\n          <i class=\\\"fa fa-check mr-2 text-danger\\\"></i> Add atleast one unit or one lesson for general subject\\r\\n          creation.\\r\\n        </p>\\r\\n        <p class=\\\"text-primary\\\">\\r\\n          <i class=\\\"fa fa-check mr-2 text-danger\\\"></i> Only one root node is allowed, you can't drag and drop on top of\\r\\n          root node\\r\\n        </p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xxl-12 d-flex justify-content-end\\\">\\r\\n          <div class=\\\"btn btn-danger prev-step\\\">\\r\\n            <i class=\\\"fa fa-arrow-left mr-2\\\"></i> Previous\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-success ml-2 next-step\\\" [disabled]=\\\"validateNode\\\">\\r\\n            Next\\r\\n            <i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tab-pane fade\\\" id=\\\"confirmation\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"confirmation-tab\\\">\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row mb-3\\\">\\r\\n          <div class=\\\"col-xxl-6\\\">\\r\\n            <h5>Before changes</h5>\\r\\n            <div id=\\\"beforeChangeTree\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"col-xxl-6\\\">\\r\\n            <h5>After changes</h5>\\r\\n            <div id=\\\"afterChangeTree\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xxl-12 d-flex justify-content-end\\\">\\r\\n          <span class=\\\"btn btn-danger mr-2 prev-step\\\">\\r\\n            <i class=\\\"fa fa-arrow-left mr-2\\\"></i>\\r\\n            Previous\\r\\n          </span>\\r\\n          <div class=\\\"btn btn-info mr-2\\\" (click)=\\\"saveAsDraft()\\\">\\r\\n            <i class=\\\"fa fa-save mr-2\\\"></i>\\r\\n            Save as draft\\r\\n          </div>\\r\\n          <div class=\\\"btn btn-success\\\" (click)=\\\"saveAndPublish()\\\">\\r\\n            <i class=\\\"fe fe-file-plus mr-2\\\"></i>\\r\\n            Save and publish\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal slideInRight\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" id=\\\"subjectModal\\\">\\r\\n  <div class=\\\"modal-dialog modal-full-height modal-right modal-notify\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\" [formGroup]=\\\"syllabusForm\\\">\\r\\n      <div class=\\\"modal-header bg-warning d-flex align-items-center\\\">\\r\\n        <h5 class=\\\"modal-title text-white\\\">\\r\\n          {{modalTitleName}} unit / lesson\\r\\n        </h5>\\r\\n        <div class=\\\"close btn btn-xl\\\" (click)=\\\"closeWithOutSavingNode()\\\">\\r\\n          <i class=\\\"fa fa-times\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-group mb-2\\\">\\r\\n          <label class=\\\"col-form-label\\\">Type\\r\\n          </label>\\r\\n          <ng-select [items]=\\\"nodeTypes\\\" [disabled]=\\\"disableDropdown\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n            bindLabel=\\\"name\\\" placeholder=\\\"Select node type\\\" [(ngModel)]=\\\"selectedNodeType\\\" (change)=\\\"onNodeTypeChange()\\\"\\r\\n            [searchable]=\\\"false\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"nodeType === 'unit'\\\">\\r\\n          <div class=\\\"form-group mb-2\\\">\\r\\n            <label class=\\\"col-form-label\\\">Unit\\r\\n              name\\r\\n            </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"unitName\\\"\\r\\n              placeholder=\\\"Enter unit name (minlength: 3 and maxlength: 75)\\\"\\r\\n              inputRestriction=\\\"alphabetsNumbersWithMinus\\\" minlength=\\\"3\\\" maxlength=\\\"75\\\"\\r\\n              [ngClass]=\\\"{ 'is-invalid': validateNodeForm && modalFormControl.unitName.errors }\\\" />\\r\\n            <div class=\\\"text-muted font-15 my-2\\\">\\r\\n              Allowed characters - Alphabets, Numbers and Special character (-)\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group mb-2\\\">\\r\\n            <label class=\\\"col-form-label\\\">Unit\\r\\n              description\\r\\n            </label>\\r\\n            <textarea class=\\\"form-control description-form\\\"\\r\\n              placeholder=\\\"Enter unit description (minlength: 3 and maxlength: 250)\\\" minlength=\\\"3\\\" maxlength=\\\"250\\\"\\r\\n              [ngClass]=\\\"{ 'is-invalid': validateNodeForm && modalFormControl.unitDescription.errors }\\\"\\r\\n              formControlName=\\\"unitDescription\\\"></textarea>\\r\\n            <div class=\\\"text-muted font-15 my-2\\\">\\r\\n              Allowed characters - Alphabets, Numbers and Special characters\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"nodeType === 'lesson'\\\">\\r\\n          <div class=\\\"form-group mb-2\\\">\\r\\n            <label class=\\\"col-form-label\\\">Lesson\\r\\n              name\\r\\n            </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lessonName\\\"\\r\\n              placeholder=\\\"Enter lesson name (minlength: 3 and maxlength: 75)\\\"\\r\\n              inputRestriction=\\\"alphabetsNumbersWithMinus\\\" minlength=\\\"3\\\" maxlength=\\\"75\\\"\\r\\n              [ngClass]=\\\"{ 'is-invalid': validateNodeForm && modalFormControl.lessonName.errors }\\\" />\\r\\n            <div class=\\\"text-muted font-15 my-2\\\">\\r\\n              Allowed characters - Alphabets, Numbers and Special character (-)\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group mb-2\\\">\\r\\n            <label class=\\\"col-form-label\\\">Lesson\\r\\n              objective\\r\\n            </label>\\r\\n            <textarea class=\\\"form-control description-form\\\"\\r\\n              placeholder=\\\"Enter lesson objective (minlength: 3 and maxlength: 250)\\\" minlength=\\\"3\\\" maxlength=\\\"250\\\"\\r\\n              [ngClass]=\\\"{ 'is-invalid': validateNodeForm && modalFormControl.lessonObjective.errors }\\\"\\r\\n              formControlName=\\\"lessonObjective\\\"></textarea>\\r\\n            <div class=\\\"text-muted font-15 my-2\\\">\\r\\n              Allowed characters - Alphabets, Numbers and Special characters\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\" *ngIf=\\\"enableModalOperation\\\">\\r\\n        <div class=\\\"btn btn-danger\\\" (click)=\\\"cancelNode()\\\">\\r\\n          <i class=\\\"fa fa-times mr-2\\\"></i>\\r\\n          Reset\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"saveNode()\\\" [disabled]=\\\"validateNodeForm\\\">\\r\\n          <i class=\\\"fa fa-save mr-2\\\"></i>\\r\\n          Save\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"w-100 my-3 justify-content-between d-flex\\\">\\r\\n    <div class=\\\"btn btn-danger\\\" (click)=\\\"onBack()\\\">\\r\\n        <i class=\\\"fa fa-chevron-left mr-2\\\"></i> Back\\r\\n    </div>\\r\\n    <a class=\\\"btn btn-success mr-2\\\" [routerLink]=\\\"['/subject',subjectId, 'edit' ]\\\">\\r\\n        <i class=\\\"fa fa-edit mr-2\\\"></i>Edit subject\\r\\n    </a>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mb-3 p-3\\\">\\r\\n    <div class=\\\"col-xxl-3\\\">\\r\\n        <div class=\\\"d-flex justify-content-start mb-2\\\" *ngIf=\\\"subject.length > 1\\\">\\r\\n            <div class=\\\"btn btn-primary mr-2\\\" (click)=\\\"toggleTreeNodes()\\\">\\r\\n                <i class=\\\"fa fa-clone mr-2\\\"></i>\\r\\n                <span *ngIf=\\\"active === false\\\">\\r\\n                    Expand all\\r\\n                </span>\\r\\n                <span *ngIf=\\\"active === true\\\">\\r\\n                    Collapse all\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div id=\\\"treeView\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xxl-9\\\">\\r\\n        <div class=\\\"p-3\\\" *ngIf=\\\"nodeType === 'root'\\\">\\r\\n            <p><b>Subject name</b></p>\\r\\n            <p>{{nodeName}}</p>\\r\\n            <p><b>Subject description</b></p>\\r\\n            <p>{{nodeDescription}}</p>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'unit'\\\" class=\\\"p-3\\\">\\r\\n            <p><b>Unit name</b></p>\\r\\n            <p>{{nodeName}}</p>\\r\\n            <p><b>Unit description</b></p>\\r\\n            <p>{{nodeDescription}}</p>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"p-3\\\" *ngIf=\\\"nodeType === 'lesson'\\\">\\r\\n            <p><b>Lesson name</b></p>\\r\\n            <p>{{nodeName}}</p>\\r\\n            <p><b>Lesson objective</b></p>\\r\\n            <p>{{nodeDescription}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"w-100 d-flex justify-content-end my-3\\\">\\r\\n    <a routerLink=\\\"/subject/create\\\">\\r\\n        <div class=\\\"btn btn-primary\\\">\\r\\n            <i class=\\\"fa fa-plus-circle mr-2\\\"></i> Create new subject\\r\\n        </div>\\r\\n    </a>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-12 filterbg my-4 rounded\\\">\\r\\n    <div class=\\\"filtericon font-20\\\">\\r\\n        <i class=\\\"fa fa-filter\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"row d-flex justify-content-start align-items-center\\\">\\r\\n        <div class=\\\"col-lg-3 mb-3\\\">\\r\\n            <ng-select [items]=\\\"curriculumList\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"acronym\\\"\\r\\n                placeholder=\\\"Select curriculum\\\" [(ngModel)]=\\\"selectedCurriculum\\\" (change)=\\\"onCurriculumChange()\\\">\\r\\n            </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-3 mb-3\\\" *ngIf=\\\"selectedCurriculum\\\">\\r\\n            <ng-select [items]=\\\"gradeList\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"name\\\"\\r\\n                placeholder=\\\"Select grade\\\" [(ngModel)]=\\\"selectedGrade\\\">\\r\\n            </ng-select>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-end pb-3 row\\\">\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n            <button class=\\\"btn btn-success float-right waves-effect waves-light\\\" (click)=\\\"loadSubjectList()\\\">\\r\\n                <i class=\\\"fa fa-filter mr-1\\\"></i>Apply\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-responsive\\\" *ngIf=\\\"subjects\\\">\\r\\n    <table class=\\\"table table-hover table-striped table-bordered nowrap w-100\\\">\\r\\n        <thead>\\r\\n            <tr jhiSort [(predicate)]=\\\"predicate\\\" [(ascending)]=\\\"reverse\\\" [callback]=\\\"reset.bind(this)\\\">\\r\\n                <th jhiSortBy=\\\"subject\\\">Subject Name <span class=\\\"fa fa-sort ml-1\\\"></span></th>\\r\\n                <th jhiSortBy=\\\"grade\\\">Grade <span class=\\\"fa fa-sort ml-1\\\"></span></th>\\r\\n                <th jhiSortBy=\\\"status\\\">Status <span class=\\\"fa fa-sort ml-1\\\"></span></th>\\r\\n                <th class=\\\"fixed-column\\\">Update status</th>\\r\\n                <th class=\\\"fixed-column\\\">Actions</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody infinite-scroll (scrolled)=\\\"loadPage(page + 1)\\\" [infiniteScrollDisabled]=\\\"page >= links['last']\\\"\\r\\n            [infiniteScrollDistance]=\\\"0\\\">\\r\\n            <tr *ngFor=\\\"let data of subjects ;trackBy: trackId\\\">\\r\\n                <td data-column=\\\"Subject name\\\">{{data.subject}}</td>\\r\\n                <td data-column=\\\"Grade\\\">{{data.grade}}</td>\\r\\n                <td data-column=\\\"Status\\\">{{data.status}}</td>\\r\\n                <td class=\\\"fixed-column\\\" data-column=\\\"Update status\\\">\\r\\n                    <a class=\\\"btn btn-outline-success mr-1 mb-1\\\"\\r\\n                        *ngIf=\\\"data.status === 'DRAFT' || data.status === 'INACTIVE'\\\"\\r\\n                        [routerLink]=\\\"['/subject', data.id, 'publish']\\\">\\r\\n                        Publish\\r\\n                    </a>\\r\\n                    <a class=\\\"btn btn-outline-danger mr-1 mb-1\\\" *ngIf=\\\"data.status === 'ACTIVE'\\\"\\r\\n                        [routerLink]=\\\"['/subject', data.id, 'unpublish']\\\">\\r\\n                        Unpublish\\r\\n                    </a>\\r\\n                </td>\\r\\n                <td class=\\\"fixed-column\\\" data-column=\\\"Actions\\\">\\r\\n                    <div>\\r\\n                        <a class=\\\"btn btn-outline-info mr-1 btn-icon-size mb-1\\\"\\r\\n                            [routerLink]=\\\"['/subject', data.id, 'view' ]\\\">\\r\\n                            <i class=\\\"fa fa-eye\\\"></i>\\r\\n                        </a>\\r\\n                        <a class=\\\"btn btn-outline-success mr-1 btn-icon-size mb-1\\\"\\r\\n                            [routerLink]=\\\"['/subject', data.id, 'edit' ]\\\">\\r\\n                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                        </a>\\r\\n                        <div class=\\\"btn btn-outline-danger mr-1 btn-icon-size mb-1\\\"\\r\\n                            *ngIf=\\\"data.status === 'INACTIVE' || data.status === 'DRAFT'\\\"\\r\\n                            [routerLink]=\\\"['/subject', data.id, 'delete']\\\">\\r\\n                            <i class=\\\"fa fa-trash\\\"></i>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\"","export default \"<div class=\\\"col-xxl-12 justify-content-between d-flex my-3\\\">\\r\\n    <div class=\\\"btn btn-danger\\\" (click)=\\\"onBack()\\\">\\r\\n        <i class=\\\"fa fa-chevron-left mr-2\\\"></i> Back\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row-flex stepper\\\">\\r\\n    <div class=\\\"nav flex-column nav-pills stepper-left\\\" id=\\\"v-pills-tab\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\r\\n        <a class=\\\"nav-link active\\\" id=\\\"createSubject-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#createSubject\\\" role=\\\"tab\\\"\\r\\n            aria-controls=\\\"createSubject\\\" aria-selected=\\\"false\\\">\\r\\n            <span class=\\\"index-round\\\">\\r\\n                Step 1\\r\\n            </span>\\r\\n            <span class=\\\"step-label\\\">\\r\\n                Create subject\\r\\n            </span>\\r\\n        </a>\\r\\n        <a class=\\\"nav-link disabled\\\" id=\\\"creareSyllabus-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#creareSyllabus\\\" role=\\\"tab\\\"\\r\\n            aria-controls=\\\"creareSyllabus\\\" aria-selected=\\\"false\\\">\\r\\n            <span class=\\\"index-round\\\">\\r\\n                Step 2\\r\\n            </span>\\r\\n            <span class=\\\"step-label\\\">\\r\\n                Create syllabus\\r\\n            </span>\\r\\n        </a>\\r\\n        <a class=\\\"nav-link disabled\\\" id=\\\"confirmation-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#confirmation\\\" role=\\\"tab\\\"\\r\\n            aria-controls=\\\"confirmation\\\" aria-selected=\\\"false\\\">\\r\\n            <span class=\\\"index-round\\\">\\r\\n                Step 3\\r\\n            </span>\\r\\n            <span class=\\\"step-label\\\">\\r\\n                Summary\\r\\n            </span>\\r\\n        </a>\\r\\n    </div>\\r\\n    <div class=\\\"stepper-right tab-content p-3\\\" id=\\\"v-pills-tabContent\\\">\\r\\n        <div class=\\\"tab-pane fade show active\\\" id=\\\"createSubject\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"createSubject-tab\\\">\\r\\n            <form [formGroup]=\\\"subjectForm\\\">\\r\\n                <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n                    <label for=\\\"curriculum\\\" class=\\\"col-form-label\\\">Curriculum name</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"curriculum\\\" formControlName=\\\"curriculum\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n                    <label for=\\\"grade\\\" class=\\\"col-form-label\\\">Grade</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"grade\\\" formControlName=\\\"grade\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n                    <label for=\\\"subjectName\\\" class=\\\"col-form-label\\\">Subject name</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                        placeholder=\\\"Enter subject name (min length: 3, max length: 50)\\\"\\r\\n                        inputRestriction=\\\"alphabetsWithSpace\\\" formControlName=\\\"subjectName\\\" maxlength=\\\"50\\\" minlength=\\\"3\\\"\\r\\n                        [ngClass]=\\\"{ 'is-invalid': validateSubjectForm && formControl.subjectName.errors }\\\">\\r\\n                    <div class=\\\"text-muted font-15 my-2\\\">Allowed\\r\\n                        characters - Alphabets</div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n                    <label for=\\\"description\\\" class=\\\" col-form-label\\\">Description\\r\\n                        <span class=\\\"text-muted\\\">(Optional)</span></label>\\r\\n                    <textarea class=\\\"form-control description-form\\\"\\r\\n                        placeholder=\\\"Enter description  (min length: 3, max length: 250)\\\"\\r\\n                        formControlName=\\\"subjectDescription\\\"\\r\\n                        [ngClass]=\\\"{ 'is-invalid': validateSubjectForm && formControl.subjectDescription.errors }\\\"\\r\\n                        maxlength=\\\"250\\\" minlength=\\\"3\\\"></textarea>\\r\\n                    <div class=\\\"text-muted font-15 my-2\\\">\\r\\n                        Allowed characters - Alphabets, Numbers and\\r\\n                        Special characters\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group mb-2 col-xxl-6 d-flex justify-content-start\\\">\\r\\n                    <div class=\\\"checkbox mr-2\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"isLanguage\\\" formControlName=\\\"isLanguage\\\">\\r\\n                        <label class=\\\"mt-2 p-3\\\" for=\\\"isLanguage\\\"></label>\\r\\n                    </div>\\r\\n                    <label class=\\\"mt-2\\\" for=\\\"isLanguage\\\">Is language ? <span\\r\\n                            class=\\\"text-muted\\\">(Optional)</span></label>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-xxl-12 d-flex justify-content-end\\\">\\r\\n                        <button class=\\\"btn btn-success next-step\\\" [disabled]=\\\"validateSubjectForm\\\"\\r\\n                            (click)=\\\"loadUpdatedSubjectTree()\\\">\\r\\n                            Next\\r\\n                            <i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"tab-pane fade\\\" id=\\\"creareSyllabus\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"creareSyllabus-tab\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xxl-4 p-2\\\">\\r\\n                    <div class=\\\"d-flex justify-content-start mb-2\\\" *ngIf=\\\"subject.length > 1\\\">\\r\\n                        <div class=\\\"btn btn-primary mr-2\\\" (click)=\\\"toggleTreeNodes()\\\">\\r\\n                            <i class=\\\"fa fa-clone mr-2\\\"></i>\\r\\n                            <span *ngIf=\\\"enableExpandNode === false\\\">\\r\\n                                Expand all\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"enableExpandNode === true\\\">\\r\\n                                Collapse all\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div id=\\\"buildTree\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"col-xxl-8\\\">\\r\\n                    <div class=\\\"w-100 d-flex justify-content-end align-self-start mb-2\\\" *ngIf=\\\"enableNodeOperation\\\">\\r\\n                        <div class=\\\"btn btn-primary mr-2\\\" *ngIf=\\\"nodeType !== 'lesson'\\\" (click)=\\\"createNode()\\\">\\r\\n                            <i class=\\\"fa fa-plus-circle mr-2\\\"></i>Add new\\r\\n                            unit / lesson\\r\\n                        </div>\\r\\n                        <div class=\\\"btn btn-success mr-2\\\" (click)=\\\"editNode()\\\" *ngIf=\\\"enableEditNodeOperation\\\">\\r\\n                            <i class=\\\"fa fa-edit mr-2\\\"></i>Edit {{nodeType}}\\r\\n                        </div>\\r\\n                        <div class=\\\"btn btn-danger\\\" (click)=\\\"deleteNode()\\\" *ngIf=\\\"nodeType !== 'root'\\\">\\r\\n                            <i class=\\\"fa fa-trash mr-2\\\"></i> Delete {{nodeType}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"w-100 p-4\\\">\\r\\n                        <div *ngIf=\\\"nodeType === 'unit'\\\">\\r\\n                            <p><b>Unit name :</b> {{nodeTitle}} </p>\\r\\n                            <p><b>Unit description :</b> {{nodeDescription}}</p>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"nodeType === 'lesson'\\\">\\r\\n                            <p><b>Lesson name :</b> {{nodeTitle}}</p>\\r\\n                            <p><b>Lesson objective :</b> {{nodeDescription}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"my-2 p-3 border-danger rounded\\\">\\r\\n                <p class=\\\"text-danger\\\"><b>NOTE</b></p>\\r\\n                <p class=\\\"text-primary\\\">\\r\\n                    <i class=\\\"fa fa-check mr-2 text-danger\\\"></i> Select a node and do your actions.\\r\\n                </p>\\r\\n                <p class=\\\"text-primary\\\">\\r\\n                    <i class=\\\"fa fa-check mr-2 text-danger\\\"></i> Without any changes, you can't update subject.\\r\\n                </p>\\r\\n                <p class=\\\"text-primary\\\">\\r\\n                    <i class=\\\"fa fa-check mr-2 text-danger\\\"></i> Only one root node is allowed, you can't do drag and\\r\\n                    drop on top of\\r\\n                    root node\\r\\n                </p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xxl-12 d-flex justify-content-end\\\">\\r\\n                    <div class=\\\"btn btn-danger prev-step\\\">\\r\\n                        <i class=\\\"fa fa-arrow-left mr-2\\\"></i> Previous\\r\\n                    </div>\\r\\n                    <button class=\\\"btn btn-success ml-2 next-step\\\" [disabled]=\\\"validateNode\\\">\\r\\n                        Next\\r\\n                        <i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"tab-pane fade\\\" id=\\\"confirmation\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"confirmation-tab\\\">\\r\\n\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row mb-3\\\">\\r\\n                    <div class=\\\"col-xxl-6\\\">\\r\\n                        <h5>Before changes</h5>\\r\\n                        <div id=\\\"beforeChangeTree\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-xxl-6\\\">\\r\\n                        <h5>After changes</h5>\\r\\n                        <div id=\\\"afterChangeTree\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xxl-12 d-flex justify-content-end\\\">\\r\\n                    <span class=\\\"btn btn-danger mr-2 prev-step\\\">\\r\\n                        <i class=\\\"fa fa-arrow-left mr-2\\\"></i>\\r\\n                        Previous\\r\\n                    </span>\\r\\n                    <div class=\\\"btn btn-info mr-2\\\" (click)=\\\"saveAsDraft()\\\">\\r\\n                        <i class=\\\"fa fa-save mr-2\\\"></i>\\r\\n                        Save as draft\\r\\n                    </div>\\r\\n                    <div class=\\\"btn btn-success\\\" (click)=\\\"saveAndPublish()\\\">\\r\\n                        <i class=\\\"fe fe-file-plus mr-2\\\"></i>\\r\\n                        Save and publish\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal slideInRight\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" id=\\\"subjectEditModal\\\">\\r\\n    <div class=\\\"modal-dialog modal-full-height modal-right modal-notify\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\" [formGroup]=\\\"syllabusForm\\\">\\r\\n            <div class=\\\"modal-header bg-warning d-flex align-items-center\\\">\\r\\n                <h5 class=\\\"modal-title text-white\\\">\\r\\n                    {{modalTitleName}} unit / lesson\\r\\n                </h5>\\r\\n                <div class=\\\"close btn btn-xl\\\" (click)=\\\"closeWithOutSavingNode()\\\">\\r\\n                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-group mb-2\\\">\\r\\n                    <label class=\\\"col-form-label\\\">Type\\r\\n                    </label>\\r\\n                    <ng-select [items]=\\\"nodeTypes\\\" [disabled]=\\\"disableDropdown\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        bindLabel=\\\"name\\\" placeholder=\\\"Select node type\\\" [(ngModel)]=\\\"selectedNodeType\\\"\\r\\n                        (change)=\\\"onNodeTypeChange()\\\" [searchable]=\\\"false\\\">\\r\\n                    </ng-select>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"nodeType === 'unit'\\\">\\r\\n                    <div class=\\\"form-group mb-2\\\">\\r\\n                        <label class=\\\"col-form-label\\\">Unit\\r\\n                            name\\r\\n                        </label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"unitName\\\"\\r\\n                            placeholder=\\\"Enter unit name (minlength: 3 and maxlength: 75)\\\"\\r\\n                            inputRestriction=\\\"alphabetsNumbersWithMinus\\\" minlength=\\\"3\\\" maxlength=\\\"75\\\" />\\r\\n                        <div class=\\\"text-muted font-15 my-2\\\">\\r\\n                            Allowed characters - Alphabets, Numbers and Special character (-)\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group mb-2\\\">\\r\\n                        <label class=\\\"col-form-label\\\">Unit\\r\\n                            description\\r\\n                        </label>\\r\\n                        <textarea class=\\\"form-control description-form\\\"\\r\\n                            placeholder=\\\"Enter unit description (minlength: 3 and maxlength: 250)\\\" minlength=\\\"3\\\"\\r\\n                            maxlength=\\\"250\\\" formControlName=\\\"unitDescription\\\"></textarea>\\r\\n                        <div class=\\\"text-muted font-15 my-2\\\">\\r\\n                            Allowed characters - Alphabets, Numbers and Special characters\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"nodeType === 'lesson'\\\">\\r\\n                    <div class=\\\"form-group mb-2\\\">\\r\\n                        <label class=\\\"col-form-label\\\">Lesson\\r\\n                            name\\r\\n                        </label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lessonName\\\"\\r\\n                            placeholder=\\\"Enter lesson name (minlength: 3 and maxlength: 75)\\\"\\r\\n                            inputRestriction=\\\"alphabetsNumbersWithMinus\\\" minlength=\\\"3\\\" maxlength=\\\"75\\\" />\\r\\n                        <div class=\\\"text-muted font-15 my-2\\\">\\r\\n                            Allowed characters - Alphabets, Numbers and Special character (-)\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group mb-2\\\">\\r\\n                        <label class=\\\"col-form-label\\\">Lesson\\r\\n                            objective\\r\\n                        </label>\\r\\n                        <textarea class=\\\"form-control description-form\\\"\\r\\n                            placeholder=\\\"Enter lesson objective (minlength: 3 and maxlength: 250)\\\" minlength=\\\"3\\\"\\r\\n                            maxlength=\\\"250\\\" formControlName=\\\"lessonObjective\\\"></textarea>\\r\\n                        <div class=\\\"text-muted font-15 my-2\\\">\\r\\n                            Allowed characters - Alphabets, Numbers and Special characters\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\" *ngIf=\\\"enableModalOperation\\\">\\r\\n                <div class=\\\"btn btn-danger\\\" (click)=\\\"cancelNode()\\\">\\r\\n                    <i class=\\\"fa fa-times mr-2\\\"></i>\\r\\n                    Reset\\r\\n                </div>\\r\\n                <button class=\\\"btn btn-success\\\" (click)=\\\"saveNode()\\\" [disabled]=\\\"validateNodeForm\\\">\\r\\n                    <i class=\\\"fa fa-save mr-2\\\"></i>\\r\\n                    Save\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { ICurriculum } from '../shared/model/content/curriculum.model';\r\nimport { environment } from '../../environments/environment';\r\nimport { createRequestOption } from '../shared';\r\nimport { Observable } from 'rxjs';\r\nimport { ACTIVE } from '../shared/constants/common.constants';\r\n\r\ntype EntityResponseType = HttpResponse<ICurriculum>;\r\ntype EntityArrayResponseType = HttpResponse<ICurriculum[]>;\r\n\r\nlet headers: HttpHeaders = new HttpHeaders();\r\nheaders = headers.append('Access-Control-Allow-Origin', '*').append('Access-Control-Allow-Headers', '*');\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CurriculumService {\r\n    public curriculumResourceUrlSearch = environment.API_URL + 'services/learning/api/curricula/search';\r\n    public curriculumResourceUrl = environment.API_URL + 'services/learning/api/curricula';\r\n\r\n    constructor(protected http: HttpClient) { }\r\n\r\n    createCurriculum(curriculum: ICurriculum): Observable<EntityResponseType> {\r\n        return this.http.post<ICurriculum>(this.curriculumResourceUrl, curriculum, { observe: 'response' });\r\n    }\r\n\r\n    updateCurriculum(curriculum: ICurriculum): Observable<EntityResponseType> {\r\n        return this.http.put<ICurriculum>(this.curriculumResourceUrl, curriculum, { observe: 'response' });\r\n    }\r\n\r\n    find(id: number): Observable<EntityResponseType> {\r\n        return this.http.get<ICurriculum>(`${this.curriculumResourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    getStandardCurriculums(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        var reqJSON = {\r\n            \"isExtraCurriculum\": false\r\n        };\r\n        return this.http.post<ICurriculum[]>(this.curriculumResourceUrlSearch, reqJSON, { params: options, observe: 'response' });\r\n    }\r\n\r\n    getCurriculumSearch(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        var reqJSON = {\r\n            \"isExtraCurriculum\": false,\r\n            \"status\": ACTIVE\r\n        };\r\n        return this.http.post<ICurriculum[]>(this.curriculumResourceUrlSearch, reqJSON, { params: options, observe: 'response' });\r\n    }\r\n\r\n    delete(id: number): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.curriculumResourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n}\r\n","export const DRAFT = 'DRAFT';\r\nexport const ACTIVE = 'ACTIVE';\r\nexport const INACTIVE = 'INACTIVE';\r\nexport const ARCHIVED = 'ARCHIVED';\r\nexport const NOCHANGE = 'NOCHANGE';\r\nexport const CREATED = 'CREATED';\r\nexport const EDITED = 'EDITED';\r\nexport const DELETED = 'DELETED';","export interface ISubject {\r\n    data?: {\r\n        curriculumId?: number,\r\n        curriculumSubjectId?: number,\r\n        description?: string,\r\n        editStatus?: string,\r\n        grade?: number,\r\n        id?: number,\r\n        isLanguage?: boolean,\r\n        name?: string,\r\n        objective?: string,\r\n        orderNumber?: number,\r\n        status?: string,\r\n        fullName?: string\r\n    },\r\n    icon?: string,\r\n    id?: number,\r\n    parent?: string,\r\n    text?: string,\r\n    type?: string,\r\n    state?: string,\r\n    a_attr?: string;\r\n    li_attr?: string;\r\n    status?: string;\r\n    isExtraCurriculum?: boolean;\r\n    generalTopicId?: number;\r\n}\r\n\r\nexport class Subject implements ISubject {\r\n    constructor(\r\n        public data?: {\r\n            curriculumId?: number,\r\n            curriculumSubjectId?: number,\r\n            description?: string,\r\n            editStatus?: string,\r\n            grade?: number,\r\n            id?: number,\r\n            isLanguage?: boolean,\r\n            name?: string,\r\n            objective?: string,\r\n            orderNumber?: number,\r\n            status?: string,\r\n            fullName?: string\r\n        },\r\n        public icon?: string,\r\n        public id?: number,\r\n        public parent?: string,\r\n        public text?: string,\r\n        public type?: string,\r\n        public state?: string,\r\n        public a_attr?: string,\r\n        public li_attr?: string,\r\n        public status?: string,\r\n        public isExtraCurriculum?: boolean,\r\n        public generalTopicId?: number\r\n    ) { }\r\n}\r\n","import { Component, OnInit, AfterViewInit, ChangeDetectorRef, AfterViewChecked } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { DRAFT, CREATED, ACTIVE } from '../shared/constants/common.constants';\r\nimport { SubjectService } from './subject.service';\r\nimport { ISubject } from '../shared/model/content/subject.model';\r\nimport { ICurriculum } from '../shared/model/content/curriculum.model';\r\nimport { IGrade } from '../shared/model/common/grade.model';\r\nimport { CommonService } from '../shared/common/common.service';\r\nimport { CurriculumService } from '../curriculum/curriculum.service';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n  templateUrl: \"./subject-create.component.html\",\r\n  providers: [SubjectService]\r\n})\r\nexport class SubjectCreateComponent implements OnInit, AfterViewInit, AfterViewChecked {\r\n  subjectForm: FormGroup;\r\n  syllabusForm: FormGroup;\r\n  gradeList: IGrade[] = [];\r\n  curriculumList: ICurriculum[] = [];\r\n  syllabusTree: ISubject[] = [];\r\n  updatedJSONTree: ISubject[] = [];\r\n  nodeTypes: any[] = [];\r\n  nodeType: string;\r\n  nodeTitle: string;\r\n  nodeDescription: string;\r\n  subjectName: string;\r\n  subjectDescription: string;\r\n  curriculum: string;\r\n  grade: string;\r\n  nodeOperationType: string;\r\n  modalTitleName: string;\r\n  enableNodeOperation: boolean;\r\n  enableEditNodeOperation: boolean;\r\n  enableInstruction: boolean;\r\n  enableModalOperation: boolean;\r\n  validateNode: boolean;\r\n  disableDropdown: boolean;\r\n  validateSubjectForm: boolean;\r\n  validateNodeForm: boolean;\r\n  enableExpandNode: boolean;\r\n  selectedNodeType: any;\r\n  selectedCurriculum: any;\r\n  selectedGrade: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    public pluginService: PluginService,\r\n    public curriculumService: CurriculumService,\r\n    public subjectService: SubjectService,\r\n    public activatedRoute: ActivatedRoute,\r\n    public commonService: CommonService,\r\n    private changeDetectRef: ChangeDetectorRef\r\n  ) {\r\n    this.validateSubjectForm = true;\r\n    this.validateNodeForm = true;\r\n    this.validateNode = true;\r\n    this.enableExpandNode = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.pluginService.sideMenuToggle();\r\n    this.createSubjectGroup();\r\n    this.pluginService.stepper();\r\n    this.loadCurriculumList();\r\n    this.getNodeTypeList();\r\n  }\r\n\r\n  getNodeTypeList() {\r\n    this.commonService.getGeneralDataList().subscribe((nodeTypeData: any) => {\r\n      this.nodeTypes = nodeTypeData.subject;\r\n    });\r\n  }\r\n\r\n  createSubjectGroup() {\r\n    this.subjectForm = this.formBuilder.group({\r\n      curriculum: new FormControl(null, [Validators.required]),\r\n      grade: new FormControl(null, [Validators.required]),\r\n      subjectName: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(50)]),\r\n      subjectDescription: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(250)]),\r\n      isLanguage: new FormControl(false)\r\n    });\r\n    this.syllabusForm = this.formBuilder.group({\r\n      unitName: new FormControl(null),\r\n      unitDescription: new FormControl(null, [Validators.minLength(3), Validators.maxLength(250)]),\r\n      lessonName: new FormControl(null),\r\n      lessonObjective: new FormControl(null, [Validators.minLength(3), Validators.maxLength(250)])\r\n    })\r\n  }\r\n\r\n  get formControl() { return this.subjectForm.controls; }\r\n  get modalFormControl() { return this.syllabusForm.controls; }\r\n\r\n  onNodeTypeChange() {\r\n    const validators = [Validators.required, Validators.minLength(3), Validators.maxLength(75)];\r\n    if (this.selectedNodeType) {\r\n      this.nodeType = this.selectedNodeType.name;\r\n      if (this.nodeType === 'unit') {\r\n        this.enableModalOperation = true;\r\n        this.syllabusForm.addControl('unitName', new FormControl('', validators));\r\n        this.syllabusForm.addControl('lessonName', new FormControl('', null));\r\n      } else if (this.nodeType === 'lesson') {\r\n        this.enableModalOperation = true;\r\n        this.syllabusForm.addControl('lessonName', new FormControl('', validators));\r\n        this.syllabusForm.addControl('unitName', new FormControl('', null));\r\n      }\r\n    }\r\n  }\r\n\r\n  onCurriculumChange() {\r\n    let gradesApplicableFrom, gradesApplicableTo;\r\n    if (this.selectedCurriculum) {\r\n      gradesApplicableFrom = this.selectedCurriculum.gradesApplicableFrom;\r\n      gradesApplicableTo = this.selectedCurriculum.gradesApplicableTo;\r\n      this.generateGradeList(gradesApplicableFrom, gradesApplicableTo);\r\n      this.selectedGrade = null;\r\n    }\r\n  }\r\n\r\n  loadSubjectTree() {\r\n    let language;\r\n    if (this.selectedCurriculum && this.selectedGrade) {\r\n      language = this.subjectForm.value.isLanguage;\r\n      this.syllabusTree = [\r\n        {\r\n          \"icon\": \"fa fa-book\",\r\n          \"parent\": \"#\",\r\n          \"text\": this.subjectName,\r\n          \"type\": \"root\",\r\n          \"data\": {\r\n            \"name\": this.subjectName,\r\n            \"description\": this.subjectDescription,\r\n            \"curriculumId\": this.selectedCurriculum.id,\r\n            \"grade\": this.selectedGrade.name,\r\n            \"isLanguage\": language,\r\n            \"curriculumSubjectId\": 0,\r\n            \"editStatus\": CREATED,\r\n            \"fullName\": \"\",\r\n            \"objective\": \"\",\r\n            \"orderNumber\": 0,\r\n            \"status\": null\r\n          },\r\n        }\r\n      ];\r\n      this.pluginService.jsTree(\"#buildTree\", this.syllabusTree, true);\r\n      this.pluginService.jsTree(\"#beforeChangeTree\", this.syllabusTree, false);\r\n      this.enableInstruction = true;\r\n    }\r\n  }\r\n\r\n  cancelForm() {\r\n    this.subjectForm.reset();\r\n  }\r\n\r\n  loadCurriculumList() {\r\n    this.curriculumService.getCurriculumSearch().subscribe(\r\n      (res: HttpResponse<ICurriculum[]>) => this.assignCurriculumList(res.body),\r\n      (res: HttpErrorResponse) => this.onError(res.message)\r\n    )\r\n  }\r\n\r\n  assignCurriculumList(data: ICurriculum[]) {\r\n    this.curriculumList = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      this.curriculumList.push(data[i]);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.nodeSelectedEvent();\r\n    this.generateJSONTreeOnDragAndDrop();\r\n  }\r\n\r\n  generateGradeList(min, max) {\r\n    this.gradeList = [];\r\n    for (var i = min; i <= max; i++) {\r\n      this.gradeList.push({\r\n        \"id\": i,\r\n        \"name\": i\r\n      });\r\n    }\r\n    return this.gradeList;\r\n  }\r\n\r\n  //Reset all form values\r\n  resetFormValues() {\r\n    this.syllabusForm.reset();\r\n    this.selectedNodeType = null;\r\n  }\r\n\r\n  //Tree selection and change method call\r\n  nodeSelectedEvent() {\r\n    let i, j, conceptThis = this;\r\n    $('#buildTree').on('changed.jstree', function (e, data) {\r\n      for (i = 0, j = data.selected.length; i < j; i++) {\r\n        conceptThis.nodeType = data.node.type;\r\n        if (conceptThis.nodeType === \"root\") {\r\n          conceptThis.enableNodeOperation = true;\r\n          conceptThis.enableEditNodeOperation = false;\r\n        } else if (conceptThis.nodeType === \"unit\") {\r\n          conceptThis.enableEditNodeOperation = true;\r\n          conceptThis.enableNodeOperation = true;\r\n          conceptThis.nodeTitle = data.node.data.name;\r\n          conceptThis.nodeDescription = data.node.data.description;\r\n          conceptThis.syllabusFormSetValues(conceptThis);\r\n        } else if (conceptThis.nodeType === \"lesson\") {\r\n          conceptThis.enableNodeOperation = true;\r\n          conceptThis.enableEditNodeOperation = true;\r\n          conceptThis.nodeTitle = data.node.data.name;\r\n          conceptThis.nodeDescription = data.node.data.objective;\r\n          conceptThis.syllabusFormSetValues(conceptThis);\r\n        } else {\r\n          conceptThis.enableNodeOperation = false;\r\n          conceptThis.enableEditNodeOperation = false;\r\n        }\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  trimValue(value) {\r\n    if (value === null || value === undefined) {\r\n      return value;\r\n    } else {\r\n      return value.trim();\r\n    }\r\n  }\r\n\r\n  validateSubjectFormValues() {\r\n    this.subjectName = this.trimValue(this.subjectForm.value.subjectName);\r\n    this.subjectDescription = this.trimValue(this.subjectForm.value.subjectDescription);\r\n    if (this.subjectName === \"\" || this.subjectName === undefined || this.subjectName === null) {\r\n      this.validateSubjectForm = true;\r\n    } else {\r\n      this.validateSubjectForm = false;\r\n    }\r\n    if (this.subjectForm.invalid) {\r\n      this.validateSubjectForm = true;\r\n    }\r\n    if (this.subjectForm.valid) {\r\n      this.validateSubjectForm = false;\r\n    }\r\n  }\r\n\r\n  validateUnitAndLessonForm() {\r\n    let unitName, lessonName;\r\n    unitName = this.syllabusForm.value.unitName;\r\n    lessonName = this.syllabusForm.value.lessonName;\r\n    if (this.nodeType === 'unit') {\r\n      if (unitName === null || unitName === \"\") {\r\n        this.validateNodeForm = true;\r\n      } else {\r\n        this.validateNodeForm = false;\r\n      }\r\n    } else if (this.nodeType === 'lesson') {\r\n      if (lessonName === null || lessonName === \"\") {\r\n        this.validateNodeForm = true;\r\n      } else {\r\n        this.validateNodeForm = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    //Subject Form Validation\r\n    this.validateSubjectFormValues();\r\n    //Unit and lesson form validation\r\n    this.validateUnitAndLessonForm();\r\n    this.changeDetectRef.detectChanges();\r\n  }\r\n\r\n  //Unit and lesson details form setvalues method\r\n  syllabusFormSetValues(Objectthis) {\r\n    let nodeTypeIndex;\r\n    nodeTypeIndex = this.nodeTypes.findIndex(item => item.name === Objectthis.nodeType);\r\n    this.selectedNodeType = this.nodeTypes[nodeTypeIndex];\r\n    if (Objectthis.nodeType === \"unit\") {\r\n      this.syllabusForm.setValue({\r\n        unitName: Objectthis.nodeTitle,\r\n        unitDescription: Objectthis.nodeDescription,\r\n        lessonName: \"\",\r\n        lessonObjective: \"\"\r\n      })\r\n    } else {\r\n      this.syllabusForm.setValue({\r\n        unitName: \"\",\r\n        unitDescription: \"\",\r\n        lessonName: Objectthis.nodeTitle,\r\n        lessonObjective: Objectthis.nodeDescription,\r\n      })\r\n    }\r\n  }\r\n\r\n  openUnitAndLessonModal() {\r\n    this.pluginService.showModalWindow(\"#subjectModal\");\r\n  }\r\n\r\n  closeUnitAndLessonModal() {\r\n    this.pluginService.hideModalWindow(\"#subjectModal\")\r\n  }\r\n\r\n  closeWithOutSavingNode() {\r\n    var localthisObject = this;\r\n    swal({\r\n      title: \"Are you sure to close without saving ?\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes\",\r\n      confirmButtonColor: \"#32b432\",\r\n      cancelButtonText: \"No\",\r\n      closeOnConfirm: true,\r\n      closeOnCancel: true\r\n    },\r\n      function (isConfirm) {\r\n        if (isConfirm === true) {\r\n          localthisObject.closeUnitAndLessonModal();\r\n          localthisObject.disableNodeOperations();\r\n        }\r\n      });\r\n  }\r\n\r\n  disableNodeOperations() {\r\n    this.enableNodeOperation = false;\r\n    this.nodeType = \"\"\r\n    this.enableNodeOperation = false;\r\n    this.nodeType = \"\"\r\n    this.resetFormValues();\r\n    let treeCallback = $('#buildTree').jstree(true);\r\n    treeCallback.deselect_all();\r\n  }\r\n\r\n  //Create node method\r\n  createNode() {\r\n    this.nodeOperationType = \"create\";\r\n    this.modalTitleName = \"Add new\";\r\n    this.openUnitAndLessonModal();\r\n    this.nodeType = \"\";\r\n    this.resetFormValues();\r\n    this.disableDropdown = false;\r\n    this.enableModalOperation = false;\r\n    this.selectedNodeType = null;\r\n  }\r\n\r\n  //Edit node method\r\n  editNode() {\r\n    this.nodeOperationType = \"edit\";\r\n    this.modalTitleName = \"Edit\";\r\n    this.disableDropdown = true;\r\n    this.syllabusForm.patchValue({\r\n      unitName: this.nodeTitle,\r\n      unitDescription: this.nodeDescription,\r\n      lessonName: this.nodeTitle,\r\n      lessonObjective: this.nodeDescription\r\n    })\r\n    this.openUnitAndLessonModal();\r\n    this.enableModalOperation = true;\r\n  }\r\n\r\n  //Save node method\r\n  saveNode() {\r\n    this.validateNodeForm = false;\r\n    var newNodeArray, position, parent, treeCallback, jsonArray, nodeIndex, arrayDetails, nodeId, data = {};\r\n    position = 'last';\r\n    parent = $('#buildTree').jstree('get_selected')[0];\r\n    treeCallback = $('#buildTree').jstree(true);\r\n    jsonArray = treeCallback.get_json('#', { no_state: true, no_li_attr: true, no_a_attr: true, flat: true });\r\n    nodeId = treeCallback.get_selected()[0];\r\n    nodeIndex = jsonArray.findIndex(item => item.id === nodeId);\r\n    if (this.nodeOperationType === \"create\") {\r\n      if (this.nodeType === \"unit\") {\r\n        this.nodeTitle = this.trimValue(this.syllabusForm.value.unitName);\r\n        this.nodeDescription = this.trimValue(this.syllabusForm.value.unitDescription);\r\n        newNodeArray = {\r\n          \"icon\": \"fe fe-server\",\r\n          \"text\": this.nodeTitle,\r\n          \"type\": \"unit\",\r\n          \"data\": {\r\n            \"name\": this.nodeTitle,\r\n            \"description\": this.nodeDescription,\r\n            \"editStatus\": CREATED,\r\n            \"objective\": \"\",\r\n            \"orderNumber\": 0,\r\n            \"status\": null,\r\n            \"fullName\": \"\"\r\n          }\r\n        }\r\n        $('#buildTree').jstree().create_node(parent, newNodeArray, position);\r\n        jsonArray = treeCallback.get_json('#', { no_state: true, no_li_attr: true, no_a_attr: true, flat: true });\r\n      }\r\n      else if (this.nodeType === \"lesson\") {\r\n        this.nodeTitle = this.trimValue(this.syllabusForm.value.lessonName);\r\n        this.nodeDescription = this.trimValue(this.syllabusForm.value.lessonObjective);\r\n        newNodeArray = {\r\n          \"icon\": \"fa fa-file\",\r\n          \"text\": this.nodeTitle,\r\n          \"type\": \"lesson\",\r\n          \"data\": {\r\n            \"name\": this.nodeTitle,\r\n            \"objective\": this.nodeDescription,\r\n            \"editStatus\": \"CREATED\",\r\n            \"description\": \"\",\r\n            \"orderNumber\": 0,\r\n            \"status\": null,\r\n            \"fullName\": \"\"\r\n          }\r\n        }\r\n        $('#buildTree').jstree().create_node(parent, newNodeArray, position);\r\n        jsonArray = treeCallback.get_json('#', { no_state: true, no_li_attr: true, no_a_attr: true, flat: true });\r\n      }\r\n    } else if (this.nodeOperationType === \"edit\") {\r\n      this.nodeType = jsonArray[nodeIndex].type;\r\n      if (this.nodeType === \"unit\") {\r\n        this.nodeTitle = this.trimValue(this.syllabusForm.value.unitName);\r\n        this.nodeDescription = this.trimValue(this.syllabusForm.value.unitDescription);\r\n        jsonArray[nodeIndex].text = this.nodeTitle;\r\n        data = {\r\n          \"name\": this.nodeTitle,\r\n          \"description\": this.nodeDescription,\r\n          \"editStatus\": \"CREATED\",\r\n          \"objective\": \"\",\r\n          \"orderNumber\": 0,\r\n          \"status\": null,\r\n          \"fullName\": \"\"\r\n        }\r\n        arrayDetails = jsonArray[nodeIndex];\r\n        arrayDetails.data = data;\r\n      } else if (this.nodeType === \"lesson\") {\r\n        this.nodeTitle = this.trimValue(this.syllabusForm.value.lessonName);\r\n        this.nodeDescription = this.trimValue(this.syllabusForm.value.lessonObjective);\r\n        jsonArray[nodeIndex].text = this.nodeTitle;\r\n        data = {\r\n          \"name\": this.nodeTitle,\r\n          \"objective\": this.nodeDescription,\r\n          \"editStatus\": \"CREATED\",\r\n          \"description\": \"\",\r\n          \"orderNumber\": 0,\r\n          \"status\": null,\r\n          \"fullName\": \"\"\r\n        }\r\n        arrayDetails = jsonArray[nodeIndex];\r\n        arrayDetails.data = data;\r\n      }\r\n    }\r\n    this.pluginService.jsTree(\"#buildTree\", jsonArray, true)\r\n    this.updateJSONTreeWithOrderNum(jsonArray);\r\n    treeCallback.deselect_all();\r\n    this.nodeType = \"\";\r\n    this.enableNodeOperation = false;\r\n    this.closeUnitAndLessonModal();\r\n    this.resetFormValues();\r\n  }\r\n\r\n  //Delete node method\r\n  deleteNode() {\r\n    var nodeId, jsonArray, treeCallback;\r\n    this.nodeOperationType = \"delete\";\r\n    treeCallback = $(\"#buildTree\").jstree();\r\n    nodeId = treeCallback.get_selected()[0];\r\n    treeCallback.delete_node($('#' + nodeId))\r\n    jsonArray = $(\"#buildTree\").jstree(true).get_json('#', { no_state: true, no_li_attr: true, no_a_attr: true, flat: true })\r\n    if (this.nodeType === \"unit\") {\r\n      this.updatedJSONTree = jsonArray;\r\n    } else {\r\n      this.updatedJSONTree = jsonArray;\r\n    }\r\n    this.updateJSONTreeWithOrderNum(this.updatedJSONTree);\r\n    this.enableNodeOperation = false;\r\n    this.nodeType = \"root\";\r\n  }\r\n\r\n  //Generate JSON tree on drag and drop\r\n  generateJSONTreeOnDragAndDrop() {\r\n    var localObj = this;\r\n    $(document).on('dnd_stop.vakata', function (e, data) {\r\n      setTimeout(function () {\r\n        var json = $(\"#buildTree\").jstree(true).get_json('#', { no_state: true, no_li_attr: true, no_a_attr: true, flat: true });\r\n        localObj.updateJSONTreeWithOrderNum(json);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<ISubject>>) {\r\n    result.subscribe((res: HttpResponse<ISubject>) => this.onSaveSuccess(res), (ErrRes: HttpErrorResponse) => this.onSaveError(ErrRes));\r\n  }\r\n\r\n  saveAsDraft() {\r\n    this.updatedJSONTree[0].data.status = DRAFT;\r\n    this.saveGeneralSubject();\r\n  }\r\n\r\n  saveAndPublish() {\r\n    this.updatedJSONTree[0].data.status = ACTIVE;\r\n    this.saveGeneralSubject();\r\n  }\r\n\r\n  saveGeneralSubject() {\r\n    this.subscribeToSaveResponse(this.subjectService.saveSubject(this.createSubjectForm()));\r\n  }\r\n\r\n  protected onSaveSuccess(res: HttpResponse<ISubject>) {\r\n    this.pluginService.alertMessage(\"General subject saved successfully\", \"success\")\r\n    this.previousUrl();\r\n    this.resetFormValues();\r\n    this.subjectForm.reset();\r\n  }\r\n\r\n  protected onSaveError(res: HttpErrorResponse) {\r\n    this.pluginService.alertMessage(\"Could not save, please contact admin\", \"error\")\r\n  }\r\n\r\n  private createSubjectForm(): ISubject[] {\r\n    return this.updatedJSONTree;\r\n  }\r\n\r\n  //update JSON array with order number \r\n  updateJSONTreeWithOrderNum(json) {\r\n    this.updatedJSONTree = [];\r\n    this.updatedJSONTree = json;\r\n    if (this.updatedJSONTree[0].type === \"unit\" || this.updatedJSONTree[0].type === \"lesson\") {\r\n      this.pluginService.alertMessage(\"More than one root element is not allowed, please remove the additional root element and proceed\", \"error\");\r\n      this.validateNode = true;\r\n    } else if (this.updatedJSONTree[0].type === \"root\") {\r\n      this.validateNode = false;\r\n    }\r\n    for (let i = 0; i < this.updatedJSONTree.length; i++) {\r\n      this.updatedJSONTree[i].data.orderNumber = i;\r\n      //Remove unwanted objects (for api call) from the JSON tree\r\n      delete this.updatedJSONTree[i].state;\r\n      delete this.updatedJSONTree[i].a_attr;\r\n      delete this.updatedJSONTree[i].li_attr;\r\n      if ((this.updatedJSONTree[i].type !== \"root\") && (this.updatedJSONTree[i].parent === \"#\")) {\r\n        this.pluginService.alertMessage(\"More than one root element is not allowed, please remove the additional root element and proceed\", \"error\");\r\n        this.validateNode = true;\r\n      }\r\n    }\r\n    this.pluginService.jsTree(\"#afterChangeTree\", this.updatedJSONTree, false);\r\n  }\r\n\r\n  protected onError(errorMessage: string) {\r\n    this.pluginService.alertMessage(errorMessage, \"error\");\r\n  }\r\n\r\n  toggleTreeNodes() {\r\n    if (this.updatedJSONTree.length > 1) {\r\n      this.enableExpandNode = !this.enableExpandNode;\r\n      if (this.enableExpandNode) {\r\n        this.pluginService.openJsTreeAllNodes(\"#buildTree\");\r\n      } else {\r\n        this.pluginService.closeJsTreeAllNodes(\"#buildTree\")\r\n      }\r\n    }\r\n  }\r\n\r\n  onBack() {\r\n    var localObj = this;\r\n    swal({\r\n      title: \"Are you sure to go previous page ?\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes\",\r\n      confirmButtonColor: \"#32b432\",\r\n      cancelButtonText: \"No\",\r\n      closeOnConfirm: true,\r\n      closeOnCancel: true\r\n    },\r\n      function (isConfirm) {\r\n        if (isConfirm) {\r\n          localObj.previousUrl();\r\n          localObj.pluginService.sideMenuToggle();\r\n        }\r\n      });\r\n  }\r\n\r\n  previousUrl() {\r\n    this.router.navigateByUrl('/subject')\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { JhiEventManager } from 'ng-jhipster';\r\nimport { SubjectService } from './subject.service';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    template: \"\",\r\n    providers: [SubjectService]\r\n})\r\nexport class SubjectDeleteComponent implements OnInit {\r\n    constructor(\r\n        public router: Router,\r\n        public activatedRoute: ActivatedRoute,\r\n        protected eventManager: JhiEventManager,\r\n        public subjectService: SubjectService,\r\n        protected pluginService: PluginService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.data.subscribe(({ subject }) => {\r\n            this.deletegeneralSubject(subject);\r\n        });\r\n    }\r\n\r\n    protected subscribeToDeleteResponse(resp: Observable<HttpResponse<any>>) {\r\n        resp.subscribe((res: HttpResponse<any>) => this.onDeleteSuccess(res), (res: HttpErrorResponse) => this.onDeleteError(res));\r\n    }\r\n\r\n    deletegeneralSubject(subject) {\r\n        var localthisObject = this;\r\n        swal({\r\n            title: \"Are you sure to delete this subject ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: false,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    localthisObject.confirmDelete(subject.id);\r\n                } else {\r\n                    localthisObject.previousUrl();\r\n                }\r\n            });\r\n    }\r\n\r\n    confirmDelete(id: number) {\r\n        this.subscribeToDeleteResponse(this.subjectService.delete(id));\r\n    }\r\n\r\n    previousUrl() {\r\n        this.router.navigateByUrl('/subject');\r\n    }\r\n\r\n    protected onDeleteSuccess(resp) {\r\n        this.pluginService.alertMessage(\"Subject deleted successfully\", \"success\");\r\n        this.previousUrl();\r\n    }\r\n\r\n    onDeleteError(err: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not delete general subject, please contact admin\", \"error\")\r\n    }\r\n\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { ISubject } from '../shared/model/content/subject.model';\r\nimport { SubjectService } from './subject.service';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./subject-details.component.html\",\r\n    providers: [SubjectService]\r\n})\r\nexport class SubjectDetailsComponent implements OnInit {\r\n    subject: ISubject[] = [];\r\n    nodeType: string;\r\n    nodeName: string;\r\n    nodeDescription: string;\r\n    topicId: number;\r\n    subjectId: number;\r\n    active: boolean;\r\n\r\n    constructor(\r\n        public pluginService: PluginService,\r\n        protected subjectService: SubjectService,\r\n        public router: Router,\r\n        public activatedRoute: ActivatedRoute\r\n    ) {\r\n        this.active = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.pluginService.sideMenuToggle();\r\n        this.activatedRoute.data.subscribe(({ subject }) => {\r\n            this.subject = subject;\r\n            this.updateSubjectValues(subject);\r\n        });\r\n    }\r\n\r\n    updateSubjectValues(subject: ISubject[]) {\r\n        this.subject = subject;\r\n        this.pluginService.jsTree(\"#treeView\", this.subject, false);\r\n        this.subjectId = this.subject[0].data.id;\r\n    }\r\n\r\n    showSyllabusTreeDetails() {\r\n        var localThisObj = this;\r\n        $('#treeView')\r\n            .on('changed.jstree', function (e, data) {\r\n                var i, j, nodeTreeType: string;\r\n                for (i = 0, j = data.selected.length; i < j; i++) {\r\n                    localThisObj.nodeType = data.node.type;\r\n                    if (localThisObj.nodeType === \"root\") {\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                    }\r\n                    else if (localThisObj.nodeType === \"unit\") {\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                    } else if (localThisObj.nodeType === \"lesson\") {\r\n                        localThisObj.topicId = data.node.data.id;\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.objective;\r\n                    } else {\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    toggleTreeNodes() {\r\n        this.active = !this.active;\r\n        if (this.active) {\r\n            this.pluginService.openJsTreeAllNodes(\"#treeView\");\r\n        } else {\r\n            this.pluginService.closeJsTreeAllNodes(\"#treeView\")\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.showSyllabusTreeDetails();\r\n    }\r\n\r\n    public onBack() {\r\n        var localObj = this;\r\n        swal({\r\n            title: \"Are you sure to go previous page ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    localObj.router.navigateByUrl('/subject');\r\n                    localObj.pluginService.sideMenuToggle();\r\n                }\r\n            });\r\n    }\r\n}","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { JhiEventManager, JhiParseLinks } from 'ng-jhipster';\r\nimport { Subscription } from 'rxjs';\r\nimport { Principal } from '../core';\r\nimport { ITEMS_PER_PAGE } from '../shared';\r\nimport { HttpResponse, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { SubjectService } from './subject.service';\r\nimport { ISubject } from '../shared/model/content/subject.model';\r\nimport { ICurriculum } from '../shared/model/content/curriculum.model';\r\nimport { IGrade } from '../shared/model/content/grade.model';\r\nimport { CurriculumService } from '../curriculum/curriculum.service';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./subject-manage.component.html\",\r\n    providers: [SubjectService]\r\n})\r\nexport class SubjectManageComponent implements OnInit, OnDestroy {\r\n    subjects: ISubject[];\r\n    curriculumList: ICurriculum[] = [];\r\n    gradeList: IGrade[] = [];\r\n    eventSubscriber: Subscription;\r\n    totalItems: number;\r\n    itemsPerPage: number;\r\n    totalPages: number;\r\n    page: any;\r\n    predicate: any;\r\n    reverse: any;\r\n    links: any;\r\n    currentAccount: any;\r\n    selectedCurriculum: any;\r\n    selectedGrade: any;\r\n\r\n    constructor(\r\n        public _router: Router,\r\n        public activatedRoute: ActivatedRoute,\r\n        public curriculumService: CurriculumService,\r\n        public subjectService: SubjectService,\r\n        protected eventManager: JhiEventManager,\r\n        protected parseLinks: JhiParseLinks,\r\n        protected principalService: Principal,\r\n        public pluginService: PluginService\r\n    ) {\r\n        this.subjects = [];\r\n        this.itemsPerPage = ITEMS_PER_PAGE;\r\n        this.page = 0;\r\n        this.links = {\r\n            last: 0\r\n        };\r\n        this.predicate = 'id';\r\n        this.reverse = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.principalService.identity().then(account => {\r\n            this.currentAccount = account;\r\n        });\r\n        this.registerChangeInSubjects();\r\n        this.loadCurriculums();\r\n    }\r\n\r\n    reset() {\r\n        this.page = 0;\r\n        this.subjects = [];\r\n        this.loadSubjectList();\r\n    }\r\n\r\n    loadPage(page) {\r\n        this.page = page;\r\n        this.loadSubjectList();\r\n    }\r\n\r\n    loadCurriculums() {\r\n        this.curriculumService.getCurriculumSearch().subscribe(\r\n            (res: HttpResponse<ICurriculum[]>) => this.assignCurriculumList(res.body),\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        )\r\n    }\r\n\r\n    assignCurriculumList(data: ICurriculum[]) {\r\n        this.curriculumList = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            this.curriculumList.push(data[i]);\r\n        }\r\n    }\r\n\r\n    trackId(index: number, item: ISubject) {\r\n        return item.id;\r\n    }\r\n\r\n    sort() {\r\n        const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n        if (this.predicate !== 'id') {\r\n            result.push('id');\r\n        }\r\n        return result;\r\n    }\r\n\r\n    registerChangeInSubjects() {\r\n        this.eventSubscriber = this.eventManager.subscribe('subjectListModification', response => this.reset());\r\n    }\r\n\r\n    protected onError(errorMessage: string) {\r\n        this.pluginService.alertMessage(errorMessage, \"error\");\r\n    }\r\n\r\n    onCurriculumChange() {\r\n        let gradesApplicableFrom, gradesApplicableTo;\r\n        if (this.selectedCurriculum) {\r\n            gradesApplicableFrom = this.selectedCurriculum.gradesApplicableFrom;\r\n            gradesApplicableTo = this.selectedCurriculum.gradesApplicableTo;\r\n            this.generateGradeList(gradesApplicableFrom, gradesApplicableTo);\r\n            this.selectedGrade = null;\r\n        }\r\n    }\r\n\r\n    generateGradeList(min, max) {\r\n        this.gradeList = [];\r\n        for (var i = min; i <= max; i++) {\r\n            this.gradeList.push({\r\n                \"id\": i,\r\n                \"name\": i\r\n            });\r\n        }\r\n        return this.gradeList;\r\n    }\r\n\r\n    loadSubjectList() {\r\n        this.subjects = [];\r\n        if (this.selectedCurriculum && this.selectedGrade) {\r\n            this.subjectService\r\n                .getSubjectByCurriculumIdAndGradeId(this.selectedCurriculum.id, this.selectedGrade.id, null)\r\n                .subscribe(\r\n                    (res: HttpResponse<ISubject[]>) => this.paginateSubjects(res.body, res.headers),\r\n                    (res: HttpErrorResponse) => this.onError(res.message)\r\n                );\r\n        } else {\r\n            this.pluginService.alertMessage(\"Please select a filter and then apply\", \"error\")\r\n        }\r\n    }\r\n\r\n    protected paginateSubjects(data: ISubject[], headers: HttpHeaders) {\r\n        //this.links = this.parseLinks.parse(headers.get('link'));\r\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n        if (data.length > 0) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                this.subjects.push(data[i]);\r\n            }\r\n        } else {\r\n            this.pluginService.alertMessage(\"No data found..!\", \"warning\");\r\n        }\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ACTIVE } from '../shared/constants/common.constants'\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { SubjectService } from './subject.service';\r\nimport { ISubject } from '../shared/model/content/subject.model';\r\n\r\n@Component({\r\n    template: \"\",\r\n    providers: [SubjectService]\r\n})\r\nexport class SubjectPublishComponent implements OnInit {\r\n    constructor(\r\n        public router: Router,\r\n        public activatedRoute: ActivatedRoute,\r\n        public subjectService: SubjectService,\r\n        protected pluginService: PluginService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.data.subscribe(({ subject }) => {\r\n            this.publishSubject(subject);\r\n        });\r\n    }\r\n\r\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<ISubject>>) {\r\n        result.subscribe((res: HttpResponse<ISubject>) => this.onSaveSuccess(res), (errRes: HttpErrorResponse) => this.onSaveError(errRes));\r\n    }\r\n\r\n    publishSubject(subject) {\r\n        subject.status = ACTIVE;\r\n        this.subscribeToSaveResponse(this.subjectService.updateSubjectStatus(subject));\r\n        this.router.navigateByUrl('/subject');\r\n    }\r\n\r\n\r\n    onSaveSuccess(resp: HttpResponse<ISubject>) {\r\n        if (resp.body.status === ACTIVE) {\r\n            this.pluginService.alertMessage(\"Subject published successfully\", \"success\")\r\n        }\r\n    }\r\n\r\n    onSaveError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not publish, please contact admin\", \"error\")\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { INACTIVE } from '../shared/constants/common.constants'\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { SubjectService } from './subject.service';\r\nimport { ISubject } from '../shared/model/content/subject.model';\r\n\r\n@Component({\r\n    template: \"\",\r\n    providers: [SubjectService]\r\n})\r\nexport class SubjectUnpublishComponent implements OnInit {\r\n    constructor(\r\n        public router: Router,\r\n        public activatedRoute: ActivatedRoute,\r\n        public subjectService: SubjectService,\r\n        protected pluginService: PluginService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.data.subscribe(({ subject }) => {\r\n            this.unpublishGeneralSubject(subject);\r\n        });\r\n    }\r\n\r\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<ISubject>>) {\r\n        result.subscribe((res: HttpResponse<ISubject>) => this.onSaveSuccess(res), (errRes: HttpErrorResponse) => this.onSaveError(errRes));\r\n    }\r\n\r\n    unpublishGeneralSubject(subject) {\r\n        subject.status = INACTIVE;\r\n        this.subscribeToSaveResponse(this.subjectService.updateSubjectStatus(subject));\r\n        this.router.navigateByUrl('/subject');\r\n    }\r\n\r\n\r\n    onSaveSuccess(resp: HttpResponse<ISubject>) {\r\n        if (resp.body.status === INACTIVE) {\r\n            this.pluginService.alertMessage(\"Subject unpublished successfully\", \"success\")\r\n        }\r\n    }\r\n\r\n    onSaveError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not unpublish, please contact admin\", \"error\")\r\n    }\r\n\r\n}","import { Component, OnInit, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { DRAFT, CREATED, EDITED, DELETED, NOCHANGE, ACTIVE } from '../shared/constants/common.constants';\r\nimport { SubjectService } from './subject.service';\r\nimport { ISubject } from '../shared/model/content/subject.model';\r\nimport { CommonService } from '../shared/common/common.service';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./subject-update.component.html\",\r\n    providers: [SubjectService]\r\n})\r\nexport class SubjectUpdateComponent implements OnInit, AfterViewInit, AfterViewChecked {\r\n    subjectForm: FormGroup;\r\n    syllabusForm: FormGroup;\r\n    subject: ISubject[] = [];\r\n    updatedJSONTree: ISubject[] = [];\r\n    nodeTypes: any[] = [];\r\n    nodeTitle: string;\r\n    nodeDescription: string;\r\n    subjectName: string;\r\n    subjectDescription: string;\r\n    curriculum: string;\r\n    grade: string;\r\n    nodeType: string;\r\n    nodeId: string;\r\n    nodeOperationType: string;\r\n    modalTitleName: string;\r\n    enableNodeOperation: boolean;\r\n    enableEditNodeOperation: boolean;\r\n    disableDropdown: boolean;\r\n    enableModalOperation: boolean;\r\n    validateSubjectForm: boolean;\r\n    validateNodeForm: boolean;\r\n    validateNode: boolean;\r\n    enableExpandNode: boolean;\r\n    selectedNodeType: any;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private formBuilder: FormBuilder,\r\n        public pluginService: PluginService,\r\n        public subjectService: SubjectService,\r\n        public activatedRoute: ActivatedRoute,\r\n        public commonService: CommonService,\r\n        private changeDetectRef: ChangeDetectorRef\r\n    ) {\r\n        this.validateNodeForm = true;\r\n        this.validateNode = true;\r\n        this.enableExpandNode = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.pluginService.sideMenuToggle();\r\n        this.createSubjectGroup();\r\n        this.pluginService.stepper();\r\n        this.activatedRoute.data.subscribe(({ subject }) => {\r\n            this.updateSubjectValues(subject);\r\n        });\r\n        this.getNodeTypeList();\r\n    }\r\n\r\n    getNodeTypeList() {\r\n        this.commonService.getGeneralDataList().subscribe((nodeTypeData: any) => {\r\n            this.nodeTypes = nodeTypeData.subject;\r\n        });\r\n    }\r\n\r\n    createSubjectGroup() {\r\n        this.subjectForm = this.formBuilder.group({\r\n            curriculum: new FormControl(\"\"),\r\n            grade: new FormControl(\"\"),\r\n            subjectName: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(50)]),\r\n            subjectDescription: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(250)]),\r\n            isLanguage: new FormControl(false)\r\n        });\r\n        this.syllabusForm = this.formBuilder.group({\r\n            unitName: new FormControl(null),\r\n            unitDescription: new FormControl(null, [Validators.minLength(3), Validators.maxLength(250)]),\r\n            lessonName: new FormControl(null),\r\n            lessonObjective: new FormControl(null, [Validators.minLength(3), Validators.maxLength(250)])\r\n        })\r\n    }\r\n\r\n    get formControl() { return this.subjectForm.controls; }\r\n    get modalFormControl() { return this.syllabusForm.controls; }\r\n\r\n    onNodeTypeChange() {\r\n        const validators = [Validators.required, Validators.minLength(3), Validators.maxLength(75)];\r\n        if (this.selectedNodeType) {\r\n            this.nodeType = this.selectedNodeType.name;\r\n            if (this.nodeType === 'unit') {\r\n                this.enableModalOperation = true;\r\n                this.syllabusForm.addControl('unitName', new FormControl('', validators));\r\n                this.syllabusForm.addControl('lessonName', new FormControl('', null));\r\n            } else if (this.nodeType === 'lesson') {\r\n                this.enableModalOperation = true;\r\n                this.syllabusForm.addControl('lessonName', new FormControl('', validators));\r\n                this.syllabusForm.addControl('unitName', new FormControl('', null));\r\n            }\r\n        }\r\n    }\r\n\r\n    updateSubjectValues(subject: ISubject) {\r\n        var name, description, isLanguage, curriculumId, grade;\r\n        this.updateStatusForAllNode(subject);\r\n        name = subject[0].data.name;\r\n        description = subject[0].data.description;\r\n        isLanguage = subject[0].data.isLanguage;\r\n        grade = subject[0].data.grade;\r\n        curriculumId = subject[0].data.curriculumId;\r\n        this.subjectForm.setValue({\r\n            subjectName: name,\r\n            subjectDescription: description,\r\n            isLanguage: isLanguage,\r\n            curriculum: curriculumId,\r\n            grade: grade\r\n        });\r\n        this.pluginService.jsTree(\"#beforeChangeTree\", subject, false);\r\n        this.subjectForm.get('curriculum').disable();\r\n        this.subjectForm.get('grade').disable();\r\n    }\r\n\r\n    updateStatusForAllNode(subject) {\r\n        for (var i = 0; i < subject.length; i++) {\r\n            subject[i].data.editStatus = NOCHANGE;\r\n        }\r\n        this.subject = subject;\r\n    }\r\n\r\n    loadUpdatedSubjectTree() {\r\n        this.subject[0].text = this.subjectName;\r\n        this.subject[0].data.name = this.subjectName;\r\n        this.subject[0].data.description = this.subjectDescription;\r\n        this.subject[0].data.isLanguage = this.subjectForm.value.isLanguage;\r\n        this.pluginService.jsTree(\"#buildTree\", this.subject, true);\r\n    }\r\n\r\n    cancelForm() {\r\n        this.subjectForm.reset();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.nodeSelectedEvent();\r\n        this.generateJSONTreeOnDragAndDrop();\r\n    }\r\n\r\n    openUnitAndLessonModal() {\r\n        this.pluginService.showModalWindow(\"#subjectEditModal\");\r\n    }\r\n\r\n    closeUnitAndLessonModal() {\r\n        this.pluginService.hideModalWindow(\"#subjectEditModal\")\r\n    }\r\n\r\n    closeWithOutSavingNode() {\r\n        var localthisObject = this;\r\n        swal({\r\n            title: \"Are you sure to close without saving ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm === true) {\r\n                    localthisObject.closeUnitAndLessonModal();\r\n                    localthisObject.disableNodeOperations();\r\n                }\r\n            });\r\n    }\r\n\r\n    disableNodeOperations() {\r\n        this.enableNodeOperation = false;\r\n        this.nodeType = \"\"\r\n        this.enableNodeOperation = false;\r\n        this.nodeType = \"\"\r\n        this.resetFormValues();\r\n        let treeCallback = $('#buildTree').jstree(true);\r\n        treeCallback.deselect_all();\r\n    }\r\n\r\n    //Reset all form values\r\n    resetFormValues() {\r\n        this.syllabusForm.reset();\r\n        this.selectedNodeType = null;\r\n    }\r\n\r\n    //Tree selection and change method call\r\n    nodeSelectedEvent() {\r\n        let conceptThis = this;\r\n        $('#buildTree').on('changed.jstree', function (e, data) {\r\n            let i, j;\r\n            for (i = 0, j = data.selected.length; i < j; i++) {\r\n                conceptThis.nodeType = data.node.type;\r\n                if (conceptThis.nodeType === \"root\") {\r\n                    conceptThis.enableNodeOperation = true;\r\n                    conceptThis.enableEditNodeOperation = false;\r\n                } else if (conceptThis.nodeType === \"unit\") {\r\n                    conceptThis.enableEditNodeOperation = true;\r\n                    conceptThis.enableNodeOperation = true;\r\n                    conceptThis.nodeId = data.node.data.id;\r\n                    conceptThis.nodeTitle = data.node.data.name;\r\n                    conceptThis.nodeDescription = data.node.data.description;\r\n                    conceptThis.syllabusFormSetValues(conceptThis);\r\n                } else if (conceptThis.nodeType === \"lesson\") {\r\n                    conceptThis.enableNodeOperation = true;\r\n                    conceptThis.enableEditNodeOperation = true;\r\n                    conceptThis.nodeId = data.node.data.id;\r\n                    conceptThis.nodeTitle = data.node.data.name;\r\n                    conceptThis.nodeDescription = data.node.data.objective;\r\n                    conceptThis.syllabusFormSetValues(conceptThis);\r\n                } else {\r\n                    conceptThis.enableNodeOperation = false;\r\n                    conceptThis.enableEditNodeOperation = false;\r\n                }\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    //Unit and lesson details form setvalues method\r\n    syllabusFormSetValues(Objectthis) {\r\n        let nodeTypeIndex;\r\n        nodeTypeIndex = this.nodeTypes.findIndex(item => item.name === Objectthis.nodeType);\r\n        this.selectedNodeType = this.nodeTypes[nodeTypeIndex];\r\n        if (Objectthis.nodeType === \"unit\") {\r\n            this.syllabusForm.setValue({\r\n                unitName: Objectthis.nodeTitle,\r\n                unitDescription: Objectthis.nodeDescription,\r\n                lessonName: \"\",\r\n                lessonObjective: \"\"\r\n            })\r\n        } else {\r\n            this.syllabusForm.setValue({\r\n                unitName: \"\",\r\n                unitDescription: \"\",\r\n                lessonName: Objectthis.nodeTitle,\r\n                lessonObjective: Objectthis.nodeDescription,\r\n            })\r\n        }\r\n    }\r\n\r\n    //Create node method\r\n    createNode() {\r\n        this.nodeOperationType = \"create\";\r\n        this.modalTitleName = \"Add new\";\r\n        this.disableDropdown = false;\r\n        this.openUnitAndLessonModal();\r\n        this.nodeType = \"\";\r\n        this.resetFormValues();\r\n        this.disableDropdown = false;\r\n        this.enableModalOperation = false;\r\n        this.selectedNodeType = null;\r\n    }\r\n\r\n    //Edit node method\r\n    editNode() {\r\n        this.nodeOperationType = \"edit\";\r\n        this.modalTitleName = \"Edit\";\r\n        this.disableDropdown = true;\r\n        this.syllabusForm.patchValue({\r\n            unitName: this.nodeTitle,\r\n            unitDescription: this.nodeDescription,\r\n            lessonName: this.nodeTitle,\r\n            lessonObjective: this.nodeDescription\r\n        })\r\n        this.openUnitAndLessonModal();\r\n        this.enableModalOperation = true;\r\n    }\r\n\r\n    trimValue(value) {\r\n        if (value === null || value === undefined) {\r\n            return value;\r\n        } else {\r\n            return value.trim();\r\n        }\r\n    }\r\n\r\n    validateSubjectFormValues() {\r\n        this.subjectName = this.trimValue(this.subjectForm.value.subjectName);\r\n        this.subjectDescription = this.trimValue(this.subjectForm.value.subjectDescription);\r\n        if (this.subjectName === \"\" || this.subjectName === undefined || this.subjectName === null) {\r\n            this.validateSubjectForm = true;\r\n        } else {\r\n            this.validateSubjectForm = false;\r\n        }\r\n        if (this.subjectForm.invalid) {\r\n            this.validateSubjectForm = true;\r\n        }\r\n        if (this.subjectForm.valid) {\r\n            this.validateSubjectForm = false;\r\n        }\r\n    }\r\n\r\n    validateUnitAndLessonForm() {\r\n        let unitName, lessonName;\r\n        unitName = this.trimValue(this.syllabusForm.value.unitName);\r\n        lessonName = this.trimValue(this.syllabusForm.value.lessonName);\r\n        if (this.nodeType === 'unit') {\r\n            if (unitName === null || unitName === \"\" || unitName === undefined) {\r\n                this.validateNodeForm = true;\r\n            } else {\r\n                this.validateNodeForm = false;\r\n            }\r\n        } else if (this.nodeType === 'lesson') {\r\n            if (lessonName === null || lessonName === \"\" || lessonName === undefined) {\r\n                this.validateNodeForm = true;\r\n            } else {\r\n                this.validateNodeForm = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        //Subject Form Validation\r\n        this.validateSubjectFormValues();\r\n        //Unit and lesson form validation\r\n        this.validateUnitAndLessonForm();\r\n        this.changeDetectRef.detectChanges();\r\n    }\r\n\r\n    //Save node method\r\n    saveNode() {\r\n        if (this.syllabusForm.valid) {\r\n            this.validateNodeForm = false;\r\n            var newNodeArray, position, parent, treeCallback, jsonArray, nodeIndex, arrayDetails, selectedNodeID, data;\r\n            position = 'last';\r\n            parent = $('#buildTree').jstree('get_selected')[0];\r\n            treeCallback = $('#buildTree').jstree(true);\r\n            jsonArray = treeCallback.get_json('#', { no_state: true, no_li_attr: true, no_a_attr: true, flat: true });\r\n            selectedNodeID = treeCallback.get_selected()[0];\r\n            nodeIndex = jsonArray.findIndex(item => item.id === selectedNodeID);\r\n            if (this.nodeOperationType === \"create\") {\r\n                if (this.nodeType === \"unit\") {\r\n                    this.nodeTitle = this.trimValue(this.syllabusForm.value.unitName);\r\n                    this.nodeDescription = this.trimValue(this.syllabusForm.value.unitDescription);\r\n                    newNodeArray = {\r\n                        \"icon\": \"fe fe-server\",\r\n                        \"text\": this.nodeTitle,\r\n                        \"type\": \"unit\",\r\n                        \"data\": {\r\n                            \"name\": this.nodeTitle,\r\n                            \"description\": this.nodeDescription,\r\n                            \"editStatus\": CREATED,\r\n                            \"objective\": \"\",\r\n                            \"orderNumber\": 0,\r\n                            \"status\": null,\r\n                            \"fullName\": \"\",\r\n                            \"curriculumId\": null,\r\n                            \"grade\": null\r\n                        }\r\n                    }\r\n                    $('#buildTree').jstree().create_node(parent, newNodeArray, position);\r\n                    jsonArray = treeCallback.get_json('#', { no_state: true, no_li_attr: true, no_a_attr: true, flat: true });\r\n                }\r\n                else if (this.nodeType === \"lesson\") {\r\n                    this.nodeTitle = this.trimValue(this.syllabusForm.value.lessonName);\r\n                    this.nodeDescription = this.trimValue(this.syllabusForm.value.lessonObjective);\r\n                    newNodeArray = {\r\n                        \"icon\": \"fa fa-file\",\r\n                        \"text\": this.nodeTitle,\r\n                        \"type\": \"lesson\",\r\n                        \"data\": {\r\n                            \"name\": this.nodeTitle,\r\n                            \"objective\": this.nodeDescription,\r\n                            \"editStatus\": CREATED,\r\n                            \"description\": \"\",\r\n                            \"orderNumber\": 0,\r\n                            \"status\": null,\r\n                            \"fullName\": \"\",\r\n                            \"curriculumId\": null,\r\n                            \"grade\": null\r\n                        }\r\n                    }\r\n                    jsonArray[nodeIndex].text = this.nodeTitle;\r\n                    $('#buildTree').jstree().create_node(parent, newNodeArray, position);\r\n                    jsonArray = treeCallback.get_json('#', { no_state: true, no_li_attr: true, no_a_attr: true, flat: true });\r\n                }\r\n                this.validateNode = false;\r\n            } if (this.nodeOperationType === \"edit\") {\r\n                this.nodeType = jsonArray[nodeIndex].type;\r\n                if (this.nodeType === \"unit\") {\r\n                    this.nodeTitle = this.trimValue(this.syllabusForm.value.unitName);\r\n                    this.nodeDescription = this.trimValue(this.syllabusForm.value.unitDescription);\r\n                    jsonArray[nodeIndex].text = this.nodeTitle;\r\n                    data = {\r\n                        \"id\": this.nodeId,\r\n                        \"name\": this.nodeTitle,\r\n                        \"description\": this.nodeDescription,\r\n                        \"editStatus\": EDITED,\r\n                        \"objective\": \"\",\r\n                        \"orderNumber\": 0,\r\n                        \"status\": null,\r\n                        \"fullName\": \"\"\r\n                    }\r\n                    arrayDetails = jsonArray[nodeIndex];\r\n                    arrayDetails.data = data;\r\n                } else if (this.nodeType === \"lesson\") {\r\n                    this.nodeTitle = this.trimValue(this.syllabusForm.value.lessonName);\r\n                    this.nodeDescription = this.trimValue(this.syllabusForm.value.lessonObjective);\r\n                    jsonArray[nodeIndex].text = this.nodeTitle;\r\n                    data = {\r\n                        \"id\": this.nodeId,\r\n                        \"name\": this.nodeTitle,\r\n                        \"objective\": this.nodeDescription,\r\n                        \"editStatus\": EDITED,\r\n                        \"description\": \"\",\r\n                        \"orderNumber\": 0,\r\n                        \"status\": null,\r\n                        \"fullName\": \"\",\r\n                        \"curriculumId\": null,\r\n                        \"grade\": null\r\n                    }\r\n                    arrayDetails = jsonArray[nodeIndex];\r\n                    arrayDetails.data = data;\r\n                }\r\n                this.validateNode = false;\r\n            } else if (this.nodeOperationType === \"delete\") {\r\n                this.nodeType = jsonArray[nodeIndex].type;\r\n                if (this.nodeType === \"unit\") {\r\n                    data = {\r\n                        \"id\": this.nodeId,\r\n                        \"name\": this.nodeTitle,\r\n                        \"description\": this.nodeDescription,\r\n                        \"editStatus\": DELETED,\r\n                        \"objective\": \"\",\r\n                        \"orderNumber\": 0,\r\n                        \"status\": null,\r\n                        \"fullName\": \"\",\r\n                        \"curriculumId\": null,\r\n                        \"grade\": null\r\n                    }\r\n                    arrayDetails = jsonArray[nodeIndex];\r\n                    arrayDetails.data = data;\r\n                    arrayDetails.type = 'unit';\r\n                    jsonArray[nodeIndex].icon = \"fa fa-trash\";\r\n\r\n                    //Update a child node status\r\n                    if (treeCallback.is_parent(selectedNodeID) === true) {\r\n                        this.getChildrenDOM(selectedNodeID, jsonArray);\r\n                    }\r\n                } else if (this.nodeType === \"lesson\") {\r\n                    data = {\r\n                        \"id\": this.nodeId,\r\n                        \"name\": this.nodeTitle,\r\n                        \"objective\": this.nodeDescription,\r\n                        \"editStatus\": DELETED,\r\n                        \"description\": \"\",\r\n                        \"orderNumber\": 0,\r\n                        \"status\": null,\r\n                        \"fullName\": \"\",\r\n                        \"curriculumId\": null,\r\n                        \"grade\": null\r\n                    }\r\n                    arrayDetails = jsonArray[nodeIndex];\r\n                    arrayDetails.data = data;\r\n                    arrayDetails.type = 'lesson';\r\n                    jsonArray[nodeIndex].icon = \"fa fa-trash\";\r\n                }\r\n                this.validateNode = false;\r\n            }\r\n            this.pluginService.jsTree(\"#buildTree\", jsonArray, true)\r\n            this.changeNodeStatus(jsonArray);\r\n            treeCallback.deselect_all();\r\n            this.nodeType = \"\";\r\n            this.enableNodeOperation = false;\r\n            this.closeUnitAndLessonModal();\r\n            this.resetFormValues();\r\n        }\r\n        if (this.syllabusForm.invalid) {\r\n            this.validateNodeForm = true;\r\n            return;\r\n        }\r\n    }\r\n\r\n    //Delete node method\r\n    deleteNode() {\r\n        this.nodeOperationType = \"delete\";\r\n        this.saveNode();\r\n    }\r\n\r\n    //Get children DOM\r\n    getChildrenDOM(selectedNode, jsonArray) {\r\n        var treeCallBack, childrenDOM, childDOM, lastChildDOM, subChildDOM, i, j, k, l, childrenIDs1 = [], childrenIDs2 = [], childrenIDs3 = [], childrenIDs4 = [], childrenIDs = [];\r\n        treeCallBack = $(\"#buildTree\").jstree(true)\r\n        childrenDOM = treeCallBack.get_children_dom(selectedNode);\r\n        for (i = 0; i < childrenDOM.length; i++) {\r\n            childrenIDs1.push({ \"id\": childrenDOM[i].id });\r\n            if (treeCallBack.is_parent(childrenIDs1[i]) === true) {\r\n                childDOM = treeCallBack.get_children_dom(childrenIDs1[i]);\r\n                for (j = 0; j < childDOM.length; j++) {\r\n                    childrenIDs2.push({ \"id\": childDOM[j].id });\r\n                    if (treeCallBack.is_parent(childrenIDs2[j]) === true) {\r\n                        subChildDOM = treeCallBack.get_children_dom(childrenIDs2[j]);\r\n                        for (k = 0; k < subChildDOM.length; k++) {\r\n                            childrenIDs3.push({ \"id\": subChildDOM[k].id });\r\n                            if (treeCallBack.is_parent(childrenIDs3[k]) === true) {\r\n                                lastChildDOM = treeCallBack.get_children_dom(childrenIDs3[k]);\r\n                                for (l = 0; l < lastChildDOM.length; l++) {\r\n                                    childrenIDs4.push({ \"id\": lastChildDOM[l].id });\r\n                                    this.updateDeleteStatus(childrenIDs4, jsonArray);\r\n                                }\r\n                            }\r\n                            this.updateDeleteStatus(childrenIDs3, jsonArray);\r\n                        }\r\n                    }\r\n                    this.updateDeleteStatus(childrenIDs2, jsonArray);\r\n                }\r\n            }\r\n        }\r\n        this.updateDeleteStatus(childrenIDs1, jsonArray);\r\n        this.updatedJSONTree = jsonArray;\r\n    }\r\n\r\n    //Update delete status\r\n    updateDeleteStatus(childrenIDs, jsonArray) {\r\n        var k, nodeIndex, nodeType, data, childrenIDs;\r\n        for (k = 0; k < childrenIDs.length; k++) {\r\n            nodeIndex = jsonArray.findIndex(item => item.id === childrenIDs[k].id);\r\n            nodeType = jsonArray[nodeIndex].type;\r\n            if (nodeType === \"unit\") {\r\n                data = {\r\n                    \"id\": this.nodeId,\r\n                    \"name\": this.nodeTitle,\r\n                    \"description\": this.nodeDescription,\r\n                    \"editStatus\": DELETED,\r\n                    \"objective\": \"\",\r\n                    \"orderNumber\": 0,\r\n                    \"status\": null,\r\n                    \"fullName\": \"\",\r\n                    \"curriculumId\": null,\r\n                    \"grade\": null\r\n                }\r\n                jsonArray[nodeIndex].data = data;\r\n                jsonArray[nodeIndex].type = 'unit';\r\n                jsonArray[nodeIndex].icon = \"fa fa-trash\";\r\n            } else {\r\n                data = {\r\n                    \"id\": this.nodeId,\r\n                    \"name\": this.nodeTitle,\r\n                    \"objective\": this.nodeDescription,\r\n                    \"editStatus\": DELETED,\r\n                    \"description\": \"\",\r\n                    \"orderNumber\": 0,\r\n                    \"status\": null,\r\n                    \"fullName\": \"\",\r\n                    \"curriculumId\": null,\r\n                    \"grade\": null\r\n                }\r\n                jsonArray[nodeIndex].data = data;\r\n                jsonArray[nodeIndex].type = 'lesson';\r\n                jsonArray[nodeIndex].icon = \"fa fa-trash\";\r\n            }\r\n        }\r\n    }\r\n\r\n    //Generate JSON tree on drag and drop\r\n    generateJSONTreeOnDragAndDrop() {\r\n        var localObj = this;\r\n        $(document).on('dnd_stop.vakata', function (e, data) {\r\n            setTimeout(function () {\r\n                var json = $(\"#buildTree\").jstree(true).get_json('#', { no_state: true, no_li_attr: true, no_a_attr: true, flat: true });\r\n                localObj.updateJSONTreeWithOrderNum(json);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<ISubject>>) {\r\n        result.subscribe((res: HttpResponse<ISubject>) => this.onSaveSuccess(res), (ErrRes: HttpErrorResponse) => this.onSaveError(ErrRes));\r\n    }\r\n\r\n    saveAsDraft() {\r\n        this.updatedJSONTree[0].data.status = DRAFT;\r\n        this.saveGeneralSubject();\r\n    }\r\n\r\n    saveAndPublish() {\r\n        this.updatedJSONTree[0].data.status = ACTIVE;\r\n        this.saveGeneralSubject();\r\n    }\r\n\r\n    saveGeneralSubject() {\r\n        this.subscribeToSaveResponse(this.subjectService.saveSubject(this.createSubjectForm()));\r\n    }\r\n\r\n    protected onSaveSuccess(res: HttpResponse<ISubject>) {\r\n        this.pluginService.alertMessage(\"General subject saved successfully\", \"success\")\r\n        this.previousUrl();\r\n        this.resetFormValues();\r\n        this.subjectForm.reset();\r\n    }\r\n\r\n    protected onSaveError(res: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not save, please contact admin\", \"error\")\r\n    }\r\n\r\n    private createSubjectForm(): ISubject[] {\r\n        return this.updatedJSONTree;\r\n    }\r\n\r\n    //update JSON array with order number \r\n    updateJSONTreeWithOrderNum(json) {\r\n        this.updatedJSONTree = [];\r\n        this.updatedJSONTree = json;\r\n        if (this.updatedJSONTree[0].type === \"unit\" || this.updatedJSONTree[0].type === \"lesson\") {\r\n            this.pluginService.alertMessage(\"More than one root element is not allowed, please remove the additional root element and proceed\", \"error\");\r\n            this.validateNode = true;\r\n        } else if (this.updatedJSONTree[0].type === \"root\") {\r\n            this.validateNode = false;\r\n        }\r\n        for (let i = 0; i < this.updatedJSONTree.length; i++) {\r\n            this.updatedJSONTree[i].data.orderNumber = i;\r\n            //Remove unwanted objects (for api call) from the JSON tree\r\n            delete this.updatedJSONTree[i].state;\r\n            delete this.updatedJSONTree[i].a_attr;\r\n            delete this.updatedJSONTree[i].li_attr;\r\n            if ((this.updatedJSONTree[i].type !== \"root\") && (this.updatedJSONTree[i].parent === \"#\")) {\r\n                this.pluginService.alertMessage(\"More than one root element is not allowed, please remove the additional root element and proceed\", \"error\");\r\n                this.validateNode = true;\r\n            }\r\n        }\r\n        this.pluginService.jsTree(\"#afterChangeTree\", this.updatedJSONTree, false);\r\n    }\r\n\r\n    //If new node is created and edited , status will be created only \r\n    //If new node is created and deleted , remove an element from the updated array\r\n    changeNodeStatus(json) {\r\n        let selectedNodeID, treeCallback, updatedJson;\r\n        for (let i = 0; i < json.length; i++)\r\n            if (json[i].data.id === undefined) {\r\n                if (json[i].data.editStatus === EDITED) {\r\n                    json[i].data.editStatus = CREATED\r\n                } else if (json[i].data.editStatus === DELETED) {\r\n                    treeCallback = $('#buildTree').jstree(true);\r\n                    selectedNodeID = treeCallback.get_selected()[0];\r\n                    treeCallback.delete_node($('#' + selectedNodeID))\r\n                    updatedJson = $(\"#buildTree\").jstree(true).get_json('#', { no_state: true, no_li_attr: true, no_a_attr: true, flat: true })\r\n                    json = updatedJson;\r\n                }\r\n            }\r\n        this.updateJSONTreeWithOrderNum(json);\r\n    }\r\n\r\n    cancelNode() {\r\n        this.resetFormValues();\r\n    }\r\n\r\n    protected onError(errorMessage: string) {\r\n        this.pluginService.alertMessage(errorMessage, \"error\");\r\n    }\r\n\r\n    toggleTreeNodes() {\r\n        this.enableExpandNode = !this.enableExpandNode;\r\n        if (this.enableExpandNode) {\r\n            this.pluginService.openJsTreeAllNodes(\"#buildTree\");\r\n        } else {\r\n            this.pluginService.closeJsTreeAllNodes(\"#buildTree\")\r\n        }\r\n    }\r\n\r\n    onBack() {\r\n        var localObj = this;\r\n        swal({\r\n            title: \"Are you sure to go previous page ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    localObj.previousUrl();\r\n                    localObj.pluginService.sideMenuToggle();\r\n                }\r\n            });\r\n    }\r\n\r\n    previousUrl() {\r\n        this.router.navigateByUrl('/subject')\r\n    }\r\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgJhipsterModule } from 'ng-jhipster';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from '../shared';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { subjectRoute } from './subject.route';\r\nimport { SubjectManageComponent } from './subject-manage.component';\r\nimport { SubjectPublishComponent } from './subject-update-publish.component';\r\nimport { SubjectDeleteComponent } from './subject-delete.component';\r\nimport { SubjectUnpublishComponent } from './subject-update-unpublish.component';\r\nimport { SubjectCreateComponent } from './subject-create.component';\r\nimport { SubjectUpdateComponent } from './subject-update.component';\r\nimport { SubjectDetailsComponent } from './subject-details.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(subjectRoute),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgJhipsterModule,\r\n    InfiniteScrollModule,\r\n    NgbModule\r\n  ],\r\n  declarations: [\r\n    SubjectManageComponent,\r\n    SubjectCreateComponent,\r\n    SubjectUpdateComponent,\r\n    SubjectDetailsComponent,\r\n    SubjectDeleteComponent,\r\n    SubjectPublishComponent,\r\n    SubjectUnpublishComponent\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class SubjectModule {\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\r\nimport { UserRouteAccessService } from '../core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { SubjectService } from './subject.service';\r\nimport { ISubject, Subject } from '../shared/model/content/subject.model';\r\nimport { SubjectPublishComponent } from './subject-update-publish.component';\r\nimport { SubjectManageComponent } from './subject-manage.component';\r\nimport { SubjectDeleteComponent } from './subject-delete.component';\r\nimport { SubjectUnpublishComponent } from './subject-update-unpublish.component';\r\nimport { SubjectCreateComponent } from './subject-create.component';\r\nimport { SubjectUpdateComponent } from './subject-update.component';\r\nimport { SubjectDetailsComponent } from './subject-details.component';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SubjectResolve implements Resolve<ISubject> {\r\n    constructor(private service: SubjectService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISubject> {\r\n        const id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.getSubjectBySubjectId(id).pipe(\r\n                filter((response: HttpResponse<ISubject>) => response.ok),\r\n                map((subject: HttpResponse<ISubject>) => subject.body)\r\n            );\r\n        }\r\n        return of(new Subject());\r\n    }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SubjectWithTreeResolve implements Resolve<any> {\r\n    constructor(private service: SubjectService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n        const id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.getSubjectTreeBySubjectId(id).pipe(\r\n                filter((response: HttpResponse<any>) => response.ok),\r\n                map((subject: HttpResponse<any>) => subject.body)\r\n            );\r\n        }\r\n        return of(new Subject());\r\n    }\r\n}\r\n\r\nexport const subjectRoute: Routes = [\r\n    {\r\n        path: '',\r\n        component: SubjectManageComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Manage subjects'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'create',\r\n        component: SubjectCreateComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Create new subject'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: SubjectUpdateComponent,\r\n        resolve: {\r\n            subject: SubjectWithTreeResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Edit subject',\r\n            action: 'edit'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: SubjectDetailsComponent,\r\n        resolve: {\r\n            subject: SubjectWithTreeResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'View subject'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/delete',\r\n        component: SubjectDeleteComponent,\r\n        resolve: {\r\n            subject: SubjectResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Delete subject'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/publish',\r\n        component: SubjectPublishComponent,\r\n        resolve: {\r\n            subject: SubjectResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Publish subject',\r\n            action: 'publish'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/unpublish',\r\n        component: SubjectUnpublishComponent,\r\n        resolve: {\r\n            subject: SubjectResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Unpublish subject',\r\n            action: 'unpublish'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { ISubject } from '../shared/model/content/subject.model';\r\nimport { ACTIVE } from '../shared/constants/common.constants';\r\n\r\ntype EntityResponseType = HttpResponse<ISubject>;\r\ntype EntityArrayResponseType = HttpResponse<ISubject[]>;\r\n\r\nlet headers: HttpHeaders = new HttpHeaders();\r\nheaders = headers.append('Access-Control-Allow-Origin', '*').append('Access-Control-Allow-Headers', '*');\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SubjectService {\r\n\r\n    public subjectResourceUrl = environment.API_URL + 'services/learning/api/curriculum-subjects';\r\n    public subjectResourceUrlWithTree = environment.API_URL + 'services/learning/api/curriculum-subjects/subject-tree';\r\n    public subjectResourceUrlSearch = environment.API_URL + 'services/learning/api/curriculum-subjects/search';\r\n\r\n    constructor(protected http: HttpClient) { }\r\n\r\n    getSubjectBySubjectId(id: number): Observable<EntityResponseType> {\r\n        return this.http.get<ISubject>(`${this.subjectResourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    updateSubjectStatus(generalSubject: ISubject): Observable<EntityResponseType> {\r\n        return this.http.put<ISubject>(this.subjectResourceUrl, generalSubject, { observe: 'response' });\r\n    }\r\n\r\n    delete(id: number): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.subjectResourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    saveSubject(generalSubject: ISubject[]): Observable<EntityResponseType> {\r\n        return this.http.post<ISubject>(this.subjectResourceUrlWithTree, generalSubject, { headers: headers, observe: 'response' });\r\n    }\r\n\r\n    getSubjectByCurriculumIdAndGradeId(curriculumId, gradeId, status): Observable<EntityArrayResponseType> {\r\n        let reqJSON;\r\n        if (status === ACTIVE) {\r\n            reqJSON = {\r\n                \"curriculumId\": curriculumId,\r\n                \"grade\": gradeId,\r\n                \"status\": status\r\n            }\r\n        } else {\r\n            reqJSON = {\r\n                \"curriculumId\": curriculumId,\r\n                \"grade\": gradeId\r\n            }\r\n        }\r\n\r\n        return this.http.post<ISubject[]>(this.subjectResourceUrlSearch, reqJSON, { observe: 'response' });\r\n    }\r\n\r\n    getSubjectTreeBySubjectId(id: number): Observable<EntityArrayResponseType> {\r\n        return this.http.get<ISubject[]>(`${this.subjectResourceUrlWithTree}/${id}`, { observe: 'response' });\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"subject-subject-module-es5.js"}