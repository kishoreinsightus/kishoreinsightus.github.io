{"version":3,"sources":["./src/app/general-concept-topic/general-concept-question-manage.component.html","./src/app/general-concept-topic/general-concept-question-manage.component.ts","./src/app/general-concept-topic/general-concept-topic.module.ts","./src/app/general-concept-topic/general-concept-topic.route.ts"],"names":[],"mappings":"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","file":"general-concept-topic-general-concept-topic-module-es2015.js","sourcesContent":["export default \"<div class=\\\"col-12 filterbg my-4 rounded\\\">\\r\\n    <div class=\\\"filtericon font-20\\\">\\r\\n        <i class=\\\"fa fa-filter\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"row d-flex justify-content-start align-items-center\\\">\\r\\n        <div class=\\\"col-xxl-3 mb-3\\\">\\r\\n            <ng-select [items]=\\\"allGrades\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"name\\\"\\r\\n                placeholder=\\\"Select grade\\\" [(ngModel)]=\\\"selectedGeneralSubjectGrade\\\"\\r\\n                (change)=\\\"onGeneralSubjectGradeChange()\\\">\\r\\n            </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"col-xxl-3 mb-3\\\">\\r\\n            <ng-select [items]=\\\"subjects\\\" bindLabel=\\\"title\\\" placeholder=\\\"Select subject\\\" [(ngModel)]=\\\"selectedSubject\\\">\\r\\n            </ng-select>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-end pb-3 row\\\">\\r\\n        <div class=\\\"col-xxl-2\\\">\\r\\n            <button class=\\\"btn btn-success float-right waves-effect waves-light\\\" (click)=\\\"loadSubjectTree()\\\">\\r\\n                <i class=\\\"fa fa-filter mr-2\\\"></i>Apply\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xxl-4 mb-3 py-3\\\">\\r\\n        <div class=\\\"d-flex justify-content-start mb-2\\\" *ngIf=\\\"subjectTree.length > 1\\\">\\r\\n            <div class=\\\"btn btn-primary mr-2\\\" (click)=\\\"toggleTreeNodes()\\\">\\r\\n                <i class=\\\"fa fa-clone mr-2\\\"></i>\\r\\n                <span *ngIf=\\\"enableExpandNode === false\\\">\\r\\n                    Expand all\\r\\n                </span>\\r\\n                <span *ngIf=\\\"enableExpandNode === true\\\">\\r\\n                    Collapse all\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tree-scroll\\\">\\r\\n            <div id=\\\"treeView\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xxl-8 mb-3 py-3\\\">\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-start badge-lightBlue rounded p-2 mb-2\\\" *ngIf=\\\"subjectTree.length > 1\\\">\\r\\n            <div>\\r\\n                NOTE : <i class=\\\"fa fa-book ml-2\\\"></i> - Subject,<i class=\\\"fa fa-sitemap ml-2\\\"></i> - Concept,\\r\\n                <i class=\\\"fa fa-file ml-2\\\"></i> - Topic, <i class=\\\"fa fa-times text-danger ml-2\\\"></i> - No question is\\r\\n                mapped\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'root'\\\">\\r\\n            <p><b>Subject name</b></p>\\r\\n            <p>{{nodeName}}</p>\\r\\n            <p><b>Subject description</b></p>\\r\\n            <p>{{nodeDescription}}</p>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'concept'\\\">\\r\\n            <div class=\\\"w-100\\\">\\r\\n                <p><b>Concept description</b></p>\\r\\n                <p class=\\\"mb-2\\\">{{nodeDescription}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex align-items-start flex-wrap justify-content-md-between justify-content-lg-end w-100\\\">\\r\\n                <div class=\\\"btn btn-info mb-2 mr-2\\\" (click)=\\\"openPreviewQuestionModal()\\\" *ngIf=\\\"questions.length > 0\\\">\\r\\n                    <i class=\\\"fa fa-list-alt mr-2\\\"></i> Preview questions\\r\\n                    <span class=\\\"badge badge-light\\\">{{questions.length}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"btn btn-success mb-2 mr-2\\\" (click)=\\\"openSimulateQuestionModal()\\\"\\r\\n                    *ngIf=\\\"questions.length > 0\\\">\\r\\n                    <i class=\\\"fa fa-cogs mr-2\\\"></i> Simulate questions\\r\\n                    <span class=\\\"badge badge-light\\\">{{questions.length}}</span>\\r\\n                </div>\\r\\n                <a class=\\\"btn btn-primary text-white mb-2 mr-2\\\" target=\\\"_blank\\\"\\r\\n                    [routerLink]=\\\"['/general-concept-and-topic',topicId,'general-topic-question-create']\\\">\\r\\n                    <i class=\\\"fa fa-plus-circle mr-2\\\"></i> Create new question\\r\\n                </a>\\r\\n                <div class=\\\"btn btn-warning text-white mb-2\\\" (click)=\\\"loadUpdatedTopicQuestions()\\\">\\r\\n                    <i class=\\\"fa fa-refresh mr-2\\\"></i> Refresh\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"accordion\\\" id=\\\"questions\\\">\\r\\n                <div class=\\\"mb-2 acd-group\\\" *ngFor=\\\"let question of questions;let index=index\\\">\\r\\n                    <div class=\\\"card-header border\\\">\\r\\n                        <h5 class=\\\"mb-0\\\">\\r\\n                            <a href=\\\"#questionDetail{{question.id}}\\\"\\r\\n                                class=\\\"btn-block text-left text-muted acd-heading collapsed d-flex\\\"\\r\\n                                data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\">\\r\\n                                <div style=\\\"width: 99%;\\\" [MathJax]=\\\"question.questionText\\\">\\r\\n                                </div>\\r\\n                            </a>\\r\\n                        </h5>\\r\\n                    </div>\\r\\n                    <div id=\\\"questionDetail{{question.id}}\\\" class=\\\"collapse\\\" data-parent=\\\"#questions\\\">\\r\\n                        <div class=\\\"card-body p-3\\\">\\r\\n                            <div class=\\\"d-flex justify-content-between mb-2\\\">\\r\\n                                <div>\\r\\n                                    <b>Question type</b> : {{question.questionType}}\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <b>Question category</b> : {{question.questionCategory}}\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <b>Completexity level</b> : {{question.complexityLevel}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xxl-4 p-0 mb-2\\\">\\r\\n                                <ng-select [items]=\\\"topicsList\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"text\\\"\\r\\n                                    placeholder=\\\"Select topic\\\" [(ngModel)]=\\\"question.mappedTopic\\\">\\r\\n                                </ng-select>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex justify-content-end w-100\\\">\\r\\n                                <a class=\\\"btn btn-info  mr-2 mb-2 d-flex justify-content-center align-items-center\\\"\\r\\n                                    target=\\\"_blank\\\"\\r\\n                                    [routerLink]=\\\"['/general-concept-and-topic', question.id, 'general-topic-question-view' ]\\\">\\r\\n                                    <i class=\\\"fa fa-eye mr-2\\\"></i> View\\r\\n                                </a>\\r\\n                                <a class=\\\"btn btn-success mr-2 mb-2 d-flex justify-content-center align-items-center\\\"\\r\\n                                    target=\\\"_blank\\\"\\r\\n                                    [routerLink]=\\\"['/general-concept-and-topic', question.id, 'general-topic-question-edit' ]\\\">\\r\\n                                    <i class=\\\"fa fa-edit mr-2\\\"></i> Edit\\r\\n                                </a>\\r\\n                                <a class=\\\"btn btn-danger mr-2 mb-2 d-flex justify-content-center align-items-center\\\"\\r\\n                                    (click)=\\\"deleteTopicQuestions(question.id)\\\">\\r\\n                                    <i class=\\\"fa fa-trash mr-2\\\"></i> Delete\\r\\n                                </a>\\r\\n                                <a class=\\\"btn btn-success mb-2 d-flex justify-content-center align-items-center\\\"\\r\\n                                    (click)=\\\"updateQuestion()\\\">\\r\\n                                    <i class=\\\"fa fa-save mr-2\\\"></i> Save\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'topic'\\\">\\r\\n            <div class=\\\"w-100\\\">\\r\\n                <p><b>Topic name</b></p>\\r\\n                <p class=\\\"mb-2\\\">{{nodeName}}</p>\\r\\n                <p><b>Topic description</b></p>\\r\\n                <p class=\\\"mb-2\\\">{{nodeDescription}}</p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal\\\" id=\\\"simulateQuestionModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"simulateQuestionModal\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-notify\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header bg-warning d-flex align-items-center\\\">\\r\\n                <h5 class=\\\"modal-title text-white\\\">\\r\\n                    Simulate question - {{nodeName}}\\r\\n                </h5>\\r\\n                <div class=\\\"close btn btn-xl\\\" (click)=\\\"closeSimulateQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div id=\\\"questionSimulateIndicators\\\" class=\\\"carousel slide carousel-fade\\\" data-ride=\\\"carousel\\\"\\r\\n                    data-interval=\\\"false\\\">\\r\\n                    <div class=\\\"carousel-inner\\\">\\r\\n                        <div class=\\\"carousel-item\\\" [ngClass]=\\\"{'active': questionIndex === 0}\\\"\\r\\n                            *ngFor=\\\"let questiondata of topicQuestions;let questionIndex = index;\\\">\\r\\n                            <div\\r\\n                                *ngIf=\\\"questiondata.questionType === 'MCQ_SINGLE' || questiondata.questionType === 'MCQ_MULTIPLE' || questiondata.questionType === 'MCQ_TRUE_FALSE'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row mb-3 p-3 text-capitalize\\\">\\r\\n                                    <div class=\\\"col-lg-6 col-md-12 d-flex justify-content-start mb-2\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices;let i = index\\\">\\r\\n                                        <div class=\\\"radio\\\" *ngIf=\\\"questiondata.questionType !== 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answer\\\"\\r\\n                                                (change)=\\\"onSelectMCQSingleAnswer(questiondata.id,choice.ChoiceId)\\\">\\r\\n                                            <label for=\\\"{{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"checkbox\\\" *ngIf=\\\"questiondata.questionType === 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answers\\\"\\r\\n                                                (click)=\\\"onSelectMCQMultipleAnswer(questiondata.id,choice.ChoiceId,$event)\\\">\\r\\n                                            <label for=\\\" {{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <label for=\\\"{{choice.ChoiceId}}\\\"\\r\\n                                            [MathJax]=\\\"choice.ChoiceText  | sanitizeHtml\\\"></label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_MATCH_LIST'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div cdkDropListGroup>\\r\\n                                    <div class=\\\"example-container d-flex justify-content-between flex-nowrap mb-2\\\">\\r\\n                                        <div class=\\\"mcq-left mr-2\\\">\\r\\n                                            <div class=\\\"match-list\\\" data-value=\\\"questiondata.choices\\\">\\r\\n                                                <div class=\\\"list-box\\\" *ngFor=\\\"let item of questiondata.choices\\\"\\r\\n                                                    [MathJax]=\\\"item.ChoiceText  | sanitizeHtml\\\"></div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <!-- <div class=\\\"line-circle w-auto\\\" *ngFor=\\\"let item of viewModel.Choices\\\" id=\\\"{{item}}\\\"></div> -->\\r\\n                                        <div class=\\\"mcq-right ml-2\\\">\\r\\n                                            <div cdkDropList [cdkDropListData]=\\\"questiondata.options\\\" class=\\\"match-list\\\"\\r\\n                                                (cdkDropListDropped)=\\\"updatedDropList(questiondata.id, $event)\\\">\\r\\n                                                <div class=\\\"list-box\\\" *ngFor=\\\"let item of questiondata.options\\\" cdkDrag\\r\\n                                                    [MathJax]=\\\"item.OptionText  | sanitizeHtml\\\">\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_CHOICE_MATRIX'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <table class=\\\"table-matrix my-2 text-capitalize\\\">\\r\\n                                    <tr class=\\\"bg-lightgray\\\">\\r\\n                                        <td></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"option.OptionText | sanitizeHtml\\\"></span>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr style=\\\"background: none !important;\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices\\\">\\r\\n                                        <td><span [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></span></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <div class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId+option.OptionId\\\"\\r\\n                                                    name=\\\"{{ choice.ChoiceId }}\\\"\\r\\n                                                    (click)=\\\"onSelectChoiceMatrixAnswer(questiondata.id,choice.ChoiceId, option.OptionId)\\\">\\r\\n                                                <label for=\\\"{{choice.ChoiceId+option.OptionId}}\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                            <div class=\\\"w-100 d-flex justify-content-end align-self-center my-2\\\">\\r\\n                                <div class=\\\"btn btn-danger mb-2\\\" href=\\\"#questionSimulateIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"prev\\\" *ngIf=\\\"questionIndex !== 0\\\" (click)=\\\"previousQuestion()\\\">\\r\\n                                    <i class=\\\"fa fa-arrow-left mr-2\\\"></i>Previous\\r\\n                                </div>\\r\\n                                <div class=\\\"btn btn-info mx-2 mb-2\\\" (click)=\\\"checkAnswerStatus(questiondata.id)\\\">\\r\\n                                    <i class=\\\"fa fa-check mr-2\\\"></i>Check answer\\r\\n                                </div>\\r\\n                                <div class=\\\"btn btn-success mb-2\\\" href=\\\"#questionSimulateIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"next\\\" *ngIf=\\\"questionIndex !== topicQuestions.length - 1\\\"\\r\\n                                    (click)=\\\"nextQuestion()\\\">\\r\\n                                    Next<i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <div class=\\\"btn btn-danger\\\" (click)=\\\"closeSimulateQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times mr-2\\\"></i> Close\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal\\\" id=\\\"previewQuestionModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"previewQuestionModal\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-notify\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header bg-warning d-flex align-items-center\\\">\\r\\n                <h5 class=\\\"modal-title text-white\\\">\\r\\n                    Preview question - {{nodeName}}\\r\\n                </h5>\\r\\n                <div class=\\\"close btn btn-xl\\\" (click)=\\\"closePreviewQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div id=\\\"questionPreviewIndicators\\\" class=\\\"carousel slide carousel-fade\\\" data-ride=\\\"carousel\\\"\\r\\n                    data-interval=\\\"false\\\">\\r\\n                    <div class=\\\"carousel-inner\\\">\\r\\n                        <div class=\\\"carousel-item\\\" [ngClass]=\\\"{'active': questionIndex === 0}\\\"\\r\\n                            *ngFor=\\\"let questiondata of topicQuestions;let questionIndex = index;\\\">\\r\\n                            <div\\r\\n                                *ngIf=\\\"questiondata.questionType === 'MCQ_SINGLE' || questiondata.questionType === 'MCQ_MULTIPLE' || questiondata.questionType === 'MCQ_TRUE_FALSE'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question  | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row mb-3 p-3 text-capitalize\\\">\\r\\n                                    <div class=\\\"col-lg-6 col-md-12 d-flex justify-content-start mb-2\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices;let i = index\\\">\\r\\n                                        <div class=\\\"radio\\\" *ngIf=\\\"questiondata.questionType !== 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answer\\\"\\r\\n                                                [answers]=\\\"questiondata.answers\\\" disabled readonly>\\r\\n                                            <label for=\\\"{{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"checkbox\\\" *ngIf=\\\"questiondata.questionType === 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answers\\\" disabled\\r\\n                                                readonly [answers]=\\\"questiondata.answers\\\">\\r\\n                                            <label for=\\\" {{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <label for=\\\"{{choice.ChoiceId}}\\\"\\r\\n                                            [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mb-3 font-18\\\">\\r\\n                                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                                        <span class=\\\"text-success\\\">Answer&nbsp;:&nbsp;</span><span class=\\\"text-dark\\\"\\r\\n                                            *ngFor=\\\"let answer of questiondata.answers;let checkIndex =index\\\">\\r\\n                                            <span [MathJax]=\\\"answer | sanitizeHtml\\\"></span>\\r\\n                                            {{checkIndex  === questiondata.answers.length - 1? ' ' : ','}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_MATCH_LIST'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <ng-container *ngFor=\\\"let answer of questiondata.answers;\\\">\\r\\n                                    <div class=\\\"choice-container\\\">\\r\\n                                        <div class=\\\"item\\\">\\r\\n                                            <div class=\\\"choice--group\\\">\\r\\n                                                <div class=\\\"choice--label\\\">\\r\\n                                                    <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"line-circle\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"item\\\">\\r\\n                                            <div class=\\\"drag--container\\\">\\r\\n                                                <div class=\\\"choice--editor option--container zone\\\" class=\\\"option--item\\\"\\r\\n                                                    [MathJax]=\\\"answer.optionName | sanitizeHtml\\\">\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </ng-container>\\r\\n                                <div class=\\\"mb-3 font-18\\\">\\r\\n                                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                                        <span class=\\\"text-success\\\">Answer&nbsp;:&nbsp;</span><span\\r\\n                                            class=\\\"d-flex text-dark flex-nowrap\\\"\\r\\n                                            *ngFor=\\\"let answer of questiondata.answers;let checkIndex =index\\\">\\r\\n                                            <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span> <span>-</span>\\r\\n                                            <span [MathJax]=\\\"answer.optionName | sanitizeHtml\\\"></span>\\r\\n                                            {{checkIndex  === questiondata.answers.length - 1? ' ' : ' ,'}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_CHOICE_MATRIX'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <table class=\\\"table-matrix my-2 text-capitalize\\\">\\r\\n                                    <tr class=\\\"bg-lightgray\\\">\\r\\n                                        <td></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"option.OptionText | sanitizeHtml\\\"></span>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr style=\\\"background: none !important;\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices\\\">\\r\\n                                        <td><span [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></span></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <div class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId+option.OptionId\\\"\\r\\n                                                    name=\\\"{{ choice.ChoiceId }}\\\" disabled readonly>\\r\\n                                                <label for=\\\"{{choice.ChoiceId+option.OptionId}}\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                                <div class=\\\"mb-3 font-18\\\">\\r\\n                                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                                        <span class=\\\"text-success\\\">Answer&nbsp;:&nbsp;</span><span\\r\\n                                            class=\\\"d-flex text-dark flex-nowrap\\\"\\r\\n                                            *ngFor=\\\"let answer of questiondata.answers;let checkIndex =index\\\">\\r\\n                                            <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span> <span>-</span>\\r\\n                                            <span [MathJax]=\\\"answer.optionName | sanitizeHtml\\\"></span>\\r\\n                                            {{checkIndex  === questiondata.answers.length - 1? ' ' : ','}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"w-100 d-flex justify-content-end align-self-center my-2\\\">\\r\\n                                <div class=\\\"btn btn-danger mb-2\\\" href=\\\"#questionPreviewIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"prev\\\" *ngIf=\\\"questionIndex !== 0\\\">\\r\\n                                    <i class=\\\"fa fa-arrow-left mr-2\\\"></i>Previous\\r\\n                                </div>\\r\\n                                <div class=\\\"btn btn-success ml-2  mb-2\\\" href=\\\"#questionPreviewIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"next\\\" *ngIf=\\\"questionIndex !== topicQuestions.length - 1\\\">\\r\\n                                    Next<i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <div class=\\\"btn btn-danger\\\" (click)=\\\"closePreviewQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times mr-2\\\"></i> Close\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, AfterViewInit } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\nimport { IGeneralTopicQuestion } from '../shared/model/content/general-topic.question.model';\r\nimport { Router } from '@angular/router';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { GeneralConceptAndTopicService } from './general-concept-topic.service';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { QuestionBuilderService } from '../question-builder/question-builder.service';\r\nimport { IGeneralSubject } from '../shared/model/content/general-subject.model';\r\nimport { GeneralSubjectService } from '../general-subject/general-subject.service';\r\nimport { moveItemInArray, CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { MatchList } from '../question-builder/matchlist/matchlist.component';\r\nimport { ITopicAllDetails } from '../shared/model/content/topic-all-details.model';\r\nimport { CoreErrorHandler } from '../shared/error-handler/error-handler.service';\r\nimport { ACTIVE } from '../shared/constants/common.constants';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./general-concept-question-manage.component.html\",\r\n    providers: [GeneralConceptAndTopicService, CoreErrorHandler]\r\n})\r\nexport class GeneralConceptQuestionManageComponent implements OnInit, AfterViewInit {\r\n    subjects: IGeneralTopicQuestion[];\r\n    subjectTree: IGeneralSubject[] = [];\r\n    questions: any[] = [];\r\n    topicQuestions: any[] = [];\r\n    questionResources: any[] = [];\r\n    selectedAnswer: any[] = [];\r\n    topicsList: any[] = [];\r\n    allGrades: any[] = [];\r\n    nodeType: string;\r\n    nodeName: string;\r\n    nodeDescription: string;\r\n    topicId: number;\r\n    selectedSubject: any;\r\n    selectedGeneralSubjectGrade: any;\r\n    enableExpandNode: boolean;\r\n    tableAction: boolean;\r\n\r\n    constructor(\r\n        public _router: Router,\r\n        private generalSubjectService: GeneralSubjectService,\r\n        private generalTopicQuestionService: GeneralConceptAndTopicService,\r\n        public pluginService: PluginService,\r\n        public questionBuilderService: QuestionBuilderService,\r\n        public errorHandler: CoreErrorHandler\r\n    ) {\r\n        this.enableExpandNode = false;\r\n        this.tableAction = true;\r\n        this.allGrades = [\r\n            {\r\n                \"id\": 1,\r\n                \"name\": 1\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"name\": 2\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"name\": 3\r\n            },\r\n            {\r\n                \"id\": 4,\r\n                \"name\": 4\r\n            },\r\n            {\r\n                \"id\": 5,\r\n                \"name\": 5\r\n            },\r\n            {\r\n                \"id\": 6,\r\n                \"name\": 6\r\n            },\r\n            {\r\n                \"id\": 7,\r\n                \"name\": 7\r\n            },\r\n            {\r\n                \"id\": 8,\r\n                \"name\": 8\r\n            },\r\n            {\r\n                \"id\": 9,\r\n                \"name\": 9\r\n            },\r\n            {\r\n                \"id\": 10,\r\n                \"name\": 10\r\n            },\r\n            {\r\n                \"id\": 11,\r\n                \"name\": 11\r\n            },\r\n            {\r\n                \"id\": 12,\r\n                \"name\": 12\r\n            }\r\n        ];\r\n        this.selectedGeneralSubjectGrade = null;\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    protected onError(errRes: HttpErrorResponse) {\r\n        this.errorHandler.handleError(errRes);\r\n    }\r\n\r\n    showConceptAndTopicDetails() {\r\n        var localThisObj = this;\r\n        $('#treeView')\r\n            .on('changed.jstree', function (e, data) {\r\n                var i, j, conceptId;\r\n                for (i = 0, j = data.selected.length; i < j; i++) {\r\n                    localThisObj.nodeType = data.node.type;\r\n                    if (localThisObj.nodeType === \"root\") {\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                    }\r\n                    else if (localThisObj.nodeType === \"concept\") {\r\n                        conceptId = data.node.id;\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                        localThisObj.getTopicsList(conceptId);\r\n                    } else if (localThisObj.nodeType === \"topic\") {\r\n                        localThisObj.topicId = data.node.data.id;\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                        localThisObj.questions = [];\r\n                        localThisObj.getTopicQuestionsList(localThisObj.topicId);\r\n                    } else {\r\n                        localThisObj.nodeType = \"\";\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    getTopicsList(conceptId) {\r\n        let conceptChildrenList: any[];\r\n        conceptChildrenList = this.subjectTree.filter(item => item.parent === conceptId);\r\n        this.topicsList = conceptChildrenList.filter(item => item.type === 'topic');\r\n    }\r\n\r\n    loadUpdatedTopicQuestions() {\r\n        this.getTopicQuestionsList(this.topicId);\r\n    }\r\n\r\n    getTopicQuestionsList(topicId: number) {\r\n        this.generalTopicQuestionService.getTopicQuestionList(topicId).subscribe(\r\n            (res: HttpResponse<IGeneralTopicQuestion>) => this.assignResponseToQuestionList(res.body),\r\n            (res: HttpErrorResponse) => this.onError(res)\r\n        )\r\n    }\r\n\r\n    protected assignResponseToQuestionList(data: ITopicAllDetails) {\r\n        let questionDetails: any[] = [], question, complexityLevel: string, questionType;\r\n        this.questions = [];\r\n        this.questionResources = data.questions;\r\n        if (this.questionResources.length > 0) {\r\n            for (let i = 0; i < this.questionResources.length; i++) {\r\n                questionDetails.push(this.questionBuilderService.convertStringToJson(this.questionResources[i].contentJson));\r\n                question = questionDetails[i].Question;\r\n                if (this.questionResources[i].complexityLevel === 1) {\r\n                    complexityLevel = \"Low\";\r\n                } else if (this.questionResources[i].complexityLevel === 2) {\r\n                    complexityLevel = \"Medium\";\r\n                } else if (this.questionResources[i].complexityLevel === 3) {\r\n                    complexityLevel = \"High\";\r\n                } else {\r\n                    complexityLevel = \"\";\r\n                }\r\n                if (questionDetails[i].QuestionType === \"MCQ_SINGLE\") {\r\n                    questionType = \"MCQ single answer\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_MULTIPLE\") {\r\n                    questionType = \"MCQ multiple answers\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_CHOICE_MATRIX\") {\r\n                    questionType = \"Choice matrix\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_TRUE_FALSE\") {\r\n                    questionType = \"MCQ true or false\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_MATCH_LIST\") {\r\n                    questionType = \"MCQ match list\";\r\n                } else {\r\n                    questionType = \"\"\r\n                }\r\n                this.questions.push({\r\n                    id: this.questionResources[i].id,\r\n                    complexityLevel: complexityLevel,\r\n                    questionCategory: this.titleCapitalize(this.questionResources[i].category),\r\n                    questionText: question,\r\n                    questionType: questionType\r\n                })\r\n            }\r\n        }\r\n        this.tableAction = true;\r\n    }\r\n\r\n    titleCapitalize(word: string) {\r\n        if (!word) return word;\r\n        return word[0].toUpperCase() + word.substr(1).toLowerCase();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.showConceptAndTopicDetails();\r\n    }\r\n\r\n    onGeneralSubjectGradeChange() {\r\n        if (this.selectedGeneralSubjectGrade) {\r\n            let grade = this.selectedGeneralSubjectGrade.name;\r\n            let status = ACTIVE;\r\n            this.selectedSubject = null;\r\n            this.generalSubjectService\r\n                .getSubjectListByGrade(grade, status)\r\n                .subscribe(\r\n                    (res: HttpResponse<IGeneralSubject[]>) => this.assignGeneralSubjectList(res.body),\r\n                    (res: HttpErrorResponse) => this.onError(res)\r\n                );\r\n        }\r\n        this.selectedGeneralSubjectGrade = null;\r\n        this.subjects = [];\r\n    }\r\n\r\n    assignGeneralSubjectList(data: IGeneralSubject[]) {\r\n        this.subjects = [];\r\n        this.subjects = data;\r\n    }\r\n\r\n\r\n    loadSubjectTree() {\r\n        if (!this.selectedSubject && !this.selectedGeneralSubjectGrade) {\r\n            this.selectedSubject = null;\r\n            this.selectedGeneralSubjectGrade = null;\r\n            this.pluginService.alertMessage(\"Please select a filter and then apply\", \"error\");\r\n        } else {\r\n            this.subjectTree = [];\r\n            this.pluginService.jsTree(\"#treeView\", this.subjectTree, false);\r\n            let subjectId = this.selectedSubject.id;\r\n            if (subjectId) {\r\n                this.generalSubjectService.getSubjectTreeBySubjectId(subjectId).subscribe(\r\n                    (res: HttpResponse<IGeneralSubject[]>) => this.assignResponsetoTree(res.body),\r\n                    (res: HttpErrorResponse) => this.onError(res)\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    assignResponsetoTree(subject: IGeneralSubject[]) {\r\n        this.subjectTree = [];\r\n        if (subject.length > 0) {\r\n            for (let i = 0; i < subject.length; i++) {\r\n                if (subject[i].data.questionsCount === 0) {\r\n                    subject[i].icon = \"fa fa-times text-danger\";\r\n                }\r\n                this.subjectTree.push(subject[i]);\r\n            }\r\n            this.pluginService.jsTree(\"#treeView\", this.subjectTree, false);\r\n        }\r\n        this.nodeType = \"\";\r\n        this.enableExpandNode = false;\r\n    }\r\n\r\n    removeDuplicateElements(array) {\r\n        var temp = [];\r\n        for (var i = 0; i < array.length; i++) {\r\n            if (temp.indexOf(array[i]) == -1) {\r\n                temp.push(array[i]);\r\n            }\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    deleteTopicQuestions(questionId) {\r\n        var localthisObject = this;\r\n        swal({\r\n            title: \"Are you sure to delete topic question ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm === true) {\r\n                    localthisObject.subscribeToDeleteResponse(localthisObject.generalTopicQuestionService.deleteTopicQuestion(questionId));\r\n                }\r\n            });\r\n    }\r\n\r\n    protected subscribeToDeleteResponse(result: Observable<HttpResponse<IGeneralTopicQuestion>>) {\r\n        result.subscribe((res: HttpResponse<IGeneralTopicQuestion>) => this.onDeleteSuccess(res), (errRes: HttpErrorResponse) => this.onError(errRes));\r\n    }\r\n\r\n    protected onDeleteSuccess(res: HttpResponse<IGeneralTopicQuestion>) {\r\n        this.pluginService.alertMessage(\"Topic content deleted successfully\", \"success\");\r\n        this.questions = [];\r\n        this.getTopicQuestionsList(this.topicId);\r\n        this.tableAction = true;\r\n    }\r\n\r\n    toggleTreeNodes() {\r\n        this.enableExpandNode = !this.enableExpandNode;\r\n        if (this.enableExpandNode) {\r\n            this.pluginService.openJsTreeAllNodes(\"#treeView\");\r\n        } else {\r\n            this.pluginService.closeJsTreeAllNodes(\"#treeView\")\r\n        }\r\n    }\r\n\r\n    openSimulateQuestionModal() {\r\n        this.pluginService.showModalWindow(\"#simulateQuestionModal\");\r\n        this.simulateTopicQuestionList();\r\n    }\r\n\r\n    closeSimulateQuestionModal() {\r\n        this.pluginService.hideModalWindow(\"#simulateQuestionModal\");\r\n    }\r\n\r\n    openPreviewQuestionModal() {\r\n        this.pluginService.showModalWindow(\"#previewQuestionModal\");\r\n        this.previewTopicQuestionList();\r\n    }\r\n\r\n    closePreviewQuestionModal() {\r\n        this.pluginService.hideModalWindow(\"#previewQuestionModal\");\r\n    }\r\n\r\n    protected previewTopicQuestionList() {\r\n        let questionDetails: any, options: any[] = [], answers: any[] = [], choices: any[] = [];\r\n        this.topicQuestions = [];\r\n        for (let i = 0; i < this.questionResources.length; i++) {\r\n            questionDetails = this.questionBuilderService.convertStringToJson(this.questionResources[i].contentJson);\r\n            if (questionDetails.QuestionType === \"MCQ_MATCH_LIST\" || questionDetails.QuestionType === \"MCQ_CHOICE_MATRIX\") {\r\n                answers = []; choices = [];\r\n                options = questionDetails.Options;\r\n                choices = questionDetails.Choices;\r\n                for (let k = 0; k < questionDetails.Answers.length; k++) {\r\n                    answers.push({\r\n                        choiceName: choices.find(item => item.ChoiceId === questionDetails.Answers[k].ChoiceId).ChoiceText,\r\n                        optionName: options.find(item => item.OptionId === questionDetails.Answers[k].OptionId).OptionText\r\n                    })\r\n                }\r\n            } else if (questionDetails.QuestionType === \"MCQ_SINGLE\" || questionDetails.QuestionType === \"MCQ_MULTIPLE\" || questionDetails.QuestionType === \"MCQ_TRUE_FALSE\") {\r\n                options = []; answers = [];\r\n                for (let j = 0; j < questionDetails.Answers.length; j++) {\r\n                    let answerText = questionDetails.Choices.find(item => item.ChoiceId === questionDetails.Answers[j]).ChoiceText;\r\n                    answers.push(answerText);\r\n                    answerText = \"\"\r\n                }\r\n            }\r\n            this.topicQuestions.push({\r\n                id: this.questionResources[i].id,\r\n                question: questionDetails.Question,\r\n                questionType: questionDetails.QuestionType,\r\n                generalTopicId: this.questionResources[i].generalTopicId,\r\n                questionId: this.questionResources[i].id,\r\n                choices: questionDetails.Choices,\r\n                options: options,\r\n                answers: answers\r\n            })\r\n        }\r\n    }\r\n\r\n    protected simulateTopicQuestionList() {\r\n        let questionDetails: MatchList, options: any[] = [], choices: any[] = [];\r\n        this.topicQuestions = [];\r\n        for (let i = 0; i < this.questionResources.length; i++) {\r\n            questionDetails = this.questionBuilderService.convertStringToJson(this.questionResources[i].contentJson);\r\n            if (questionDetails.QuestionType === \"MCQ_MATCH_LIST\" || questionDetails.QuestionType === \"MCQ_CHOICE_MATRIX\") {\r\n                options = this.shuffleArray(questionDetails.Options);\r\n                choices = questionDetails.Choices;\r\n            } else {\r\n                options = [];\r\n                choices = this.shuffleArray(questionDetails.Choices)\r\n            }\r\n            this.topicQuestions.push({\r\n                id: this.questionResources[i].id,\r\n                questionType: questionDetails.QuestionType,\r\n                question: questionDetails.Question,\r\n                generalTopicId: this.questionResources[i].generalTopicId,\r\n                questionId: this.questionResources[i].id,\r\n                choices: choices,\r\n                options: options,\r\n                answers: questionDetails.Answers,\r\n                checkAnswer: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    shuffleArray(array) {\r\n        array.sort(() => Math.random() - 0.5);\r\n        return array\r\n    }\r\n\r\n    public onSelectMCQSingleAnswer(questionId, choiceId) {\r\n        let topicIndex: number;\r\n        topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        for (let i = 0; i < this.topicQuestions[topicIndex].answers.length; i++) {\r\n            if (this.topicQuestions[topicIndex].answers[i] === choiceId) {\r\n                this.topicQuestions[topicIndex].checkAnswer = \"Correct\"\r\n            } else {\r\n                this.topicQuestions[topicIndex].checkAnswer = \"Wrong\"\r\n            }\r\n        }\r\n    }\r\n\r\n    public onSelectMCQMultipleAnswer(questionId, choiceId, event) {\r\n        let topicIndex: number, checked: boolean, choiceIndex: number;\r\n        checked = event.target.checked;\r\n        topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (checked === true) {\r\n            this.selectedAnswer.push(choiceId);\r\n        } else {\r\n            choiceIndex = this.selectedAnswer.findIndex(item => item === choiceId);\r\n            this.selectedAnswer.splice(choiceIndex, 1);\r\n        }\r\n        this.checkMultipleAnswer(topicIndex);\r\n    }\r\n\r\n    checkMultipleAnswer(index) {\r\n        let answers: any[] = this.topicQuestions[index].answers.sort();\r\n        let selectedAnswers: any[] = this.selectedAnswer.sort();\r\n        let duplicateAnswers: any[] = [];\r\n        for (let i = 0; i < answers.length; i++) {\r\n            for (let j = 0; j < selectedAnswers.length; j++) {\r\n                if (answers[i] === selectedAnswers[j]) {\r\n                    duplicateAnswers.push(selectedAnswers[j]);\r\n                    this.topicQuestions[index].checkAnswer = \"Partial\"\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Wrong\"\r\n                }\r\n            }\r\n        }\r\n        if (duplicateAnswers.length > 0) {\r\n            if (duplicateAnswers.length === answers.length) {\r\n                if (JSON.stringify(duplicateAnswers.sort()) === JSON.stringify(selectedAnswers)) {\r\n                    this.topicQuestions[index].checkAnswer = \"Correct\"\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Partial\"\r\n                }\r\n            } else {\r\n                this.topicQuestions[index].checkAnswer = \"Partial\"\r\n            }\r\n        }\r\n    }\r\n\r\n    public onSelectChoiceMatrixAnswer(questionId, choiceId, optionId) {\r\n        let topicIndex: number, index: number;\r\n        topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (this.selectedAnswer.length === 0) {\r\n            this.selectedAnswer = [];\r\n        }\r\n        this.selectedAnswer.push({\r\n            ChoiceId: choiceId,\r\n            OptionId: optionId\r\n        });\r\n        if (this.selectedAnswer.length > 1) {\r\n            for (let i = 0; i < this.selectedAnswer.length; i++) {\r\n                for (let j = i + 1; j < this.selectedAnswer.length; j++) {\r\n                    if (this.selectedAnswer[i].ChoiceId === this.selectedAnswer[j].ChoiceId) {\r\n                        index = this.selectedAnswer.findIndex(item => item.ChoiceId === this.selectedAnswer[i].ChoiceId);\r\n                        this.selectedAnswer.splice(index, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.checkMatrixAndMatchListAnswers(topicIndex);\r\n    }\r\n\r\n    checkAnswerStatus(questionId) {\r\n        let topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (this.topicQuestions[topicIndex].checkAnswer === \"Correct\") {\r\n            this.pluginService.alertMessage(\"Good keep going...Correct answer\", \"success\");\r\n        } else if (this.topicQuestions[topicIndex].checkAnswer === \"Partial\") {\r\n            this.pluginService.alertMessage(\"This is partially correct\", \"warning\");\r\n        } else if (this.topicQuestions[topicIndex].checkAnswer === \"Wrong\") {\r\n            this.pluginService.alertMessage(\"Oops..! this is wrong\", \"error\");\r\n        } else {\r\n            this.pluginService.alertMessage(\"Please select a answer and check it\", \"error\");\r\n        }\r\n    }\r\n\r\n    updatedDropList(questionId, event: CdkDragDrop<string[]>) {\r\n        let topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (event.previousContainer === event.container) {\r\n            moveItemInArray(\r\n                event.container.data,\r\n                event.previousIndex,\r\n                event.currentIndex\r\n            );\r\n            this.selectedAnswer = [];\r\n            for (let i = 0; i < this.topicQuestions[topicIndex].choices.length; i++) {\r\n                for (let j = 0; j < this.topicQuestions[topicIndex].options.length; j++) {\r\n                    if (i === j) {\r\n                        this.selectedAnswer.push({\r\n                            ChoiceId: this.topicQuestions[topicIndex].choices[i].ChoiceId,\r\n                            OptionId: this.topicQuestions[topicIndex].options[j].OptionId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            this.checkMatrixAndMatchListAnswers(topicIndex);\r\n        }\r\n    }\r\n\r\n    checkMatrixAndMatchListAnswers(index) {\r\n        let sortArr1, sortArr2, duplicateAnswers: any[] = [];\r\n        for (let i = 0; i < this.topicQuestions[index].answers.length; i++) {\r\n            for (let j = 0; j < this.selectedAnswer.length; j++) {\r\n                if (this.topicQuestions[index].answers[i].ChoiceId === this.selectedAnswer[j].ChoiceId) {\r\n                    if (this.topicQuestions[index].answers[i].OptionId === this.selectedAnswer[j].OptionId) {\r\n                        duplicateAnswers.push({\r\n                            ChoiceId: this.selectedAnswer[j].ChoiceId,\r\n                            OptionId: this.selectedAnswer[j].OptionId\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Wrong\"\r\n                }\r\n            }\r\n        }\r\n        if (duplicateAnswers.length > 0) {\r\n            sortArr1 = (obj1, obj2) => { return obj1.ChoiceId - obj2.ChoiceId; }\r\n            const sortedArray1: any[] = duplicateAnswers.sort(sortArr1);\r\n            sortArr2 = (obj1, obj2) => { return obj1.ChoiceId - obj2.ChoiceId; }\r\n            const sortedArray2: any[] = this.selectedAnswer.sort(sortArr2);\r\n            if (duplicateAnswers.length === this.topicQuestions[index].answers.length) {\r\n                if (JSON.stringify(sortedArray1) === JSON.stringify(sortedArray2)) {\r\n                    this.topicQuestions[index].checkAnswer = \"Correct\"\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Partial\"\r\n                }\r\n            } else {\r\n                this.topicQuestions[index].checkAnswer = \"Partial\"\r\n            }\r\n        }\r\n    }\r\n\r\n    previousQuestion() {\r\n        this.selectedAnswer = [];\r\n    }\r\n\r\n    nextQuestion() {\r\n        this.selectedAnswer = [];\r\n    }\r\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { generalConceptAndTopicRoute } from './general-concept-topic.route';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgJhipsterModule } from 'ng-jhipster';\r\nimport { SharedModule } from '../shared';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { QuestionBuilderModule } from '../question-builder/question-builder.module';\r\nimport {\r\n    GeneralTopicQuestionManageComponent,\r\n    GeneralTopicContentManageComponent,\r\n    GeneralTopicQuestionCreateComponent,\r\n    GeneralConceptAndTopicService\r\n} from './index';\r\nimport { SyllabusLessonTopicModule } from '../syllabus-lesson-topic/syllabus-lesson-topic.module';\r\nimport { GeneralConceptQuestionManageComponent } from './general-concept-question-manage.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        SharedModule,\r\n        NgJhipsterModule,\r\n        InfiniteScrollModule,\r\n        NgbModule,\r\n        RouterModule.forChild(generalConceptAndTopicRoute),\r\n        QuestionBuilderModule,\r\n        SyllabusLessonTopicModule\r\n    ],\r\n    declarations: [\r\n        GeneralTopicContentManageComponent,\r\n        GeneralTopicQuestionManageComponent,\r\n        GeneralTopicQuestionCreateComponent,\r\n        GeneralConceptQuestionManageComponent\r\n    ],\r\n    providers: [GeneralConceptAndTopicService],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class GeneralConceptAndTopicModule {\r\n\r\n}","import { GeneralTopicQuestionManageComponent } from './general-topic-question-manage.component';\r\nimport { UserRouteAccessService } from '../core';\r\nimport { Routes } from '@angular/router';\r\nimport { GeneralTopicQuestionCreateComponent } from './general-topic-question-create.component';\r\nimport { MCQStandardComponent } from '../question-builder/mcq-standard';\r\nimport { MatchlistComponent } from '../question-builder/matchlist/matchlist.component';\r\nimport { MCQChoiceMatrixComponent } from '../question-builder/mcq-choicematrix';\r\nimport { GeneralTopicContentManageComponent } from './general-topic-content-manage.component';\r\nimport { CurriculumTopicQuestionDetailsComponent } from '../syllabus-lesson-topic/topic-question/topic-question-details.component';\r\nimport { DragAndDropComponent } from '../question-builder/cloze/drag-n-drop/drag-n-drop.component';\r\nimport { CurriculumTopicQuestionUpdateComponent } from '../syllabus-lesson-topic/topic-question/topic-question-update.component';\r\nimport { GeneralConceptQuestionManageComponent } from './general-concept-question-manage.component';\r\n\r\nexport const generalConceptAndTopicRoute: Routes = [\r\n    {\r\n        path: \"\", redirectTo: \"general-topic-question\", pathMatch: \"full\"\r\n    },\r\n    {\r\n        path: 'general-topic-question',\r\n        component: GeneralTopicQuestionManageComponent,\r\n        data: {\r\n            authorities: ['SYSTEM_ADMIN'],\r\n            pageTitle: 'Manage general topic questions'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'general-concept-question',\r\n        component: GeneralConceptQuestionManageComponent,\r\n        data: {\r\n            authorities: ['SYSTEM_ADMIN'],\r\n            pageTitle: 'Manage general concept questions'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/general-topic-question-create',\r\n        component: GeneralTopicQuestionCreateComponent,\r\n        children: [\r\n            {\r\n                path: 'mcqstandard',\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_SINGLE\",\r\n                    title: \"Create\"\r\n                },\r\n            },\r\n            {\r\n                path: \"mcqstandard/:qid\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_SINGLE\",\r\n                    title: \"Edit\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqmultiple\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_MULTIPLE\",\r\n                    mode: \"Create\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqmultiple/:qid\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_MULTIPLE\",\r\n                    mode: \"Edit\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqtruefalse\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_TRUE_FALSE\",\r\n                    title: \"Create\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqtruefalse/:qid\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_TRUE_FALSE\",\r\n                    title: \"Edit\"\r\n                }\r\n            },\r\n            {\r\n                path: 'mcqchoicematrix',\r\n                component: MCQChoiceMatrixComponent,\r\n                data: {\r\n                    title: \"Create\",\r\n                    type: \"MCQ_CHOICE_MATRIX\"\r\n                }\r\n            }, {\r\n                path: 'mcqchoicematrix/:qid',\r\n                component: MCQChoiceMatrixComponent,\r\n                data: {\r\n                    title: \"Edit\",\r\n                    type: \"MCQ_CHOICE_MATRIX\"\r\n                }\r\n            }, {\r\n                path: \"matchlist\",\r\n                component: MatchlistComponent,\r\n                data: {\r\n                    title: \"Create\",\r\n                    type: \"MCQ_MATCH_LIST\"\r\n                }\r\n            },\r\n            {\r\n                path: \"matchlist/:qid\",\r\n                component: MatchlistComponent,\r\n                data: {\r\n                    title: \"Edit\",\r\n                    type: \"MCQ_MATCH_LIST\"\r\n                }\r\n            },\r\n            {\r\n                path: \"clozedrag\",\r\n                component: DragAndDropComponent,\r\n                data: {\r\n                    title: \"Create\",\r\n                    type: \"mcq-drag\"\r\n                }\r\n            },\r\n            {\r\n                path: \"clozedrag/:qid\",\r\n                component: DragAndDropComponent,\r\n                data: {\r\n                    title: \"Edit\",\r\n                    type: \"mcq-drag\"\r\n                }\r\n            }\r\n        ],\r\n        data: {\r\n            authorities: ['SYSTEM_ADMIN'],\r\n            pageTitle: 'Create general topic question'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/general-topic-question-view',\r\n        component: CurriculumTopicQuestionDetailsComponent,\r\n        data: {\r\n            authorities: ['SYSTEM_ADMIN'],\r\n            pageTitle: 'View general topic question'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n\r\n    },\r\n    {\r\n        path: ':id/general-topic-question-edit',\r\n        component: CurriculumTopicQuestionUpdateComponent,\r\n        data: {\r\n            authorities: ['SYSTEM_ADMIN'],\r\n            pageTitle: 'Edit general topic question'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n\r\n    },\r\n    {\r\n        path: 'general-topic-content',\r\n        component: GeneralTopicContentManageComponent,\r\n        data: {\r\n            authorities: ['SYSTEM_ADMIN'],\r\n            pageTitle: 'Manage general video content mapping'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }\r\n];\r\n"],"sourceRoot":"webpack:///"}