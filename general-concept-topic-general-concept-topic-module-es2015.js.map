{"version":3,"sources":["./src/app/general-concept-topic/general-topic-content-manage.component.html","./src/app/general-concept-topic/general-topic-question-create.component.html","./src/app/general-concept-topic/general-topic-question-manage.component.html","./src/app/general-concept-topic/general-concept-topic.module.ts","./src/app/general-concept-topic/general-concept-topic.route.ts","./src/app/general-concept-topic/general-concept-topic.service.ts","./src/app/general-concept-topic/general-topic-content-manage.component.ts","./src/app/general-concept-topic/general-topic-question-create.component.ts","./src/app/general-concept-topic/general-topic-question-manage.component.ts"],"names":[],"mappings":"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","file":"general-concept-topic-general-concept-topic-module-es2015.js","sourcesContent":["export default \"<div class=\\\"col-12 filterbg my-4 rounded\\\">\\r\\n    <div class=\\\"filtericon font-20\\\">\\r\\n        <i class=\\\"fa fa-filter\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"row d-flex justify-content-start align-items-center\\\">\\r\\n        <div class=\\\"col-lg-3 mb-3\\\">\\r\\n            <ng-select [items]=\\\"subjects\\\" bindLabel=\\\"title\\\" placeholder=\\\"Select subject\\\" [(ngModel)]=\\\"selectedSubject\\\">\\r\\n            </ng-select>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-end pb-3 row\\\">\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n            <button class=\\\"btn btn-success float-right waves-effect waves-light\\\" (click)=\\\"loadSubjectTree()\\\">\\r\\n                <i class=\\\"fa fa-filter mr-2\\\"></i>Apply\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xxl-3 mb-3 py-3\\\">\\r\\n        <div class=\\\"d-flex justify-content-start mb-2\\\" *ngIf=\\\"subjectTree.length > 1\\\">\\r\\n            <div class=\\\"btn btn-primary mr-2\\\" (click)=\\\"toggleTreeNodes()\\\">\\r\\n                <i class=\\\"fa fa-clone mr-2\\\"></i>\\r\\n                <span *ngIf=\\\"enableExpandNode === false\\\">\\r\\n                    Expand all\\r\\n                </span>\\r\\n                <span *ngIf=\\\"enableExpandNode === true\\\">\\r\\n                    Collapse all\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div id=\\\"treeView\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xxl-9 mb-3 py-3\\\">\\r\\n        <div *ngIf=\\\"nodeType === 'root'\\\">\\r\\n            <p><b>Subject name</b></p>\\r\\n            <p>{{nodeName}}</p>\\r\\n            <p><b>Subject description</b></p>\\r\\n            <p>{{nodeDescription}}</p>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'concept'\\\">\\r\\n            <p><b>Concept name</b></p>\\r\\n            <p>{{nodeName}}</p>\\r\\n            <p><b>Concept description</b></p>\\r\\n            <p>{{nodeDescription}}</p>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'topic'\\\">\\r\\n            <div class=\\\"d-flex w-100 justify-content-between align-items-center\\\">\\r\\n                <div>\\r\\n                    <h4 class=\\\"font-24 mb-2\\\">{{nodeName}}</h4>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex align-items-start justify-content-end\\\">\\r\\n                    <div class=\\\"btn btn-primary text-white mb-2\\\" (click)=\\\"addContent()\\\">\\r\\n                        <i class=\\\"fa fa-plus-circle mr-2\\\"></i> Add content\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"d-flex flex-wrap w-100\\\" *ngIf=\\\"topicContents\\\">\\r\\n                <table class=\\\"table table-hover table-striped table-bordered nowrap w-100\\\" id=\\\"dragTable\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Select</th>\\r\\n                            <th>Order number</th>\\r\\n                            <th>Title</th>\\r\\n                            <th>Active Web URL</th>\\r\\n                            <th>Actions</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody id=\\\"dragBody\\\">\\r\\n                        <tr *ngFor=\\\"let topiccontent of topicContents;trackBy: trackId;let topicIndex = index\\\">\\r\\n                            <td data-column=\\\"Select\\\" title=\\\"{{topiccontent.id}}\\\">\\r\\n                                <div class=\\\"checkbox\\\">\\r\\n                                    <input type=\\\"checkbox\\\" id=\\\"{{topiccontent.id}}\\\"\\r\\n                                        (change)=\\\"checkSelectedContents($event)\\\" class=\\\"checkAll\\\">\\r\\n                                    <label for=\\\"{{topiccontent.id}}\\\"></label>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                            <td data-column=\\\"Order number\\\" class=\\\"index\\\">\\r\\n                                {{topiccontent.orderNumber}}\\r\\n                            </td>\\r\\n                            <td data-column=\\\"Title\\\">\\r\\n                                {{topiccontent.content.title}}\\r\\n                            </td>\\r\\n                            <td data-column=\\\"Active Web URL\\\">\\r\\n                                <a class=\\\"btn btn-link text-ellipsis\\\" href=\\\"{{topiccontent.content.webUrl}}\\\"\\r\\n                                    target=\\\"_blank\\\">\\r\\n                                    {{topiccontent.content.webUrl}}\\r\\n                                </a>\\r\\n                            </td>\\r\\n                            <td data-column=\\\"Actions\\\">\\r\\n                                <div>\\r\\n                                    <a class=\\\"btn btn-outline-info mr-1 mb-1 btn-icon-size\\\"\\r\\n                                        (click)=\\\"viewContent(topiccontent.content.id)\\\">\\r\\n                                        <i class=\\\"fa fa-eye\\\"></i>\\r\\n                                    </a>\\r\\n                                    <a class=\\\"btn btn-outline-success  mr-1 mb-1 btn-icon-size\\\"\\r\\n                                        (click)=\\\"editContent(topiccontent.content.id)\\\">\\r\\n                                        <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <div class=\\\"mt-3 d-flex w-100 justify-content-end\\\" *ngIf=\\\"topicContents.length > 0\\\">\\r\\n                    <button class=\\\"btn btn-danger mr-2\\\" [disabled]=\\\"tableAction\\\" (click)=\\\"resetSelectedTopicContent()\\\">\\r\\n                        <i class=\\\"fa fa-times mr-2\\\"></i>Reset\\r\\n                    </button>\\r\\n                    <button class=\\\"btn btn-danger mr-2\\\" [disabled]=\\\"tableAction\\\" (click)=\\\"deleteTopicContents()\\\">\\r\\n                        <i class=\\\"fa fa-trash mr-2\\\"></i>Delete\\r\\n                    </button>\\r\\n                    <button class=\\\"btn btn-success\\\" [disabled]=\\\"updateAction\\\"\\r\\n                        (click)=\\\"updateTopicContentsWithOrderNumber()\\\">\\r\\n                        <i class=\\\"fa fa-save mr-2\\\"></i>Update order\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal slideInRight\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" id=\\\"generalTopicContent\\\">\\r\\n    <div class=\\\"modal-dialog modal-full-height modal-right modal-notify\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\" [formGroup]=\\\"topicContentForm\\\">\\r\\n            <div class=\\\"modal-header bg-warning d-flex align-items-center\\\">\\r\\n                <h5 class=\\\"modal-title text-white\\\">\\r\\n                    {{modalTitleName}} content\\r\\n                </h5>\\r\\n                <div class=\\\"close btn btn-xl\\\" (click)=\\\"closeTopicContentModalWithOutSaving()\\\">\\r\\n                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div *ngIf=\\\"modalTitleName === 'Add' || modalTitleName === 'Edit'\\\">\\r\\n                    <div class=\\\"form-group mb-2\\\">\\r\\n                        <label class=\\\"col-form-label\\\">Title\\r\\n                        </label>\\r\\n                        <input type=\\\"text\\\" placeholder=\\\"Enter content name (min length: 3 and max length: 75)\\\"\\r\\n                            class=\\\"form-control\\\" formControlName=\\\"contentTitle\\\" minlength=\\\"3\\\" maxlength=\\\"75\\\"\\r\\n                            inputRestriction=\\\"alphabetsNumbersWithMinus\\\" />\\r\\n                        <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                            Allowed characters - Alphabets, Numbers and One special character (-)\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\" form-group mb-2\\\">\\r\\n                        <label class=\\\"col-form-label\\\">Description <span class=\\\"text-muted\\\">(Optional)</span>\\r\\n                        </label>\\r\\n                        <textarea class=\\\"form-control description-form\\\"\\r\\n                            placeholder=\\\"Enter description (min length: 3 and max length: 250)\\\"\\r\\n                            formControlName=\\\"contentDescription\\\"></textarea>\\r\\n                        <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                            Allowed characters - Alphabets, Numbers and Special characters\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- <div class=\\\"form-group mb-2\\\">\\r\\n                    <label class=\\\"col-form-label\\\">Content type\\r\\n                    </label>\\r\\n                    <ng-select [items]=\\\"contentType\\\" [disabled]=\\\"disableDropdown\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        bindLabel=\\\"name\\\" placeholder=\\\"Select content type\\\" [(ngModel)]=\\\"selectedContentType\\\"\\r\\n                        [searchable]=\\\"false\\\">\\r\\n                    </ng-select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group mb-2\\\" *ngIf=\\\"selectedContentType\\\">\\r\\n                    <label class=\\\"col-form-label\\\">Content source\\r\\n                    </label>\\r\\n                    <ng-select [items]=\\\"contentSource\\\" [disabled]=\\\"disableDropdown\\\"\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select content source\\\"\\r\\n                        [(ngModel)]=\\\"selectedContentSource\\\" [searchable]=\\\"false\\\">\\r\\n                    </ng-select>\\r\\n                </div> -->\\r\\n                    <!-- <div *ngIf=\\\"selectedContentSource\\\"> -->\\r\\n                    <!-- <div *ngIf=\\\"selectedContentSource.name === 'File upload'\\\">\\r\\n                        <div class=\\\"form-group mb-2\\\" *ngIf=\\\"selectedContentSource.name === 'File upload'\\\">\\r\\n                            <label class=\\\"col-form-label\\\">File\\r\\n                            </label>\\r\\n                            <div class=\\\"custom-file\\\" *ngIf=\\\"selectedContentType.tag === 'DOCUMENT'\\\">\\r\\n                                <input type=\\\"file\\\" (change)=\\\"onDocumentFileChanges($event)\\\" id=\\\"documentFile\\\" />\\r\\n                                <label class=\\\"custom-file-label\\\" for=\\\"documentFile\\\">\\r\\n                                    <i>\\r\\n                                        {{fileName}}\\r\\n                                    </i></label>\\r\\n                            </div>\\r\\n                            <div class=\\\"custom-file\\\" *ngIf=\\\"selectedContentType.tag === 'VIDEO'\\\">\\r\\n                                <input type=\\\"file\\\" alife-file-to-base64 (onFileChanged)=\\\"onVideoFileChanges($event)\\\"\\r\\n                                    id=\\\"videoFile\\\" />\\r\\n                                <label class=\\\"custom-file-label\\\" for=\\\"videoFile\\\">\\r\\n                                    <i>\\r\\n                                        {{fileName}}\\r\\n                                    </i></label>\\r\\n                            </div>\\r\\n                            <div class=\\\" d-flex w-100\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"selectedContentType.tag === 'DOCUMENT'\\\">\\r\\n                                    Only PDF will allow Max file size - 100 MB\\r\\n                                </div>\\r\\n                                <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"selectedContentType.tag === 'VIDEO'\\\">\\r\\n                                    Max file size - 200 MB\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex w-100 my-2\\\">\\r\\n                                <div *ngIf=\\\"selectedContentType.tag === 'VIDEO'\\\">\\r\\n                                    <div *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                        <button class=\\\"btn btn-warning mr-2\\\" (click)=\\\"uploadVideoFile()\\\"\\r\\n                                            *ngIf=\\\"!uploadedFileName && !uploadedFilePath\\\">\\r\\n                                            <i class=\\\"fa fa-upload mr-2\\\"></i>Upload file\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"selectedContentType.tag === 'DOCUMENT'\\\">\\r\\n                                    <div *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                        <button class=\\\"btn btn-warning mr-2\\\" (click)=\\\"uploadDocumentFile()\\\"\\r\\n                                            *ngIf=\\\"!uploadedFileName && !uploadedFilePath\\\">\\r\\n                                            <i class=\\\"fa fa-upload mr-2\\\"></i>Upload file\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"showFileAction\\\" class=\\\"d-flex justify-content-between\\\">\\r\\n                                    <a class=\\\"btn btn-info mr-2\\\" (click)=\\\"downloadFile()\\\" *ngIf=\\\"uploadedFileName\\\">\\r\\n                                        <i class=\\\"fa fa-download mr-2\\\"></i>{{uploadedFileName}}\\r\\n                                    </a>\\r\\n                                    <div *ngIf=\\\" modalTitleName !=='View'\\\">\\r\\n                                        <a class=\\\" btn btn-danger\\\" (click)=\\\"deleteUploadedFile()\\\"\\r\\n                                            *ngIf=\\\"uploadedFileName\\\">\\r\\n                                            <i class=\\\"fa fa-trash mr-2\\\"></i>Delete file\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n                    <!-- <div *ngIf=\\\"selectedContentSource.name !== 'File upload'\\\"> -->\\r\\n                    <div class=\\\"border p-2 mb-2\\\">\\r\\n                        <div class=\\\"form-group mb-2\\\">\\r\\n                            <label class=\\\"col-form-label\\\">Web URL\\r\\n                            </label>\\r\\n                            <input type=\\\"url\\\" class=\\\"form-control\\\"\\r\\n                                placeholder=\\\"Enter web url (minlength: 3 and maxlength: 2048)\\\" minlength=\\\"3\\\"\\r\\n                                maxlength=\\\"2048\\\" formControlName=\\\"webUrl1\\\">\\r\\n                            <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                Allowed characters - Alphabets, Numbers and Special characters\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group mb-2\\\">\\r\\n                            <label class=\\\"col-form-label\\\">Publisher\\r\\n                            </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                placeholder=\\\"Enter publisher (minlength: 3 and maxlength: 50)\\\"\\r\\n                                inputRestriction=\\\"alphabetsWithSpace\\\" formControlName=\\\"publisher1\\\">\\r\\n                            <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                Allowed characters - Alphabets\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group mb-2 radio d-flex\\\">\\r\\n                            <input type=\\\"radio\\\" name=\\\"activeUrl\\\" id=\\\"webUrl1\\\" [checked]=\\\"checkUrl1\\\"\\r\\n                                (click)=\\\"onActiveWebUrlSelection($event)\\\" [disabled]=\\\"disableUrl\\\">\\r\\n                            <label for=\\\"webUrl1\\\">is Active</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"border p-2 mb-2\\\">\\r\\n                        <div class=\\\"form-group mb-2\\\">\\r\\n                            <label class=\\\"col-form-label\\\">Web URL <span class=\\\"text-muted\\\">\\r\\n                                    (Optional)\\r\\n                                </span>\\r\\n                            </label>\\r\\n                            <input type=\\\"url\\\" class=\\\"form-control\\\"\\r\\n                                placeholder=\\\"Enter web url (minlength: 3 and maxlength: 2048)\\\" minlength=\\\"3\\\"\\r\\n                                maxlength=\\\"2048\\\" formControlName=\\\"webUrl2\\\">\\r\\n                            <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                Allowed characters - Alphabets, Numbers and Special characters\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group mb-2\\\">\\r\\n                            <label class=\\\"col-form-label\\\">Publisher\\r\\n                            </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                placeholder=\\\"Enter publisher (minlength: 3 and maxlength: 50)\\\"\\r\\n                                inputRestriction=\\\"alphabetsWithSpace\\\" formControlName=\\\"publisher2\\\">\\r\\n                            <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                Allowed characters - Alphabets\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group mb-2 radio d-flex\\\">\\r\\n                            <input type=\\\"radio\\\" name=\\\"activeUrl\\\" id=\\\"webUrl2\\\" [checked]=\\\"checkUrl2\\\"\\r\\n                                (click)=\\\"onActiveWebUrlSelection($event)\\\" [disabled]=\\\"disableUrl\\\">\\r\\n                            <label for=\\\"webUrl2\\\">is Active</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"border p-2 mb-2\\\">\\r\\n                        <div class=\\\"form-group mb-2\\\">\\r\\n                            <label class=\\\"col-form-label\\\">Web URL <span class=\\\"text-muted\\\">\\r\\n                                    (Optional)\\r\\n                                </span>\\r\\n                            </label>\\r\\n                            <input type=\\\"url\\\" class=\\\"form-control\\\"\\r\\n                                placeholder=\\\"Enter web url (minlength: 3 and maxlength: 2048)\\\" minlength=\\\"3\\\"\\r\\n                                maxlength=\\\"2048\\\" formControlName=\\\"webUrl3\\\">\\r\\n                            <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                Allowed characters - Alphabets, Numbers and Special characters\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group mb-2\\\">\\r\\n                            <label class=\\\"col-form-label\\\">Publisher\\r\\n                            </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                placeholder=\\\"Enter publisher (minlength: 3 and maxlength: 50)\\\"\\r\\n                                inputRestriction=\\\"alphabetsWithSpace\\\" formControlName=\\\"publisher3\\\">\\r\\n                            <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                Allowed characters - Alphabets\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group mb-2 radio d-flex\\\">\\r\\n                            <input type=\\\"radio\\\" name=\\\"activeUrl\\\" id=\\\"webUrl3\\\" [checked]=\\\"checkUrl3\\\"\\r\\n                                (click)=\\\"onActiveWebUrlSelection($event)\\\" [disabled]=\\\"disableUrl\\\">\\r\\n                            <label for=\\\"webUrl3\\\">is Active</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- </div> -->\\r\\n                    <!-- </div> -->\\r\\n                </div>\\r\\n                <div *ngIf=\\\"modalTitleName === 'View'\\\">\\r\\n                    <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                        <p><b>Title </b></p>\\r\\n                        <p>{{contentDetails.content.title}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"d-flex justify-content-between w-100\\\" *ngIf=\\\"contentDetails.content.description\\\">\\r\\n                        <p><b>Description</b></p>\\r\\n                        <p>{{contentDetails.content.description}}</p>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"contentDetails.content.url1\\\">\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Web URL 1</b></p>\\r\\n                            <p>{{contentDetails.content.url1}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Publisher 1</b></p>\\r\\n                            <p>{{contentDetails.content.publisher1}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Active 1</b></p>\\r\\n                            <div>\\r\\n                                <div class=\\\"radio\\\">\\r\\n                                    <input type=\\\"radio\\\" id=\\\"url1\\\" name=\\\"checkActiveURL\\\" [checked]=\\\"checkUrl1\\\"\\r\\n                                        [disabled]=\\\"true\\\">\\r\\n                                    <label for=\\\"url1\\\"></label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"contentDetails.content.url2\\\">\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Web URL 2</b></p>\\r\\n                            <p>{{contentDetails.content.url2}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Publisher 2</b></p>\\r\\n                            <p>{{contentDetails.content.publisher2}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Active 2</b></p>\\r\\n                            <div>\\r\\n                                <div class=\\\"radio\\\">\\r\\n                                    <input type=\\\"radio\\\" id=\\\"url2\\\" name=\\\"checkActiveURL\\\" [checked]=\\\"checkUrl2\\\"\\r\\n                                        [disabled]=\\\"true\\\">\\r\\n                                    <label for=\\\"url2\\\"></label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"contentDetails.content.url3\\\">\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Web URL 3</b></p>\\r\\n                            <p>{{contentDetails.content.url3}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Publisher 3</b></p>\\r\\n                            <p>{{contentDetails.content.publisher3}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Active 3</b></p>\\r\\n                            <div>\\r\\n                                <div class=\\\"radio\\\">\\r\\n                                    <input type=\\\"radio\\\" id=\\\"url3\\\" name=\\\"checkActiveURL\\\" [checked]=\\\"checkUrl3\\\"\\r\\n                                        [disabled]=\\\"true\\\">\\r\\n                                    <label for=\\\"url3\\\"></label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <div *ngIf=\\\"modalTitleName === 'Add' || modalTitleName === 'Edit'\\\">\\r\\n                    <button class=\\\"btn btn-danger\\\" (click)=\\\"cancelTopicContent()\\\">\\r\\n                        <i class=\\\"fa fa-times mr-2\\\"></i>\\r\\n                        Reset\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"modalTitleName === 'Add'\\\">\\r\\n                    <button class=\\\"btn btn-success\\\" (click)=\\\"saveTopicContent()\\\" [disabled]=\\\"validateContent\\\">\\r\\n                        <i class=\\\"fa fa-save mr-2\\\"></i>\\r\\n                        Save\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"modalTitleName === 'Edit'\\\">\\r\\n                    <button class=\\\"btn btn-success\\\" (click)=\\\"updateTopicContents()\\\" [disabled]=\\\"validateContent\\\">\\r\\n                        <i class=\\\"fa fa-save mr-2\\\"></i>\\r\\n                        Save\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"modalTitleName === 'View'\\\">\\r\\n                    <button class=\\\"btn btn-danger\\\" (click)=\\\"closeTopicContentModal()\\\">\\r\\n                        <i class=\\\"fa fa-times mr-2\\\"></i>\\r\\n                        Close\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"w-100 my-3 justify-content-between d-flex\\\">\\r\\n    <div class=\\\"btn btn-danger\\\" (click)=\\\"onBack()\\\">\\r\\n        <i class=\\\"fa fa-chevron-left mr-2\\\"></i> Back\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"stepperTab\\\">\\r\\n    <ul id=\\\"progressbar\\\">\\r\\n        <li class=\\\"active\\\">\\r\\n            <span class=\\\"bar\\\">\\r\\n            </span>\\r\\n        </li>\\r\\n        <li>\\r\\n            <span class=\\\"bar\\\">\\r\\n            </span>\\r\\n        </li>\\r\\n        <li>\\r\\n            <span class=\\\"bar\\\">\\r\\n            </span>\\r\\n        </li>\\r\\n        <li>\\r\\n        </li>\\r\\n    </ul>\\r\\n\\r\\n    <fieldset>\\r\\n        <div class=\\\"row pb-4\\\">\\r\\n            <div class=\\\"col-xxl-12 p-3 alert-warning\\\">\\r\\n                <p class=\\\"font-20 text-warning\\\">Step 1 - Select question type</p>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xxl-12\\\">\\r\\n                <pick-question-type></pick-question-type>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <button class=\\\"next btn btn-success float-right\\\" [disabled]=\\\"validateQuestionType\\\">\\r\\n            Next<i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n        </button>\\r\\n\\r\\n    </fieldset>\\r\\n\\r\\n    <fieldset>\\r\\n        <div class=\\\"row mb-2\\\">\\r\\n            <div class=\\\"col-xxl-12 mb-2 alert-warning p-3\\\">\\r\\n                <p class=\\\"font-20 text-warning\\\">Step 2 - Build question</p>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xxl-12 mx-3\\\">\\r\\n                <div class=\\\"form-group mb-2 row d-flex justify-content-between flex-wrap mb-2\\\">\\r\\n                    <label class=\\\"font-16 mb-3\\\">Select question category</label>\\r\\n                    <div class=\\\"d-flex w-100 row\\\">\\r\\n                        <div class=\\\"radio col-xxl-3\\\" *ngFor=\\\"let category of questionCategory\\\">\\r\\n                            <input type=\\\"radio\\\" id=\\\"{{category.name}}\\\" name=\\\"assessmentCategory\\\"\\r\\n                                (click)=\\\"onSelectQuestionCategory(category.tag)\\\" [checked]=\\\"category.checked\\\">\\r\\n                            <label for=\\\"{{category.name}}\\\">{{category.name}}</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group  row d-flex justify-content-between flex-wrap mb-2\\\">\\r\\n                    <label class=\\\"font-16 mb-3\\\">Select question complexity level</label>\\r\\n                    <div class=\\\"d-flex w-100 row\\\">\\r\\n                        <div class=\\\"radio col-xxl-3\\\" *ngFor=\\\"let level of questionComplexityLevel\\\">\\r\\n                            <input type=\\\"radio\\\" id=\\\"{{level.name}}\\\" name=\\\"complexityLevel\\\" [checked]=\\\"level.checked\\\"\\r\\n                                (click)=\\\"onSelectComplexityLevel(level.value)\\\">\\r\\n                            <label for=\\\"{{level.name}}\\\">{{level.name}}</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"w-100\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n\\r\\n        <button class=\\\"btn btn-success ml-2 float-right next\\\" [disabled]=\\\"validateQuestion\\\">\\r\\n            Next<i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n        </button>\\r\\n        <div class=\\\"previous btn btn-danger float-right\\\">\\r\\n            <i class=\\\"fa fa-arrow-left mr-2\\\"></i>Previous\\r\\n        </div>\\r\\n    </fieldset>\\r\\n\\r\\n    <fieldset>\\r\\n        <div class=\\\"row pb-4\\\">\\r\\n            <div class=\\\"col-xxl-12 p-3 alert-warning\\\">\\r\\n                <p class=\\\"font-20 text-warning\\\">Step 3 - Add solution content (Optional)</p>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xxl-12 mb-2\\\">\\r\\n                <label for=\\\"\\\">Solution content</label>\\r\\n                <ckeditor class=\\\"w-100\\\" [config]=\\\"editorSolutionConfig\\\" [(ngModel)]=\\\"solutionContent\\\"\\r\\n                    #questionInput=\\\"ngModel\\\" placeholder=\\\"Enter question (min length: 3 and max length: 4000)\\\"\\r\\n                    [required]=\\\"true\\\">\\r\\n                </ckeditor>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <button class=\\\"btn btn-success ml-2 float-right next\\\" (click)=\\\"loadPreviewQuestion()\\\">\\r\\n            Next<i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n        </button>\\r\\n        <div class=\\\"previous btn btn-danger float-right\\\">\\r\\n            <i class=\\\"fa fa-arrow-left mr-2\\\"></i>Previous\\r\\n        </div>\\r\\n    </fieldset>\\r\\n\\r\\n    <fieldset>\\r\\n        <div class=\\\"row pb-4\\\">\\r\\n            <div class=\\\"col-xxl-12 p-3 alert-warning\\\">\\r\\n                <p class=\\\"font-20 text-warning\\\">Step 4 - Summary</p>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"w-100\\\">\\r\\n            <div\\r\\n                *ngIf='questionType === \\\"MCQ_SINGLE\\\" || questionType === \\\"MCQ_MULTIPLE\\\" || questionType === \\\"MCQ_TRUE_FALSE\\\"'>\\r\\n                <div class=\\\"row mb-3\\\">\\r\\n                    <div class=\\\"col-xxl-12\\\">\\r\\n                        <div class=\\\"border-info p-3 alert-info font-18\\\" style=\\\"line-height: 24px;\\\">\\r\\n                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questionResource.Question | sanitizeHtml\\\">\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row mb-3 p-3\\\">\\r\\n                    <div class=\\\"col-lg-6 col-md-12 d-flex justify-content-start mb-2  font-18\\\"\\r\\n                        *ngFor=\\\"let choice of questionResource.Choices;let i = index\\\">\\r\\n                        <div [ngClass]=\\\"{'radio': type === 'radio','checkbox': type === 'checkbox'}\\\">\\r\\n                            <input type=\\\"{{type}}\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answer\\\" disabled readonly>\\r\\n                            <label for=\\\"{{choice.ChoiceId}}\\\"></label>\\r\\n                        </div>\\r\\n                        <label for=\\\"{{choice.ChoiceId}}\\\">\\r\\n                            <p [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></p>\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"mb-3 font-18\\\">\\r\\n                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                        <div class=\\\"text-dark\\\" *ngFor=\\\"let data of answers;let checkIndex =index\\\">\\r\\n                            <span [MathJax]=\\\"data | sanitizeHtml\\\">\\r\\n                            </span>\\r\\n                            {{checkIndex  === answers.length - 1? ' ' : ','}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf='questionType === \\\"MCQ_CHOICE_MATRIX\\\"'>\\r\\n                <div class=\\\"row mb-3\\\">\\r\\n                    <div class=\\\"col-xxl-12\\\">\\r\\n                        <div class=\\\"border-info p-3 alert-info font-18\\\" style=\\\"line-height: 24px;\\\">\\r\\n                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questionResource.Question | sanitizeHtml\\\">\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <table class=\\\"border-collapse my-2 font-18 p-3\\\" style=\\\"pointer-events: none\\\">\\r\\n                    <tr class=\\\"bg-lightgray\\\">\\r\\n                        <td></td>\\r\\n                        <td *ngFor=\\\"let option of questionResource.Options\\\">\\r\\n                            <p [MathJax]=\\\"option.OptionText | sanitizeHtml\\\"></p>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr style=\\\"background: none !important;\\\" *ngFor=\\\"let choice of questionResource.Choices\\\">\\r\\n                        <td><p [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></p></td>\\r\\n                        <td *ngFor=\\\"let option of questionResource.Options\\\">\\r\\n                            <div class=\\\"radio\\\">\\r\\n                                <input type=\\\"radio\\\" disabled readonly [id]=\\\"option.OptionId+choice.ChoiceId\\\"\\r\\n                                    name=\\\"{{ choice.ChoiceId }}\\\">\\r\\n                                <label for=\\\"{{option.OptionId+choice.ChoiceId}}\\\"></label>\\r\\n                            </div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n                <div class=\\\"mb-3 font-18\\\">\\r\\n                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                        <span *ngIf=\\\"answers.length > 0\\\">\\r\\n                            <span class=\\\"text-dark\\\" *ngFor=\\\"let answer of answers;let checkIndex =index\\\">\\r\\n                                <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span>\\r\\n                                -\\r\\n                                <span [MathJax]=\\\"answer.optionName | sanitizeHtml\\\"></span>\\r\\n                                {{checkIndex  === answers.length - 1? ' ' : ','}}\\r\\n                            </span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf='questionType === \\\"MCQ_MATCH_LIST\\\"'>\\r\\n                <div class=\\\"row mb-3\\\">\\r\\n                    <div class=\\\"col-xxl-12\\\">\\r\\n                        <div class=\\\"border-info p-3 alert-info font-18\\\" style=\\\"line-height: 24px;\\\">\\r\\n                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questionResource.Question | sanitizeHtml\\\">\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <ng-container *ngFor=\\\"let answer of answers\\\">\\r\\n                    <div class=\\\"choice-container\\\">\\r\\n                        <div class=\\\"item\\\">\\r\\n                            <div class=\\\"choice--group\\\">\\r\\n                                <div class=\\\"choice--label\\\">\\r\\n                                    <p [MathJax]=\\\"answer.choiceName  | sanitizeHtml\\\"></p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"line-circle\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"item\\\">\\r\\n                            <div class=\\\"drag--container\\\">\\r\\n                                <div class=\\\"choice--editor option--container zone\\\" class=\\\"option--item\\\"\\r\\n                                    [MathJax]=\\\"answer.optionName  | sanitizeHtml\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                <div class=\\\"mb-3 font-18\\\">\\r\\n                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                        <span class=\\\"text-success\\\">Answer&nbsp;:&nbsp;</span>\\r\\n                        <span *ngIf=\\\"answers.length > 0\\\">\\r\\n                            <span class=\\\"text-dark\\\" *ngFor=\\\"let answer of answers;let checkIndex =index\\\">\\r\\n                                <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span>\\r\\n                                -\\r\\n                                <span [MathJax]=\\\"answer.optionName | sanitizeHtml\\\"></span>\\r\\n                                {{checkIndex  === answers.length - 1? ' ' : ','}}</span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"showSaveQuestion\\\">\\r\\n            <button class=\\\"btn btn-success float-right ml-2\\\" (click)=\\\"saveQuestion()\\\" [disabled]=\\\"showAddQuestion\\\">\\r\\n                <i class=\\\"fa fa-save mr-2\\\"></i>\\r\\n                Save question\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"showAddQuestion\\\">\\r\\n            <button class=\\\"btn btn-info float-right\\\" (click)=\\\"addQuestion()\\\">\\r\\n                <i class=\\\"fa fa-plus-circle mr-2\\\"></i>\\r\\n                Add one more question\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"previous btn btn-danger float-right mr-2\\\" (click)=\\\"resetPreviewQuestions()\\\">\\r\\n            <i class=\\\"fa fa-arrow-left mr-2\\\"></i>Previous\\r\\n        </div>\\r\\n    </fieldset>\\r\\n</div>\"","export default \"<div class=\\\"col-12 filterbg my-4 rounded\\\">\\r\\n    <div class=\\\"filtericon font-20\\\">\\r\\n        <i class=\\\"fa fa-filter\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"row d-flex justify-content-start align-items-center\\\">\\r\\n        <div class=\\\"col-lg-3 mb-3\\\">\\r\\n            <ng-select [items]=\\\"subjects\\\" bindLabel=\\\"title\\\" placeholder=\\\"Select subject\\\" [(ngModel)]=\\\"selectedSubject\\\">\\r\\n            </ng-select>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-end pb-3 row\\\">\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n            <button class=\\\"btn btn-success float-right waves-effect waves-light\\\" (click)=\\\"loadSubjectTree()\\\">\\r\\n                <i class=\\\"fa fa-filter mr-2\\\"></i>Apply\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xxl-3 mb-3 py-3\\\">\\r\\n        <div class=\\\"d-flex justify-content-start mb-2\\\" *ngIf=\\\"subjectTree.length > 1\\\">\\r\\n            <div class=\\\"btn btn-primary mr-2\\\" (click)=\\\"toggleTreeNodes()\\\">\\r\\n                <i class=\\\"fa fa-clone mr-2\\\"></i>\\r\\n                <span *ngIf=\\\"enableExpandNode === false\\\">\\r\\n                    Expand all\\r\\n                </span>\\r\\n                <span *ngIf=\\\"enableExpandNode === true\\\">\\r\\n                    Collapse all\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div id=\\\"treeView\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xxl-9 mb-3 py-3\\\">\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'root'\\\">\\r\\n            <p><b>Subject name</b></p>\\r\\n            <p>{{nodeName}}</p>\\r\\n            <p><b>Subject description</b></p>\\r\\n            <p>{{nodeDescription}}</p>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'concept'\\\">\\r\\n            <p><b>Concept name</b></p>\\r\\n            <p>{{nodeName}}</p>\\r\\n            <p><b>Concept description</b></p>\\r\\n            <p>{{nodeDescription}}</p>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'topic'\\\">\\r\\n            <div class=\\\"d-flex row justify-content-between align-items-center\\\">\\r\\n                <div class=\\\"col-xxl-3\\\">\\r\\n                    <h4 class=\\\"font-20 mb-2\\\">{{nodeName}}</h4>\\r\\n                </div>\\r\\n                <div\\r\\n                    class=\\\"d-flex align-items-start flex-wrap justify-content-md-between justify-content-lg-end col-xxl-9\\\">\\r\\n                    <div class=\\\"btn btn-info mb-2 mr-2\\\" (click)=\\\"openPreviewQuestionModal()\\\"\\r\\n                        *ngIf=\\\"questions.length > 0\\\">\\r\\n                        <i class=\\\"fa fa-list-alt mr-2\\\"></i> Preview questions\\r\\n                    </div>\\r\\n                    <div class=\\\"btn btn-success mb-2 mr-2\\\" (click)=\\\"openSimulateQuestionModal()\\\"\\r\\n                        *ngIf=\\\"questions.length > 0\\\">\\r\\n                        <i class=\\\"fa fa-cogs mr-2\\\"></i> Simulate questions\\r\\n                    </div>\\r\\n                    <a class=\\\"btn btn-primary text-white mb-2 mr-2\\\" target=\\\"_blank\\\"\\r\\n                        [routerLink]=\\\"['/general-concept-and-topic',topicId,'general-topic-question-create']\\\">\\r\\n                        <i class=\\\"fa fa-plus-circle mr-2\\\"></i> Create new question\\r\\n                    </a>\\r\\n                    <div class=\\\"btn btn-warning text-white mb-2\\\" (click)=\\\"loadUpdatedTopicQuestions()\\\">\\r\\n                        <i class=\\\"fa fa-refresh mr-2\\\"></i> Refresh\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"table-responsive\\\" *ngIf=\\\"questions\\\">\\r\\n                <table class=\\\"table table-hover table-striped table-bordered nowrap w-100\\\" id=\\\"generalSubjectsTable\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Select</th>\\r\\n                            <th>Question category</th>\\r\\n                            <th>Question type</th>\\r\\n                            <th>Complexity level</th>\\r\\n                            <th>Actions</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let question of questions ;trackBy: trackId\\\">\\r\\n                            <td data-column=\\\"Select\\\">\\r\\n                                <div class=\\\"checkbox\\\">\\r\\n                                    <input type=\\\"checkbox\\\" id=\\\"{{question.id}}\\\"\\r\\n                                        (change)=\\\"checkSelectedQuestions($event)\\\" class=\\\"checkAll\\\">\\r\\n                                    <label for=\\\"{{question.id}}\\\"></label>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                            <td data-column=\\\"Question category\\\">{{question.questionCategory}}</td>\\r\\n                            <td data-column=\\\"Question type\\\">{{question.questionType}}</td>\\r\\n                            <td data-column=\\\"Complexity level\\\">{{question.complexityLevel}}</td>\\r\\n                            <td data-column=\\\"Actions\\\">\\r\\n                                <div>\\r\\n                                    <a class=\\\"btn btn-outline-info  mr-1 mb-1 btn-icon-size\\\" target=\\\"_blank\\\"\\r\\n                                        [routerLink]=\\\"['/general-concept-and-topic', question.id, 'general-topic-question-view' ]\\\">\\r\\n                                        <i class=\\\"fa fa-eye\\\"></i>\\r\\n                                    </a>\\r\\n                                    <a class=\\\"btn btn-outline-success  mr-1 mb-1 btn-icon-size\\\" target=\\\"_blank\\\"\\r\\n                                        [routerLink]=\\\"['/general-concept-and-topic', question.id, 'general-topic-question-edit' ]\\\">\\r\\n                                        <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <div class=\\\"mt-3 d-flex w-100 justify-content-end\\\" *ngIf=\\\"questions.length > 0\\\">\\r\\n                    <button class=\\\"btn btn-danger mr-2\\\" [disabled]=\\\"tableAction\\\" (click)=\\\"resetSelectedTopicQuestion()\\\">\\r\\n                        <i class=\\\"fa fa-times mr-2\\\"></i>Reset\\r\\n                    </button>\\r\\n                    <button class=\\\"btn btn-danger\\\" [disabled]=\\\"tableAction\\\" (click)=\\\"deleteTopicQuestions()\\\">\\r\\n                        <i class=\\\"fa fa-trash mr-2\\\"></i>Delete\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal\\\" id=\\\"simulateQuestionModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"simulateQuestionModal\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-notify\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header bg-warning d-flex align-items-center\\\">\\r\\n                <h5 class=\\\"modal-title text-white\\\">\\r\\n                    Simulate question - {{nodeName}}\\r\\n                </h5>\\r\\n                <div class=\\\"close btn btn-xl\\\" (click)=\\\"closeSimulateQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div id=\\\"questionSimulateIndicators\\\" class=\\\"carousel slide carousel-fade\\\" data-ride=\\\"carousel\\\"\\r\\n                    data-interval=\\\"false\\\">\\r\\n                    <div class=\\\"carousel-inner\\\">\\r\\n                        <div class=\\\"carousel-item\\\" [ngClass]=\\\"{'active': questionIndex === 0}\\\"\\r\\n                            *ngFor=\\\"let questiondata of topicQuestions;let questionIndex = index;\\\">\\r\\n                            <div\\r\\n                                *ngIf=\\\"questiondata.questionType === 'MCQ_SINGLE' || questiondata.questionType === 'MCQ_MULTIPLE' || questiondata.questionType === 'MCQ_TRUE_FALSE'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row mb-3 p-3 text-capitalize\\\">\\r\\n                                    <div class=\\\"col-lg-6 col-md-12 d-flex justify-content-start mb-2\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices;let i = index\\\">\\r\\n                                        <div class=\\\"radio\\\" *ngIf=\\\"questiondata.questionType !== 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answer\\\"\\r\\n                                                (change)=\\\"onSelectMCQSingleAnswer(questiondata.id,choice.ChoiceId)\\\">\\r\\n                                            <label for=\\\"{{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"checkbox\\\" *ngIf=\\\"questiondata.questionType === 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answers\\\"\\r\\n                                                (click)=\\\"onSelectMCQMultipleAnswer(questiondata.id,choice.ChoiceId,$event)\\\">\\r\\n                                            <label for=\\\" {{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <label for=\\\"{{choice.ChoiceId}}\\\"\\r\\n                                            [MathJax]=\\\"choice.ChoiceText  | sanitizeHtml\\\"></label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_MATCH_LIST'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div cdkDropListGroup>\\r\\n                                    <div class=\\\"example-container d-flex justify-content-between flex-nowrap mb-2\\\">\\r\\n                                        <div class=\\\"mcq-left mr-2\\\">\\r\\n                                            <div class=\\\"match-list\\\" data-value=\\\"questiondata.choices\\\">\\r\\n                                                <div class=\\\"list-box\\\" *ngFor=\\\"let item of questiondata.choices\\\"\\r\\n                                                    [MathJax]=\\\"item.ChoiceText  | sanitizeHtml\\\"></div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <!-- <div class=\\\"line-circle w-auto\\\" *ngFor=\\\"let item of viewModel.Choices\\\" id=\\\"{{item}}\\\"></div> -->\\r\\n                                        <div class=\\\"mcq-right ml-2\\\">\\r\\n                                            <div cdkDropList [cdkDropListData]=\\\"questiondata.options\\\" class=\\\"match-list\\\"\\r\\n                                                (cdkDropListDropped)=\\\"updatedDropList(questiondata.id, $event)\\\">\\r\\n                                                <div class=\\\"list-box\\\" *ngFor=\\\"let item of questiondata.options\\\" cdkDrag\\r\\n                                                    [MathJax]=\\\"item.OptionText  | sanitizeHtml\\\">\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_CHOICE_MATRIX'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <table class=\\\"table-matrix my-2 text-capitalize\\\">\\r\\n                                    <tr class=\\\"bg-lightgray\\\">\\r\\n                                        <td></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"option.OptionText | sanitizeHtml\\\"></span>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr style=\\\"background: none !important;\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices\\\">\\r\\n                                        <td><span [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></span></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <div class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId+option.OptionId\\\"\\r\\n                                                    name=\\\"{{ choice.ChoiceId }}\\\"\\r\\n                                                    (click)=\\\"onSelectChoiceMatrixAnswer(questiondata.id,choice.ChoiceId, option.OptionId)\\\">\\r\\n                                                <label for=\\\"{{choice.ChoiceId+option.OptionId}}\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                            <div class=\\\"w-100 d-flex justify-content-end align-self-center my-2\\\">\\r\\n                                <div class=\\\"btn btn-danger mb-2\\\" href=\\\"#questionSimulateIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"prev\\\" *ngIf=\\\"questionIndex !== 0\\\" (click)=\\\"previousQuestion()\\\">\\r\\n                                    <i class=\\\"fa fa-arrow-left mr-2\\\"></i>Previous\\r\\n                                </div>\\r\\n                                <div class=\\\"btn btn-info mx-2 mb-2\\\" (click)=\\\"checkAnswerStatus(questiondata.id)\\\">\\r\\n                                    <i class=\\\"fa fa-check mr-2\\\"></i>Check answer\\r\\n                                </div>\\r\\n                                <div class=\\\"btn btn-success mb-2\\\" href=\\\"#questionSimulateIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"next\\\" *ngIf=\\\"questionIndex !== topicQuestions.length - 1\\\"\\r\\n                                    (click)=\\\"nextQuestion()\\\">\\r\\n                                    Next<i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <div class=\\\"btn btn-danger\\\" (click)=\\\"closeSimulateQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times mr-2\\\"></i> Close\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal\\\" id=\\\"previewQuestionModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"previewQuestionModal\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-notify\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header bg-warning d-flex align-items-center\\\">\\r\\n                <h5 class=\\\"modal-title text-white\\\">\\r\\n                    Preview question - {{nodeName}}\\r\\n                </h5>\\r\\n                <div class=\\\"close btn btn-xl\\\" (click)=\\\"closePreviewQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div id=\\\"questionPreviewIndicators\\\" class=\\\"carousel slide carousel-fade\\\" data-ride=\\\"carousel\\\"\\r\\n                    data-interval=\\\"false\\\">\\r\\n                    <div class=\\\"carousel-inner\\\">\\r\\n                        <div class=\\\"carousel-item\\\" [ngClass]=\\\"{'active': questionIndex === 0}\\\"\\r\\n                            *ngFor=\\\"let questiondata of topicQuestions;let questionIndex = index;\\\">\\r\\n                            <div\\r\\n                                *ngIf=\\\"questiondata.questionType === 'MCQ_SINGLE' || questiondata.questionType === 'MCQ_MULTIPLE' || questiondata.questionType === 'MCQ_TRUE_FALSE'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question  | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row mb-3 p-3 text-capitalize\\\">\\r\\n                                    <div class=\\\"col-lg-6 col-md-12 d-flex justify-content-start mb-2\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices;let i = index\\\">\\r\\n                                        <div class=\\\"radio\\\" *ngIf=\\\"questiondata.questionType !== 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answer\\\"\\r\\n                                                [answers]=\\\"questiondata.answers\\\" disabled readonly>\\r\\n                                            <label for=\\\"{{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"checkbox\\\" *ngIf=\\\"questiondata.questionType === 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answers\\\" disabled\\r\\n                                                readonly [answers]=\\\"questiondata.answers\\\">\\r\\n                                            <label for=\\\" {{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <label for=\\\"{{choice.ChoiceId}}\\\"\\r\\n                                            [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mb-3 font-18\\\">\\r\\n                                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                                        <span class=\\\"text-success\\\">Answer&nbsp;:&nbsp;</span><span class=\\\"text-dark\\\"\\r\\n                                            *ngFor=\\\"let answer of questiondata.answers;let checkIndex =index\\\">\\r\\n                                            <span [MathJax]=\\\"answer | sanitizeHtml\\\"></span>\\r\\n                                            {{checkIndex  === questiondata.answers.length - 1? ' ' : ','}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_MATCH_LIST'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <ng-container *ngFor=\\\"let answer of questiondata.answers;\\\">\\r\\n                                    <div class=\\\"choice-container\\\">\\r\\n                                        <div class=\\\"item\\\">\\r\\n                                            <div class=\\\"choice--group\\\">\\r\\n                                                <div class=\\\"choice--label\\\">\\r\\n                                                    <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"line-circle\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"item\\\">\\r\\n                                            <div class=\\\"drag--container\\\">\\r\\n                                                <div class=\\\"choice--editor option--container zone\\\" class=\\\"option--item\\\"\\r\\n                                                    [MathJax]=\\\"answer.optionName | sanitizeHtml\\\">\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </ng-container>\\r\\n                                <div class=\\\"mb-3 font-18\\\">\\r\\n                                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                                        <span class=\\\"text-success\\\">Answer&nbsp;:&nbsp;</span><span\\r\\n                                            class=\\\"d-flex text-dark flex-nowrap\\\"\\r\\n                                            *ngFor=\\\"let answer of questiondata.answers;let checkIndex =index\\\">\\r\\n                                            <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span> <span>-</span>\\r\\n                                            <span [MathJax]=\\\"answer.optionName | sanitizeHtml\\\"></span>\\r\\n                                            {{checkIndex  === questiondata.answers.length - 1? ' ' : ' ,'}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_CHOICE_MATRIX'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <table class=\\\"table-matrix my-2 text-capitalize\\\">\\r\\n                                    <tr class=\\\"bg-lightgray\\\">\\r\\n                                        <td></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"option.OptionText | sanitizeHtml\\\"></span>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr style=\\\"background: none !important;\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices\\\">\\r\\n                                        <td><span [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></span></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <div class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId+option.OptionId\\\"\\r\\n                                                    name=\\\"{{ choice.ChoiceId }}\\\" disabled readonly>\\r\\n                                                <label for=\\\"{{choice.ChoiceId+option.OptionId}}\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                                <div class=\\\"mb-3 font-18\\\">\\r\\n                                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                                        <span class=\\\"text-success\\\">Answer&nbsp;:&nbsp;</span><span\\r\\n                                            class=\\\"d-flex text-dark flex-nowrap\\\"\\r\\n                                            *ngFor=\\\"let answer of questiondata.answers;let checkIndex =index\\\">\\r\\n                                            <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span> <span>-</span>\\r\\n                                            <span [MathJax]=\\\"answer.optionName | sanitizeHtml\\\"></span>\\r\\n                                            {{checkIndex  === questiondata.answers.length - 1? ' ' : ','}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"w-100 d-flex justify-content-end align-self-center my-2\\\">\\r\\n                                <div class=\\\"btn btn-danger mb-2\\\" href=\\\"#questionPreviewIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"prev\\\" *ngIf=\\\"questionIndex !== 0\\\">\\r\\n                                    <i class=\\\"fa fa-arrow-left mr-2\\\"></i>Previous\\r\\n                                </div>\\r\\n                                <div class=\\\"btn btn-success ml-2  mb-2\\\" href=\\\"#questionPreviewIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"next\\\" *ngIf=\\\"questionIndex !== topicQuestions.length - 1\\\">\\r\\n                                    Next<i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <div class=\\\"btn btn-danger\\\" (click)=\\\"closePreviewQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times mr-2\\\"></i> Close\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { GeneralTopicQuestionManageComponent } from './general-topic-question-manage.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { generalConceptAndTopicRoute } from './general-concept-topic.route';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgJhipsterModule } from 'ng-jhipster';\r\nimport { SharedModule } from '../shared';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { GeneralTopicQuestionCreateComponent } from './general-topic-question-create.component';\r\nimport { QuestionBuilderModule } from '../question-builder/question-builder.module';\r\nimport { GeneralTopicContentManageComponent } from './general-topic-content-manage.component';\r\nimport { SyllabusLessonTopicModule } from '../syllabus-lesson-topic/syllabus-lesson-topic.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        QuestionBuilderModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        SharedModule,\r\n        NgJhipsterModule,\r\n        InfiniteScrollModule,\r\n        NgbModule,\r\n        RouterModule.forChild(generalConceptAndTopicRoute),\r\n        SyllabusLessonTopicModule\r\n    ],\r\n    declarations: [\r\n        GeneralTopicContentManageComponent,\r\n        GeneralTopicQuestionManageComponent,\r\n        GeneralTopicQuestionCreateComponent\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class GeneralConceptAndTopicModule {\r\n\r\n}","import { GeneralTopicQuestionManageComponent } from './general-topic-question-manage.component';\r\nimport { UserRouteAccessService } from '../core';\r\nimport { Routes } from '@angular/router';\r\nimport { GeneralTopicQuestionCreateComponent } from './general-topic-question-create.component';\r\nimport { MCQStandardComponent } from '../question-builder/mcq-standard';\r\nimport { MatchlistComponent } from '../question-builder/matchlist/matchlist.component';\r\nimport { MCQChoiceMatrixComponent } from '../question-builder/mcq-choicematrix';\r\nimport { GeneralTopicContentManageComponent } from './general-topic-content-manage.component';\r\nimport { CurriculumTopicQuestionDetailsComponent } from '../syllabus-lesson-topic/topic-question/topic-question-details.component';\r\nimport { DragAndDropComponent } from '../question-builder/cloze/drag-n-drop/drag-n-drop.component';\r\nimport { CurriculumTopicQuestionUpdateComponent } from '../syllabus-lesson-topic/topic-question/topic-question-update.component';\r\n\r\nexport const generalConceptAndTopicRoute: Routes = [\r\n    {\r\n        path: \"\", redirectTo: \"general-topic-question\", pathMatch: \"full\"\r\n    },\r\n    {\r\n        path: 'general-topic-question',\r\n        component: GeneralTopicQuestionManageComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Manage general topic questions'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/general-topic-question-create',\r\n        component: GeneralTopicQuestionCreateComponent,\r\n        children: [\r\n            {\r\n                path: 'mcqstandard',\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_SINGLE\",\r\n                    title: \"Create\"\r\n                },\r\n            },\r\n            {\r\n                path: \"mcqstandard/:qid\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_SINGLE\",\r\n                    title: \"Edit\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqmultiple\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_MULTIPLE\",\r\n                    mode: \"Create\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqmultiple/:qid\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_MULTIPLE\",\r\n                    mode: \"Edit\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqtruefalse\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_TRUE_FALSE\",\r\n                    title: \"Create\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqtruefalse/:qid\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_TRUE_FALSE\",\r\n                    title: \"Edit\"\r\n                }\r\n            },\r\n            {\r\n                path: 'mcqchoicematrix',\r\n                component: MCQChoiceMatrixComponent,\r\n                data: {\r\n                    title: \"Create\",\r\n                    type: \"MCQ_CHOICE_MATRIX\"\r\n                }\r\n            }, {\r\n                path: 'mcqchoicematrix/:qid',\r\n                component: MCQChoiceMatrixComponent,\r\n                data: {\r\n                    title: \"Edit\",\r\n                    type: \"MCQ_CHOICE_MATRIX\"\r\n                }\r\n            }, {\r\n                path: \"matchlist\",\r\n                component: MatchlistComponent,\r\n                data: {\r\n                    title: \"Create\",\r\n                    type: \"MCQ_MATCH_LIST\"\r\n                }\r\n            },\r\n            {\r\n                path: \"matchlist/:qid\",\r\n                component: MatchlistComponent,\r\n                data: {\r\n                    title: \"Edit\",\r\n                    type: \"MCQ_MATCH_LIST\"\r\n                }\r\n            },\r\n            {\r\n                path: \"clozedrag\",\r\n                component: DragAndDropComponent,\r\n                data: {\r\n                    title: \"Create\",\r\n                    type: \"mcq-drag\"\r\n                }\r\n            },\r\n            {\r\n                path: \"clozedrag/:qid\",\r\n                component: DragAndDropComponent,\r\n                data: {\r\n                    title: \"Edit\",\r\n                    type: \"mcq-drag\"\r\n                }\r\n            }\r\n        ],\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Create general topic question'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/general-topic-question-view',\r\n        component: CurriculumTopicQuestionDetailsComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'View general topic question'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n\r\n    },\r\n    {\r\n        path: ':id/general-topic-question-edit',\r\n        component: CurriculumTopicQuestionUpdateComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Edit general topic question'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n\r\n    },\r\n    {\r\n        path: 'general-topic-content',\r\n        component: GeneralTopicContentManageComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Manage general topic content'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { IGeneralTopicQuestion } from '../shared/model/content/general-topic.question.model';\r\nimport { IGeneralTopicContent } from '../shared/model/content/general-topic-content.model';\r\n\r\ntype EntityResponseType = HttpResponse<IGeneralTopicQuestion>;\r\ntype contentEntityResponseType = HttpResponse<IGeneralTopicContent>;\r\ntype contentArrayResponseType = HttpResponse<IGeneralTopicContent[]>;\r\n\r\nlet headers: HttpHeaders = new HttpHeaders();\r\nheaders = headers.append('Access-Control-Allow-Origin', '*').append('Access-Control-Allow-Headers', '*');\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GeneralConceptAndTopicService {\r\n    public generalTopicsResourceUrl = environment.API_URL + 'services/content/api/general-topics/all-details';\r\n    public topicContentResourceUrl = environment.API_URL + 'services/content/api/general-topic-contents';\r\n    public contentResourceUrl = environment.API_URL + 'services/content/api/contents';\r\n    public questionResourceUrl = environment.API_URL + 'services/content/api/questions';\r\n\r\n    constructor(protected http: HttpClient) { }\r\n\r\n    getTopicContentList(id: number): Observable<contentEntityResponseType> {\r\n        return this.http.get<IGeneralTopicContent>(`${this.generalTopicsResourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    getTopicQuestionList(id: number): Observable<EntityResponseType> {\r\n        return this.http.get<IGeneralTopicQuestion>(`${this.generalTopicsResourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    getContentByContentId(id: number): Observable<contentEntityResponseType> {\r\n        return this.http.get<IGeneralTopicContent>(`${this.contentResourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    updateContent(content: IGeneralTopicContent): Observable<contentEntityResponseType> {\r\n        return this.http.put<IGeneralTopicContent>(this.contentResourceUrl, content, { headers: headers, observe: 'response' });\r\n    }\r\n\r\n    saveTopicContent(topicContents: IGeneralTopicContent): Observable<contentEntityResponseType> {\r\n        return this.http.post<IGeneralTopicContent>(this.topicContentResourceUrl, topicContents, { headers: headers, observe: 'response' });\r\n    }\r\n\r\n    updateTopicContents(topicContents: IGeneralTopicContent[]): Observable<contentArrayResponseType> {\r\n        return this.http.put<IGeneralTopicContent[]>(this.topicContentResourceUrl, topicContents, { headers: headers, observe: 'response' });\r\n    }\r\n\r\n    deleteTopicContents(contentIds): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.topicContentResourceUrl}/${\"batch\"}/${contentIds}`, { observe: 'response' });\r\n    }\r\n\r\n    saveTopicQuestion(question: IGeneralTopicQuestion): Observable<EntityResponseType> {\r\n        return this.http.post<IGeneralTopicQuestion>(this.questionResourceUrl, question, { headers: headers, observe: 'response' });\r\n    }\r\n\r\n    deleteTopicQuestions(questionIds): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.questionResourceUrl}/${\"batch\"}/${questionIds}`, { observe: 'response' });\r\n    }\r\n}\r\n","import { Component, OnInit, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from \"@angular/core\";\r\nimport { Router } from '@angular/router';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { GeneralConceptAndTopicService } from './general-concept-topic.service';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { IGeneralTopicContent } from '../shared/model/content/general-topic-content.model';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { CommonService } from '../shared/common/common.service';\r\nimport { IGeneralSubject } from '../shared/model/content/general-subject.model';\r\nimport { GeneralSubjectService } from '../general-subject/general-subject.service';\r\nimport { FileManagementService } from '../shared/file-management/file-management.service';\r\nimport { saveAs } from 'file-saver'\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./general-topic-content-manage.component.html\",\r\n    providers: [GeneralConceptAndTopicService]\r\n})\r\nexport class GeneralTopicContentManageComponent implements OnInit, AfterViewInit, AfterViewChecked {\r\n    topicContentForm: FormGroup;\r\n    subjects: IGeneralSubject[];\r\n    subjectTree: IGeneralSubject[] = [];\r\n    topicContents: IGeneralTopicContent[] = [];\r\n    contentDetails: IGeneralTopicContent = {};\r\n    contentSource: any[] = [];\r\n    contentType: any[] = [];\r\n    contentIds: any[] = [];\r\n    nodeType: string;\r\n    nodeName: string;\r\n    nodeDescription: string;\r\n    modalTitleName: string;\r\n    contentId: number;\r\n    topicId: number;\r\n    validateContent: boolean;\r\n    checkOrderNumChange: boolean;\r\n    enableExpandNode: boolean;\r\n    disableDropdown: boolean;\r\n    activeUrl: string;\r\n    checkUrl1: boolean;\r\n    checkUrl2: boolean;\r\n    checkUrl3: boolean;\r\n    disableUrl: boolean;\r\n    updateAction: boolean;\r\n    tableAction: boolean;\r\n    selectedSubject: any;\r\n    selectedContentSource: any;\r\n    selectedContentType: any;\r\n    fileName: string;\r\n    uploadedFileName: string;\r\n    uploadedFilePath: any;\r\n    fileType: any;\r\n    selectedFile: any = null;\r\n    showFileAction: boolean;\r\n\r\n    constructor(\r\n        public _router: Router,\r\n        private generalSubjectService: GeneralSubjectService,\r\n        private generalTopicContentService: GeneralConceptAndTopicService,\r\n        public formBuilder: FormBuilder,\r\n        public pluginService: PluginService,\r\n        public commonService: CommonService,\r\n        private changeDetectRef: ChangeDetectorRef,\r\n        public fileService: FileManagementService\r\n    ) {\r\n        this.enableExpandNode = false;\r\n        this.topicContents = [];\r\n        this.fileName = \"No file chosen\";\r\n        this.tableAction = true;\r\n        this.updateAction = true;\r\n        this.checkUrl1 = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadSubjectData();\r\n        this.createTopicContentForm();\r\n        this.getContentType();\r\n        this.getContentSource();\r\n    }\r\n\r\n    getContentType() {\r\n        this.commonService.getContentTypeList().subscribe((typeData: any) => {\r\n            this.contentType = typeData;\r\n        });\r\n    }\r\n\r\n    getContentSource() {\r\n        this.commonService.getContentSourceList().subscribe((sourceData: any) => {\r\n            this.contentSource = sourceData;\r\n        });\r\n    }\r\n\r\n    createTopicContentForm() {\r\n        this.topicContentForm = this.formBuilder.group({\r\n            contentTitle: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(75)]),\r\n            contentDescription: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(250)]),\r\n            webUrl1: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(2048)]),\r\n            publisher1: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(50)]),\r\n            webUrl2: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(2048)]),\r\n            publisher2: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(50)]),\r\n            webUrl3: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(2048)]),\r\n            publisher3: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(50)])\r\n        })\r\n    }\r\n\r\n    get contentFormControl() { return this.topicContentForm.controls; }\r\n\r\n    loadSubjectData() {\r\n        this.generalSubjectService.getSubjectSearchList().subscribe(\r\n            (res: HttpResponse<IGeneralTopicContent[]>) => this.assignResponseToList(res.body),\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        )\r\n    }\r\n\r\n    assignResponseToList(data: IGeneralTopicContent[]) {\r\n        this.subjects = data;\r\n    }\r\n\r\n    protected onError(errorMessage: string) {\r\n        this.pluginService.alertMessage(errorMessage, \"error\");\r\n    }\r\n\r\n    showConceptAndTopicDetails() {\r\n        var localThisObj = this;\r\n        $('#treeView')\r\n            .on('changed.jstree', function (e, data) {\r\n                var i, j;\r\n                for (i = 0, j = data.selected.length; i < j; i++) {\r\n                    localThisObj.nodeType = data.node.type;\r\n                    if (localThisObj.nodeType === \"root\") {\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                    }\r\n                    else if (localThisObj.nodeType === \"concept\") {\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                        localThisObj.contentIds = [];\r\n\r\n                    } else if (localThisObj.nodeType === \"topic\") {\r\n                        localThisObj.contentIds = [];\r\n                        localThisObj.topicContents = [];\r\n                        localThisObj.topicId = data.node.data.id;\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                        localThisObj.getTopicContentList(localThisObj.topicId);\r\n                    } else {\r\n\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    getTopicContentList(topicId: number) {\r\n        this.generalTopicContentService.getTopicContentList(topicId).subscribe(\r\n            (res: HttpResponse<IGeneralTopicContent>) => this.assignResponseToTopicList(res.body),\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        )\r\n    }\r\n\r\n    protected assignResponseToTopicList(data: IGeneralTopicContent) {\r\n        this.contentIds = [];\r\n        this.topicContents = [];\r\n        this.topicContents = data.generalTopicContents;\r\n        this.sortArrayByOrderNumber(this.topicContents);\r\n        this.updateAction = true;\r\n        this.tableAction = true;\r\n        if (this.topicContents.length > 0) {\r\n            this.dragTableContent();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.showConceptAndTopicDetails();\r\n    }\r\n\r\n    loadSubjectTree() {\r\n        if (this.selectedSubject === null || this.selectedSubject === undefined) {\r\n            this.selectedSubject = null;\r\n            this.pluginService.alertMessage(\"Please select a filter and then apply\", \"error\")\r\n        } else {\r\n            this.subjectTree = [];\r\n            this.pluginService.jsTree(\"#treeView\", this.subjectTree, false);\r\n            let subjectId = this.selectedSubject.id;\r\n            if (subjectId) {\r\n                this.generalSubjectService.getSubjectTreeBySubjectId(subjectId).subscribe(\r\n                    (res: HttpResponse<IGeneralSubject[]>) => this.assignResponsetoTree(res.body),\r\n                    (res: HttpErrorResponse) => this.onError(res.message)\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    assignResponsetoTree(data: IGeneralSubject[]) {\r\n        this.subjectTree = data;\r\n        this.pluginService.jsTree(\"#treeView\", this.subjectTree, false);\r\n        this.nodeType = \"\";\r\n        this.enableExpandNode = false;\r\n    }\r\n\r\n    trimValue(value) {\r\n        if (value === null || value === undefined) {\r\n            return value;\r\n        } else {\r\n            return value.trim();\r\n        }\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        this.validateTopicContentForm();\r\n        this.changeDetectRef.detectChanges();\r\n    }\r\n\r\n    validateTopicContentForm() {\r\n        let contentName, webURL1, webURL2, webURL3;\r\n        contentName = this.trimValue(this.topicContentForm.value.contentTitle);\r\n        webURL1 = this.trimValue(this.topicContentForm.value.webUrl1);\r\n        webURL2 = this.trimValue(this.topicContentForm.value.webUrl2);\r\n        webURL3 = this.trimValue(this.topicContentForm.value.webUrl3);\r\n        if (contentName === \"\" || contentName === undefined || contentName === null) {\r\n            this.validateContent = true;\r\n        }\r\n        if ((this.uploadedFilePath === \"\" || this.uploadedFilePath === undefined || this.uploadedFilePath === null)) {\r\n            this.validateContent = true;\r\n        }\r\n        if (this.topicContentForm.valid) {\r\n            this.validateContent = false;\r\n        }\r\n        if (this.topicContentForm.invalid) {\r\n            this.validateContent = true;\r\n        }\r\n        if (this.checkUrl1 === true) {\r\n            if ((webURL1 === \"\" || webURL1 === undefined || webURL1 === null)) {\r\n                this.validateContent = true;\r\n            }\r\n        }\r\n        if (this.checkUrl2 === true) {\r\n            if ((webURL2 === \"\" || webURL2 === undefined || webURL2 === null)) {\r\n                this.validateContent = true;\r\n            }\r\n        }\r\n        if (this.checkUrl3 === true) {\r\n            if ((webURL3 === \"\" || webURL3 === undefined || webURL3 === null)) {\r\n                this.validateContent = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    onActiveWebUrlSelection(event) {\r\n        if (event.target.checked === true) {\r\n            this.activeUrl = event.target.id;\r\n            if (this.activeUrl === \"webUrl1\") {\r\n                this.checkUrl1 = true;\r\n                this.checkUrl2 = false;\r\n                this.checkUrl3 = false;\r\n            } else if (this.activeUrl === \"webUrl2\") {\r\n                this.checkUrl2 = true;\r\n                this.checkUrl3 = false;\r\n                this.checkUrl1 = false;\r\n            } else if (this.activeUrl === \"webUrl3\") {\r\n                this.checkUrl3 = true;\r\n                this.checkUrl1 = false;\r\n                this.checkUrl2 = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    onVideoFileChanges(event) {\r\n        let splitType;\r\n        this.selectedFile = event[0];\r\n        splitType = this.selectedFile.type.split('/');\r\n        this.fileType = splitType[0];\r\n        this.fileName = this.selectedFile.name;\r\n        if ((this.fileType === \"video\") && (this.selectedFile.size > 209715200)) {\r\n            this.pluginService.alertMessage(\"Please upload file size lesser than 200 MB\", \"error\");\r\n        }\r\n    }\r\n\r\n    uploadVideoFile() {\r\n        if (this.fileName !== \"No file chosen\") {\r\n            if (this.fileType === \"video\") {\r\n                this.fileService.getpresignedurls(this.fileName).subscribe(res => {\r\n                    if (res.status === 200) {\r\n                        this.uploadedFileName = Object.keys(res.body)[0];\r\n                        this.uploadedFilePath = Object.values(res.body)[0];\r\n                        this.fileName = this.uploadedFileName;\r\n                        if (this.uploadedFileName && this.uploadedFilePath) {\r\n                            let block, base64Data, dataSrc;\r\n                            dataSrc = this.selectedFile.base64;\r\n                            block = dataSrc.split(\";\");\r\n                            base64Data = block[1].split(\",\")[1];\r\n                            this.fileService.uploadVideoFile(this.uploadedFilePath, base64Data).subscribe((event) => {\r\n                                if (event instanceof HttpResponse) {\r\n                                    this.showFileAction = true;\r\n                                    this.pluginService.alertMessage(\"File uploaded successfully\", \"success\");\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                this.pluginService.alertMessage(\"Invalid file, it support only Video formats\", \"error\")\r\n            }\r\n        } else {\r\n            this.pluginService.alertMessage(\"Please choose file and upload it\", \"error\")\r\n        }\r\n    }\r\n\r\n    onDocumentFileChanges(event) {\r\n        this.selectedFile = event.target.files;\r\n        this.fileName = this.selectedFile[0].name;\r\n        if ((this.selectedFile[0].type === \"application/pdf\") && (this.selectedFile[0].size > 104857600)) {\r\n            this.pluginService.alertMessage(\"Please upload file size lesser than 100 MB\", \"error\");\r\n        }\r\n    }\r\n\r\n    uploadDocumentFile() {\r\n        if (this.fileName !== \"No file chosen\") {\r\n            if (this.selectedFile[0].type === \"application/pdf\") {\r\n                let file = this.selectedFile.item(0);\r\n                this.fileService.getpresignedurls(this.fileName).subscribe(res => {\r\n                    if (res.status === 200) {\r\n                        this.uploadedFileName = Object.keys(res.body)[0];\r\n                        this.uploadedFilePath = Object.values(res.body)[0];\r\n                        this.fileName = this.uploadedFileName;\r\n                        if (this.uploadedFileName && this.uploadedFilePath) {\r\n                            this.fileService.uploadPDFFile(this.uploadedFilePath, file).subscribe((event) => {\r\n                                if (event instanceof HttpResponse) {\r\n                                    this.showFileAction = true;\r\n                                    this.pluginService.alertMessage(\"File uploaded successfully\", \"success\");\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                this.pluginService.alertMessage(\"Invalid file, it support only PDF\", \"error\");\r\n            }\r\n        } else {\r\n            this.pluginService.alertMessage(\"Please choose file and upload it\", \"error\")\r\n        }\r\n    }\r\n\r\n    downloadFile() {\r\n        if (this.uploadedFileName) {\r\n            this.subscribeToDownloadResponse(this.fileService.downloadFiles(this.uploadedFileName));\r\n        }\r\n    }\r\n\r\n    protected subscribeToDownloadResponse(result: Observable<HttpResponse<IGeneralTopicContent>>) {\r\n        result.subscribe((res: HttpResponse<IGeneralTopicContent>) => this.onDownloadSuccess(res), (errRes: HttpErrorResponse) => this.onDownloadError(errRes));\r\n    }\r\n\r\n    onDownloadSuccess(resp) {\r\n        if (resp.body) {\r\n            let downloadFilePath = Object.values(resp.body)[0];\r\n            saveAs(downloadFilePath);\r\n        }\r\n    }\r\n\r\n    onDownloadError(error) {\r\n        this.pluginService.alertMessage(\"Error in downloading file\", \"error\");\r\n    }\r\n\r\n    addContent() {\r\n        this.modalTitleName = \"Add\";\r\n        this.openTopicContentModal();\r\n        this.resetFormValues();\r\n        this.validateContent = false;\r\n        this.selectedContentSource = null;\r\n        this.selectedContentType = null;\r\n        this.uploadedFileName = \"\";\r\n        this.uploadedFilePath = \"\";\r\n        this.fileName = \"No file chosen\";\r\n    }\r\n\r\n    saveTopicContent() {\r\n        if (this.topicContentForm.valid) {\r\n            this.validateContent = false;\r\n            let generalTopicContents: IGeneralTopicContent[] = [], content: IGeneralTopicContent = {}, contentDetail = content.content;\r\n            contentDetail = {};\r\n            contentDetail.title = this.trimValue(this.topicContentForm.value.contentTitle);\r\n            contentDetail.description = this.trimValue(this.topicContentForm.value.contentDescription);\r\n            contentDetail.url1 = this.trimValue(this.topicContentForm.value.webUrl1);\r\n            contentDetail.url2 = this.trimValue(this.topicContentForm.value.webUrl2);\r\n            contentDetail.url3 = this.trimValue(this.topicContentForm.value.webUrl3);\r\n            contentDetail.publisher1 = this.trimValue(this.topicContentForm.value.publisher1);\r\n            contentDetail.publisher2 = this.trimValue(this.topicContentForm.value.publisher2);\r\n            contentDetail.publisher3 = this.trimValue(this.topicContentForm.value.publisher3);\r\n            contentDetail.contentType = \"VIDEO\";\r\n            contentDetail.contentSource = \"WEB_URL\";\r\n            //Below codes are Video and document file upload\r\n            // contentDetail.contentType = this.selectedContentType.tag;\r\n            // contentDetail.contentSource = this.selectedContentSource.tag;\r\n            // if (this.selectedContentSource.tag === \"FILE_UPLOAD\") {\r\n            //     contentDetail.fileName = this.uploadedFileName;\r\n            //     contentDetail.filePath = this.uploadedFilePath;\r\n            // } else if (this.selectedContentSource.tag === \"WEB_URL\") {\r\n            //Active web url assigning condition\r\n            if (this.checkUrl1 === true) {\r\n                contentDetail.webUrl = contentDetail.url1;\r\n                contentDetail.publisher = contentDetail.publisher1;\r\n            } else if (this.checkUrl2 === true) {\r\n                contentDetail.webUrl = contentDetail.url2;\r\n                contentDetail.publisher = contentDetail.publisher2;\r\n            } else if (this.checkUrl3 === true) {\r\n                contentDetail.webUrl = contentDetail.url3;\r\n                contentDetail.publisher = contentDetail.publisher3;\r\n            } else {\r\n                //If user not at all changed active url, defaultly it takes first url as active\r\n                contentDetail.webUrl = contentDetail.url1;\r\n                contentDetail.publisher = contentDetail.publisher1;\r\n            }\r\n            // }\r\n            generalTopicContents.push({\r\n                generalTopicId: this.topicId,\r\n                content: contentDetail,\r\n                orderNumber: this.topicContents.length + 1\r\n            })\r\n            this.saveTopicContents(generalTopicContents);\r\n        }\r\n        if (this.topicContentForm.invalid) {\r\n            this.validateContent = true;\r\n        }\r\n    }\r\n\r\n    saveTopicContents(generalTopicContents) {\r\n        this.subscribeToSaveResponse(this.generalTopicContentService.saveTopicContent(generalTopicContents));\r\n    }\r\n\r\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<IGeneralTopicContent>>) {\r\n        result.subscribe((res: HttpResponse<IGeneralTopicContent>) => this.onSaveSuccess(res), (errRes: HttpErrorResponse) => this.onSaveError(errRes));\r\n    }\r\n\r\n    protected onSaveSuccess(res: HttpResponse<IGeneralTopicContent>) {\r\n        this.pluginService.alertMessage(\"Topic content created successfully\", \"success\")\r\n        this.getTopicContentList(this.topicId);\r\n        this.checkContentType();\r\n        this.resetFormValues();\r\n        this.uploadedFileName = \"\";\r\n        this.uploadedFilePath = \"\";\r\n    }\r\n\r\n    protected onSaveError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not save, please contact admin\", \"error\")\r\n    }\r\n\r\n    openTopicContentModal() {\r\n        this.pluginService.showModalWindow(\"#generalTopicContent\");\r\n    }\r\n\r\n    closeTopicContentModal() {\r\n        this.pluginService.hideModalWindow(\"#generalTopicContent\");\r\n    }\r\n\r\n    closeTopicContentModalWithOutSaving() {\r\n        if (this.modalTitleName === \"View\") {\r\n            this.closeTopicContentModal();\r\n        } else if (this.modalTitleName === \"Add\" || this.modalTitleName === \"Edit\") {\r\n            var localthisObject = this;\r\n            swal({\r\n                title: \"Are you sure to close without saving content ?\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonText: \"Yes\",\r\n                confirmButtonColor: \"#32b432\",\r\n                cancelButtonText: \"No\",\r\n                closeOnConfirm: true,\r\n                closeOnCancel: true\r\n            },\r\n                function (isConfirm) {\r\n                    if (isConfirm === true) {\r\n                        localthisObject.checkContentType();\r\n                    } else {\r\n                        localthisObject.closeTopicContentModal();\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    checkContentType() {\r\n        this.closeTopicContentModal();\r\n        if (this.selectedContentSource) {\r\n            if (this.selectedContentSource.tag === 'FILE_UPLOAD') {\r\n                if (this.uploadedFilePath) {\r\n                    this.deleteUploadedFile();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteUploadedFile() {\r\n        this.subscribeToDeleteFiletResponse(this.fileService.deleteUploadedFile(this.uploadedFileName));\r\n    }\r\n\r\n    protected subscribeToDeleteFiletResponse(resp: Observable<HttpResponse<any>>) {\r\n        resp.subscribe((res: HttpResponse<any>) => this.onDeleteFileSuccess(res), (res: HttpErrorResponse) => this.onDeleteError(res));\r\n    }\r\n\r\n    onDeleteFileSuccess(resp) {\r\n        this.fileName = \"No file chosen\";\r\n        this.uploadedFileName = \"\";\r\n        this.uploadedFilePath = \"\";\r\n        this.pluginService.alertMessage(\"File deleted successfully\", \"success\");\r\n    }\r\n\r\n    getContent(contentId) {\r\n        let topicContents: IGeneralTopicContent[] = [], contentDetails: any = {};\r\n        topicContents = this.topicContents.filter(item => item.content.id === contentId);\r\n        contentDetails = topicContents[0].content;\r\n        this.patchContentFormfields(contentDetails);\r\n        this.openTopicContentModal()\r\n    }\r\n\r\n    getContentDetails(contentId) {\r\n        let topicContents: IGeneralTopicContent[] = [];\r\n        this.contentDetails = {};\r\n        topicContents = this.topicContents.filter(item => item.content.id === contentId);\r\n        this.contentDetails = topicContents[0];\r\n        if (this.contentDetails.content.webUrl == this.contentDetails.content.url1) {\r\n            this.checkUrl1 = true;\r\n            this.checkUrl2 = false;\r\n            this.checkUrl3 = false;\r\n        } else if (this.contentDetails.content.webUrl == this.contentDetails.content.url2) {\r\n            this.checkUrl2 = true;\r\n            this.checkUrl3 = false;\r\n            this.checkUrl1 = false;\r\n        } else if (this.contentDetails.content.webUrl == this.contentDetails.content.url3) {\r\n            this.checkUrl3 = true;\r\n            this.checkUrl2 = false;\r\n            this.checkUrl1 = false;\r\n        } else {\r\n            this.checkUrl1 = false;\r\n            this.checkUrl2 = false;\r\n            this.checkUrl3 = false;\r\n        }\r\n        this.openTopicContentModal();\r\n    }\r\n\r\n    protected onContentError(errorMessage: string) {\r\n        this.pluginService.alertMessage(errorMessage, \"error\");\r\n    }\r\n\r\n    patchContentFormfields(contentDetails) {\r\n        this.contentId = contentDetails.id;\r\n        this.topicContentForm.patchValue({\r\n            contentTitle: contentDetails.title,\r\n            contentDescription: contentDetails.description,\r\n            webUrl1: contentDetails.url1,\r\n            publisher1: contentDetails.publisher1,\r\n            webUrl2: contentDetails.url2,\r\n            publisher2: contentDetails.publisher2,\r\n            webUrl3: contentDetails.url3,\r\n            publisher3: contentDetails.publisher3\r\n        })\r\n        // this.selectedContentType = this.contentType.filter(item => item.tag === contentDetails.contentType)[0];\r\n        // this.selectedContentSource = this.contentSource.filter(item => item.tag === contentDetails.contentSource)[0];\r\n        // if (this.selectedContentSource) {\r\n        //     if (this.selectedContentSource.tag === \"WEB_URL\") {\r\n        if (contentDetails.webUrl == contentDetails.url1) {\r\n            this.checkUrl1 = true;\r\n            this.checkUrl2 = false;\r\n            this.checkUrl3 = false;\r\n        } else if (contentDetails.webUrl == contentDetails.url2) {\r\n            this.checkUrl2 = true;\r\n            this.checkUrl3 = false;\r\n            this.checkUrl1 = false;\r\n        } else if (contentDetails.webUrl == contentDetails.url3) {\r\n            this.checkUrl3 = true;\r\n            this.checkUrl2 = false;\r\n            this.checkUrl1 = false;\r\n        } else {\r\n            this.checkUrl1 = false;\r\n            this.checkUrl2 = false;\r\n            this.checkUrl3 = false;\r\n        }\r\n        // } else if (this.selectedContentSource.tag === \"FILE_UPLOAD\") {\r\n        //     this.uploadedFileName = contentDetails.fileName;\r\n        //     this.fileName = contentDetails.fileName;\r\n        //     this.uploadedFilePath = contentDetails.filePath;\r\n        // }\r\n        // }\r\n    }\r\n\r\n    viewContent(contentId) {\r\n        this.modalTitleName = \"View\";\r\n        this.getContentDetails(contentId);\r\n    }\r\n\r\n    editContent(contentId) {\r\n        this.modalTitleName = \"Edit\";\r\n        this.getContent(contentId);\r\n    }\r\n\r\n    updateTopicContents() {\r\n        if (this.topicContentForm.valid) {\r\n            let content: IGeneralTopicContent = {}, contentDetail = content.content;\r\n            contentDetail = {};\r\n            contentDetail.id = this.contentId;\r\n            contentDetail.title = this.trimValue(this.topicContentForm.value.contentTitle);\r\n            contentDetail.description = this.trimValue(this.topicContentForm.value.contentDescription);\r\n            contentDetail.url1 = this.trimValue(this.topicContentForm.value.webUrl1);\r\n            contentDetail.url2 = this.trimValue(this.topicContentForm.value.webUrl2);\r\n            contentDetail.url3 = this.trimValue(this.topicContentForm.value.webUrl3);\r\n            contentDetail.publisher1 = this.trimValue(this.topicContentForm.value.publisher1);\r\n            contentDetail.publisher2 = this.trimValue(this.topicContentForm.value.publisher2);\r\n            contentDetail.publisher3 = this.trimValue(this.topicContentForm.value.publisher3);\r\n            contentDetail.contentType = \"VIDEO\";\r\n            contentDetail.contentSource = \"WEB_URL\";\r\n            //Below codes are Video and document file upload\r\n            // contentDetail.contentType = this.selectedContentType.tag;\r\n            // contentDetail.contentSource = this.selectedContentSource.tag;\r\n            // if (this.selectedContentSource) {\r\n            //     //Active web url assigning condition\r\n            //     if (this.selectedContentSource.tag === \"WEB_URL\") {\r\n            if (this.checkUrl1 === true) {\r\n                contentDetail.webUrl = contentDetail.url1;\r\n                contentDetail.publisher = contentDetail.publisher1;\r\n            } else if (this.checkUrl2 === true) {\r\n                contentDetail.webUrl = contentDetail.url2;\r\n                contentDetail.publisher = contentDetail.publisher2;\r\n            } else if (this.checkUrl3 === true) {\r\n                contentDetail.webUrl = contentDetail.url3;\r\n                contentDetail.publisher = contentDetail.publisher3;\r\n            } else {\r\n                //If user not at all changed active url, defaultly it takes first url as active\r\n                contentDetail.webUrl = contentDetail.url1;\r\n                contentDetail.publisher = contentDetail.publisher1;\r\n            }\r\n            // } else if (this.selectedContentSource.tag === \"FILE_UPLOAD\") {\r\n            //     contentDetail.fileName = this.uploadedFileName;\r\n            //     contentDetail.filePath = this.uploadedFilePath;\r\n            // }\r\n            // }\r\n            this.subscribeToUpdateResponse(this.generalTopicContentService.updateContent(contentDetail));\r\n        }\r\n        if (this.topicContentForm.invalid) {\r\n            this.validateContent = true;\r\n        }\r\n    }\r\n\r\n    protected subscribeToUpdateResponse(result: Observable<HttpResponse<IGeneralTopicContent>>) {\r\n        result.subscribe((res: HttpResponse<IGeneralTopicContent>) => this.onUpdateSuccess(res), (errRes: HttpErrorResponse) => this.onUpdateError(errRes));\r\n    }\r\n\r\n    protected onUpdateSuccess(res: HttpResponse<IGeneralTopicContent>) {\r\n        this.getTopicContentList(this.topicId);\r\n        this.checkContentType();\r\n        this.resetFormValues();\r\n        this.pluginService.alertMessage(\"Topic content updated successfully\", \"success\")\r\n    }\r\n\r\n    protected onUpdateError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not save, please contact admin\", \"error\");\r\n    }\r\n\r\n    cancelTopicContent() {\r\n        this.resetFormValues()\r\n    }\r\n\r\n    checkSelectedContents(event) {\r\n        let selectedId, checked, index;\r\n        checked = event.target.checked;\r\n        selectedId = event.target.id;\r\n        if (checked === true) {\r\n            this.tableAction = false;\r\n            this.contentIds.push(selectedId);\r\n        } else if (checked === false) {\r\n            index = this.contentIds.findIndex(item => item === selectedId);\r\n            this.contentIds.splice(index, 1)\r\n        }\r\n        this.contentIds = this.removeDuplicateElements(this.contentIds);\r\n        if (this.contentIds.length <= 0) {\r\n            this.tableAction = true;\r\n        }\r\n    }\r\n\r\n    removeDuplicateElements(array) {\r\n        var temp = [];\r\n        for (var i = 0; i < array.length; i++) {\r\n            if (temp.indexOf(array[i]) == -1) {\r\n                temp.push(array[i]);\r\n            }\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    resetFormValues() {\r\n        this.topicContentForm.reset();\r\n        this.selectedContentSource = null;\r\n        this.selectedContentType = null;\r\n    }\r\n\r\n    resetSelectedTopicContent() {\r\n        this.contentIds = [];\r\n        $(\".checkAll\").prop(\"checked\", false);\r\n        this.tableAction = true;\r\n    }\r\n\r\n    deleteTopicContents() {\r\n        var localthisObject = this;\r\n        swal({\r\n            title: \"Are you sure to delete content ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm === true) {\r\n                    if (localthisObject.contentIds.length > 0) {\r\n                        localthisObject.subscribeToDeleteResponse(localthisObject.generalTopicContentService.deleteTopicContents(localthisObject.contentIds));\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    protected subscribeToDeleteResponse(result: Observable<HttpResponse<IGeneralTopicContent>>) {\r\n        result.subscribe((res: HttpResponse<IGeneralTopicContent>) => this.onDeleteSuccess(res), (errRes: HttpErrorResponse) => this.onDeleteError(errRes));\r\n    }\r\n\r\n    protected onDeleteSuccess(res: HttpResponse<IGeneralTopicContent>) {\r\n        this.pluginService.alertMessage(\"Topic content deleted successfully\", \"success\");\r\n        this.getTopicContentList(this.topicId);\r\n        this.tableAction = true;\r\n        this.contentIds = [];\r\n    }\r\n\r\n    protected onDeleteError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not delete, please contact admin\", \"error\")\r\n    }\r\n\r\n    dragTableContent() {\r\n        let localThisObj = this;\r\n        var fixHelperModified = function (e, tr) {\r\n            var $originals = tr.children();\r\n            var $helper = tr.clone();\r\n            $helper.children().each(function (index) {\r\n                $(this).width($originals.eq(index).width());\r\n            });\r\n            return $helper;\r\n        },\r\n            updateIndex = function (e, ui) {\r\n                $(\"td.index\", ui.item.parent()).each(function (i) {\r\n                    $(this).html(i + 1);\r\n                });\r\n                localThisObj.updateTopicContentOrder();\r\n            };\r\n\r\n        $(\"#dragTable #dragBody\")\r\n            .sortable({\r\n                helper: fixHelperModified,\r\n                stop: updateIndex\r\n            })\r\n        $(\"#dragBody\").sortable({\r\n            distance: 1,\r\n            opacity: 0, delay: 10,\r\n            cursor: \"move\",\r\n            update: function () { }\r\n        });\r\n    }\r\n\r\n    updateTopicContentOrder() {\r\n        this.updateAction = false;\r\n        this.checkOrderNumChange = true;\r\n        var table: HTMLTableElement = document.querySelector('#dragTable');\r\n        var rows = table.querySelectorAll('tbody tr');\r\n        Array.from(rows).forEach((row) => {\r\n            let list = row.querySelectorAll('td');\r\n            var contentId = Number(list[0].title);\r\n            var newOrderNum = Number(list[1].textContent);\r\n            for (let i = 0; i < this.topicContents.length; i++) {\r\n                if (this.topicContents[i].id === contentId) {\r\n                    this.topicContents[i].orderNumber = newOrderNum;\r\n                    break;\r\n                }\r\n            }\r\n            this.sortArrayByOrderNumber(this.topicContents);\r\n        })\r\n    }\r\n\r\n    sortArrayByOrderNumber(array: any[]) {\r\n        array.sort((a, b) => (a.orderNumber > b.orderNumber) ? 1 : -1);\r\n    }\r\n\r\n    updateTopicContentsWithOrderNumber() {\r\n        var localthisObject = this;\r\n        swal({\r\n            title: \"Are you sure to update order ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm === true) {\r\n                    if (localthisObject.checkOrderNumChange === true) {\r\n                        localthisObject.subscribeToUpdateTopicContentResponse(localthisObject.generalTopicContentService.updateTopicContents(localthisObject.topicContents));\r\n                        localthisObject.updateAction = true;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    protected subscribeToUpdateTopicContentResponse(result: Observable<HttpResponse<IGeneralTopicContent[]>>) {\r\n        result.subscribe((res: HttpResponse<IGeneralTopicContent[]>) => this.onUpdateTopicContentSuccess(res), (errRes: HttpErrorResponse) => this.onUpdateTopicContentError(errRes));\r\n    }\r\n\r\n    protected onUpdateTopicContentSuccess(res: HttpResponse<IGeneralTopicContent[]>) {\r\n        this.pluginService.alertMessage(\"Topic content order updated successfully\", \"success\");\r\n        this.getTopicContentList(this.topicId);\r\n        this.resetFormValues();\r\n    }\r\n\r\n    protected onUpdateTopicContentError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not save, please contact admin\", \"error\")\r\n    }\r\n\r\n    toggleTreeNodes() {\r\n        this.enableExpandNode = !this.enableExpandNode;\r\n        if (this.enableExpandNode) {\r\n            this.pluginService.openJsTreeAllNodes(\"#treeView\");\r\n        } else {\r\n            this.pluginService.closeJsTreeAllNodes(\"#treeView\")\r\n        }\r\n    }\r\n}","import { Component, OnInit, ChangeDetectorRef, AfterViewChecked } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { GeneralConceptAndTopicService } from './general-concept-topic.service';\r\nimport { QuestionBuilderService } from '../question-builder/question-builder.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { IGeneralTopicQuestion } from '../shared/model/content/general-topic.question.model';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CommonService } from '../shared/common/common.service';\r\nimport { FileManagementService } from '../shared/file-management/file-management.service';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./general-topic-question-create.component.html\",\r\n    providers: [GeneralConceptAndTopicService]\r\n})\r\nexport class GeneralTopicQuestionCreateComponent implements OnInit, AfterViewChecked {\r\n    questionResource: any = {};\r\n    questionCategory: any[] = [];\r\n    questionComplexityLevel: any[] = [];\r\n    answers: any[] = [];\r\n    contentSource: any[] = [];\r\n    questionType: string;\r\n    category: string;\r\n    selectedContentSource: string;\r\n    type: string;\r\n    topicId: number;\r\n    complexityLevel: number;\r\n    validateQuestionType: boolean;\r\n    validateQuestion: boolean;\r\n    showSaveQuestion: boolean;\r\n    showAddQuestion: boolean;\r\n    editorSolutionConfig: any;\r\n    updatedHTMLDATA: any;\r\n    solutionContent: any;\r\n\r\n    constructor(\r\n        public activatedRoute: ActivatedRoute,\r\n        public router: Router,\r\n        public pluginService: PluginService,\r\n        public questionBuilderService: QuestionBuilderService,\r\n        public questionService: GeneralConceptAndTopicService,\r\n        public commonService: CommonService,\r\n        public formBuilder: FormBuilder,\r\n        public changedetector: ChangeDetectorRef,\r\n        public fileService: FileManagementService\r\n    ) {\r\n        this.showSaveQuestion = false;\r\n        this.showAddQuestion = false;\r\n        this.validateQuestionType = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.editorSolutionConfig = this.pluginService.getCKEditorQuestionConfig();\r\n        this.pluginService.sideMenuToggle();\r\n        this.pluginService.newStepperJs();\r\n        this.topicId = Number(this.activatedRoute.snapshot.paramMap.get('id'));\r\n        this.getContentSource();\r\n        this.getQuestionCategory();\r\n        this.getQuestionComplexityLevel();\r\n        this.validateQuestionTypeSelectedOrNot();\r\n    }\r\n\r\n    getContentSource() {\r\n        this.commonService.getContentSourceList().subscribe((data: any) => {\r\n            this.contentSource = data;\r\n        });\r\n    }\r\n\r\n    getQuestionCategory() {\r\n        this.commonService.getQuestionCategoryList().subscribe((data: any) => {\r\n            this.questionCategory = data;\r\n        });\r\n    }\r\n\r\n    getQuestionComplexityLevel() {\r\n        this.commonService.getQuestionComplexityLevelList().subscribe((data: any) => {\r\n            this.questionComplexityLevel = data;\r\n        });\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        this.validateQuestionTypeSelectedOrNot();\r\n        this.changedetector.detectChanges();\r\n    }\r\n\r\n    validateQuestionTypeSelectedOrNot() {\r\n        let currentRoute, splitUrl: any[] = [], lastItem;\r\n        currentRoute = this.router.url;\r\n        splitUrl = currentRoute.split(\"/\");\r\n        lastItem = splitUrl.pop();\r\n        if (lastItem === 'general-topic-question-create') {\r\n            this.validateQuestionType = true;\r\n        } else {\r\n            this.validateQuestionType = false;\r\n        }\r\n    }\r\n\r\n    loadPreviewQuestion() {\r\n        let duplicateChoices: any[] = [], question: any, choices: any[] = [], choiceText, choiceId, answers: any[] = [], matrixChoices: any[] = [], matrixOptions: any[] = [];\r\n        this.questionResource = [];\r\n        this.questionResource = this.questionBuilderService.getQuestionResource;\r\n        this.questionType = this.questionResource.QuestionType;\r\n        answers = this.questionResource.Answers;\r\n        this.onChangeOptionType(this.questionType);\r\n        if (question === \"\" || question === \"undefined\") {\r\n            //\"Question is missing, please fill question detail\";\r\n            this.validateQuestion = true;\r\n        } else {\r\n            if (answers.length > 0) {\r\n                if (this.questionType === \"MCQ_SINGLE\" || this.questionType === \"MCQ_MULTIPLE\" || this.questionType === \"MCQ_TRUE_FALSE\") {\r\n                    this.answers = [];\r\n                    duplicateChoices = this.questionResource.Choices;\r\n                    if (duplicateChoices.length > 0) {\r\n                        choices = [];\r\n                        for (let i = 0; i < duplicateChoices.length; i++) {\r\n                            choiceId = duplicateChoices[i].ChoiceId\r\n                            choiceText = duplicateChoices[i].ChoiceText\r\n                            choices.push({\r\n                                \"choiceId\": choiceId,\r\n                                \"choiceText\": choiceText\r\n                            });\r\n                        }\r\n                        for (let j = 0; j < answers.length; j++) {\r\n                            let answerText = choices.find(item => item.choiceId === answers[j]).choiceText;\r\n                            this.answers.push(answerText);\r\n                            answerText = \"\"\r\n                        }\r\n                        this.validateQuestion = false;\r\n                    } else {\r\n                        //\"Choices are missing, Please fill the choices\";\r\n                        this.validateQuestion = true;\r\n                    }\r\n\r\n                } else if (this.questionType === \"MCQ_CHOICE_MATRIX\") {\r\n                    matrixChoices = [];\r\n                    matrixOptions = [];\r\n                    matrixChoices = this.questionResource.Choices;\r\n                    matrixOptions = this.questionResource.Options;\r\n                    if (matrixChoices.length > 0 && matrixOptions.length > 0) {\r\n                        if (answers.length > 0) {\r\n                            this.answers = [];\r\n                            for (let k = 0; k < answers.length; k++) {\r\n                                this.answers.push({\r\n                                    choiceName: matrixChoices.find(item => item.ChoiceId === answers[k].ChoiceId).ChoiceText,\r\n                                    optionName: matrixOptions.find(item => item.OptionId === answers[k].OptionId).OptionText\r\n                                })\r\n                            }\r\n                        }\r\n                        this.validateQuestion = false;\r\n                    } else {\r\n                        //\"Choices and options are missing, please fill the details\";\r\n                        this.validateQuestion = true;\r\n                    }\r\n\r\n                } else if (this.questionType === \"MCQ_MATCH_LIST\") {\r\n                    matrixChoices = [];\r\n                    matrixOptions = [];\r\n                    matrixChoices = this.questionResource.Choices;\r\n                    matrixOptions = this.questionResource.Options;\r\n                    if (matrixChoices.length > 0 && matrixOptions.length > 0) {\r\n                        if (answers.length > 0) {\r\n                            this.answers = [];\r\n                            for (let k = 0; k < answers.length; k++) {\r\n                                this.answers.push({\r\n                                    choiceName: matrixChoices.find(item => item.ChoiceId === answers[k].ChoiceId).ChoiceText,\r\n                                    optionName: matrixOptions.find(item => item.OptionId === answers[k].OptionId).OptionText\r\n                                })\r\n                            }\r\n                        }\r\n                        this.validateQuestion = false;\r\n                    } else {\r\n                        //\"Left side and right side options are missing, please fill the details\";\r\n                        this.validateQuestion = true;\r\n                    }\r\n                }\r\n                this.showSaveQuestion = true;\r\n                this.updateQuestionResource();\r\n            }\r\n            else {\r\n                //\"Answer is missing, please select a answer\";\r\n                this.validateQuestion = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    questionAlertMsg(str) {\r\n        this.pluginService.alertMessage(str, \"error\");\r\n    }\r\n\r\n    onChangeOptionType(questionType) {\r\n        if (questionType === \"MCQ_SINGLE\" || questionType === \"MCQ_TRUE_FALSE\") {\r\n            this.type = \"radio\";\r\n        } else if (questionType === \"MCQ_MULTIPLE\") {\r\n            this.type = \"checkbox\";\r\n        } else {\r\n            this.type = \"\";\r\n        }\r\n    }\r\n\r\n    onContentSource(sourceName) {\r\n        this.selectedContentSource = sourceName;\r\n    }\r\n\r\n    onSelectQuestionCategory(value) {\r\n        this.category = value;\r\n    }\r\n\r\n    onSelectComplexityLevel(value) {\r\n        this.complexityLevel = value;\r\n    }\r\n\r\n    resetPreviewQuestions() {\r\n        this.questionResource = [];\r\n        this.answers = [];\r\n    }\r\n\r\n    async getBase64ImageFromUrl(imageUrl) {\r\n        var res = await fetch(imageUrl);\r\n        var blob = await res.blob();\r\n        return new Promise((resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.addEventListener(\"load\", function () {\r\n                resolve(reader.result);\r\n            }, false);\r\n\r\n            reader.onerror = () => {\r\n                return reject(this);\r\n            };\r\n            reader.readAsDataURL(blob);\r\n        })\r\n    }\r\n\r\n    async updateImageSrc(dataSource) {\r\n        let imageTags: any, htmlElement, imageId, imageUrl, index, updatedHTMLData, base64;\r\n        htmlElement = document.createElement(\"div\");\r\n        htmlElement.innerHTML = dataSource;\r\n        imageTags = htmlElement.getElementsByTagName(\"img\");\r\n        if (imageTags.length > 0) {\r\n            for (let i = 0; i < imageTags.length; i++) {\r\n                imageId = \"image\" + [i];\r\n                index = i;\r\n                imageTags[i].setAttribute(\"id\", imageId); //Set id attribute for image \r\n                imageUrl = imageTags[i].src; //Get image source \r\n                base64 = await this.getBase64ImageFromUrl(imageUrl);\r\n                updatedHTMLData = await this.getAWSFilePath(base64, index, htmlElement);\r\n            }\r\n        } else {\r\n            updatedHTMLData = htmlElement.innerHTML;\r\n        }\r\n        return updatedHTMLData;\r\n    }\r\n\r\n    async getAWSFilePath(base64, index, htmlElement) {\r\n        let block, contentType, encodedData, fileType, imageType, presignedURL, imageTags, updatedHTMLData;\r\n        imageTags = htmlElement.getElementsByTagName(\"img\");\r\n        block = base64.split(',');\r\n        contentType = block[0].split(':')[1];\r\n        fileType = contentType.split('/')[1];\r\n        imageType = fileType.split(';')[0];\r\n        encodedData = block[1];\r\n        let fileName = new Date().getUTCMilliseconds() + \"quesImage\" + \".\" + imageType;\r\n        if (encodedData) {\r\n            let res: any = await this.fileService.getImagePresignedurls(fileName);\r\n            let map = new Map().set(Object.keys(res)[0], Object.values(res)[0]).set(Object.keys(res)[1], Object.values(res)[1]);\r\n            map.forEach((value: boolean, key: string) => {\r\n                if (key !== \"objectURL\") {\r\n                    presignedURL = value;\r\n                } else if (key === \"objectURL\") {\r\n                    let updatedFilePath = value;\r\n                    imageTags[index].setAttribute(\"src\", updatedFilePath); //Setting aws filepath in respective image source\r\n                    updatedHTMLData = htmlElement.innerHTML;\r\n                    this.getImagePathUploadedHTML(updatedHTMLData);\r\n                }\r\n            });\r\n            await this.fileService.uploadImagefileAWSS3(presignedURL, encodedData);\r\n        }\r\n    }\r\n\r\n    async  updateQuestionResource() {\r\n        let choices: any[] = [], options: any[] = [], questionResource: any = {}, choiceText, optionText;\r\n        questionResource = this.questionBuilderService.getQuestionResource;\r\n        if (questionResource.Question) {\r\n            this.updatedHTMLDATA = questionResource.Question;\r\n            await this.updateImageSrc(questionResource.Question);\r\n            questionResource.Question = this.updatedHTMLDATA;\r\n        }\r\n        if (questionResource.Choices.length > 0) {\r\n            for (let i = 0; i < questionResource.Choices.length; i++) {\r\n                this.updatedHTMLDATA = questionResource.Choices[i].ChoiceText;\r\n                await this.updateImageSrc(questionResource.Choices[i].ChoiceText);\r\n                choiceText = this.updatedHTMLDATA;\r\n                choices.push({\r\n                    ChoiceText: choiceText,\r\n                    ChoiceId: questionResource.Choices[i].ChoiceId\r\n                })\r\n            }\r\n            questionResource.Choices = choices;\r\n        }\r\n        if (questionResource.Options.length > 0) {\r\n            for (let i = 0; i < questionResource.Options.length; i++) {\r\n                this.updatedHTMLDATA = questionResource.Options[i].OptionText;\r\n                await this.updateImageSrc(questionResource.Options[i].OptionText);\r\n                optionText = this.updatedHTMLDATA;\r\n                options.push({\r\n                    OptionText: optionText,\r\n                    OptionId: questionResource.Options[i].OptionId\r\n                })\r\n            }\r\n            questionResource.Options = options;\r\n        }\r\n        await this.questionBuilderService.generateQuestionResource(questionResource);\r\n    }\r\n\r\n    async  getImagePathUploadedHTML(data) {\r\n        this.updatedHTMLDATA = data;\r\n    }\r\n\r\n    saveQuestion() {\r\n        let questionResource: IGeneralTopicQuestion = {}, jsonConversion, questionDetails, solutionContentJson, updatedQuestionResource;\r\n        if (this.category) {\r\n            questionResource.category = this.category;\r\n        } else {\r\n            questionResource.category = this.questionCategory[0].tag;\r\n        }\r\n        if (this.complexityLevel) {\r\n            questionResource.complexityLevel = this.complexityLevel;\r\n        } else {\r\n            questionResource.complexityLevel = 1;\r\n        }\r\n        solutionContentJson = this.questionBuilderService.convertJsonToString(JSON.stringify(this.solutionContent));\r\n        updatedQuestionResource = this.questionBuilderService.getQuestionResource;\r\n        questionResource.marks = updatedQuestionResource.TotalMarks;\r\n        jsonConversion = JSON.stringify(updatedQuestionResource);\r\n        questionDetails = this.questionBuilderService.convertJsonToString(jsonConversion);\r\n        questionResource.contentJson = questionDetails;\r\n        questionResource.generalTopicId = this.topicId;\r\n        questionResource.solutionJson = solutionContentJson;\r\n        this.subscribeToSaveResponse(this.questionService.saveTopicQuestion(questionResource));\r\n    }\r\n\r\n\r\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<IGeneralTopicQuestion>>) {\r\n        result.subscribe((resp: HttpResponse<IGeneralTopicQuestion>) => this.onSaveSuccess(resp), (errRes: HttpErrorResponse) => this.onSaveError(errRes));\r\n    }\r\n\r\n    protected onSaveSuccess(res: HttpResponse<IGeneralTopicQuestion>) {\r\n        this.pluginService.alertMessage(\"General Topic question created successfully\", \"success\");\r\n        this.showAddQuestion = true;\r\n        this.showSaveQuestion = false;\r\n    }\r\n\r\n    protected onSaveError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not save, please contact admin\", \"error\")\r\n    }\r\n\r\n    onBack() {\r\n        var localObj = this;\r\n        swal({\r\n            title: \"Are you sure to go previous page ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    localObj.router.navigateByUrl('/general-concept-and-topic/general-topic-question');\r\n                    localObj.pluginService.sideMenuToggle();\r\n                }\r\n            });\r\n    }\r\n\r\n    addQuestion() {\r\n        window.location.reload();\r\n        this.questionType = \"\";\r\n        this.showSaveQuestion = true;\r\n    }\r\n}","import { Component, OnInit, AfterViewInit } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\nimport { IGeneralTopicQuestion } from '../shared/model/content/general-topic.question.model';\r\nimport { Router } from '@angular/router';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { GeneralConceptAndTopicService } from './general-concept-topic.service';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { QuestionBuilderService } from '../question-builder/question-builder.service';\r\nimport { IGeneralSubject } from '../shared/model/content/general-subject.model';\r\nimport { GeneralSubjectService } from '../general-subject/general-subject.service';\r\nimport { moveItemInArray, CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { MatchList } from '../question-builder/matchlist/matchlist.component';\r\nimport { ITopicAllDetails } from '../shared/model/content/topic-all-details.model';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./general-topic-question-manage.component.html\",\r\n    providers: [GeneralConceptAndTopicService]\r\n})\r\nexport class GeneralTopicQuestionManageComponent implements OnInit, AfterViewInit {\r\n    subjects: IGeneralTopicQuestion[];\r\n    subjectTree: IGeneralSubject[] = [];\r\n    questions: any[] = [];\r\n    topicQuestions: any[] = [];\r\n    questionResources: any[] = [];\r\n    questionIds: any[] = [];\r\n    selectedAnswer: any[] = [];\r\n    nodeType: string;\r\n    nodeName: string;\r\n    nodeDescription: string;\r\n    topicId: number;\r\n    selectedSubject: any;\r\n    enableExpandNode: boolean;\r\n    tableAction: boolean;\r\n\r\n    constructor(\r\n        public _router: Router,\r\n        private generalSubjectService: GeneralSubjectService,\r\n        private generalTopicQuestionService: GeneralConceptAndTopicService,\r\n        public pluginService: PluginService,\r\n        public questionBuilderService: QuestionBuilderService\r\n    ) {\r\n        this.enableExpandNode = false;\r\n        this.tableAction = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadSubjectData();\r\n    }\r\n\r\n    loadSubjectData() {\r\n        this.generalSubjectService.getSubjectSearchList().subscribe(\r\n            (res: HttpResponse<IGeneralTopicQuestion[]>) => this.assignResponseToList(res.body),\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        )\r\n    }\r\n\r\n    assignResponseToList(data: IGeneralTopicQuestion[]) {\r\n        this.subjects = data;\r\n    }\r\n\r\n    protected onError(errorMessage: string) {\r\n        this.pluginService.alertMessage(errorMessage, \"error\");\r\n    }\r\n\r\n    showConceptAndTopicDetails() {\r\n        var localThisObj = this;\r\n        $('#treeView')\r\n            .on('changed.jstree', function (e, data) {\r\n                var i, j;\r\n                for (i = 0, j = data.selected.length; i < j; i++) {\r\n                    localThisObj.nodeType = data.node.type;\r\n                    if (localThisObj.nodeType === \"root\") {\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                    }\r\n                    else if (localThisObj.nodeType === \"concept\") {\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                    } else if (localThisObj.nodeType === \"topic\") {\r\n                        localThisObj.topicId = data.node.data.id;\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                        localThisObj.questions = [];\r\n                        localThisObj.questionIds = [];\r\n                        localThisObj.getTopicQuestionsList(localThisObj.topicId);\r\n                    } else {\r\n                        localThisObj.nodeType = \"\";\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    loadUpdatedTopicQuestions() {\r\n        this.getTopicQuestionsList(this.topicId);\r\n    }\r\n\r\n    getTopicQuestionsList(topicId: number) {\r\n        this.generalTopicQuestionService.getTopicQuestionList(topicId).subscribe(\r\n            (res: HttpResponse<IGeneralTopicQuestion>) => this.assignResponseToQuestionList(res.body),\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        )\r\n    }\r\n\r\n    protected assignResponseToQuestionList(data: ITopicAllDetails) {\r\n        let questionDetails: any[] = [], question, complexityLevel: string, questionType;\r\n        this.questions = [];\r\n        this.questionResources = data.questions;\r\n        if (this.questionResources.length > 0) {\r\n            for (let i = 0; i < this.questionResources.length; i++) {\r\n                questionDetails.push(this.questionBuilderService.convertStringToJson(this.questionResources[i].contentJson));\r\n                question = questionDetails[i].Question;\r\n                if (this.questionResources[i].complexityLevel === 1) {\r\n                    complexityLevel = \"Low\";\r\n                } else if (this.questionResources[i].complexityLevel === 2) {\r\n                    complexityLevel = \"Medium\";\r\n                } else if (this.questionResources[i].complexityLevel === 3) {\r\n                    complexityLevel = \"High\";\r\n                } else {\r\n                    complexityLevel = \"\";\r\n                }\r\n                if (questionDetails[i].QuestionType === \"MCQ_SINGLE\") {\r\n                    questionType = \"MCQ single answer\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_MULTIPLE\") {\r\n                    questionType = \"MCQ multiple answers\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_CHOICE_MATRIX\") {\r\n                    questionType = \"Choice matrix\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_TRUE_FALSE\") {\r\n                    questionType = \"MCQ true or false\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_MATCH_LIST\") {\r\n                    questionType = \"MCQ match list\";\r\n                } else {\r\n                    questionType = \"\"\r\n                }\r\n                this.questions.push({\r\n                    id: this.questionResources[i].id,\r\n                    complexityLevel: complexityLevel,\r\n                    questionCategory: this.titleCapitalize(this.questionResources[i].category),\r\n                    questionText: question,\r\n                    questionType: questionType\r\n                })\r\n            }\r\n        }\r\n        this.questionIds = [];\r\n        this.tableAction = true;\r\n    }\r\n\r\n    titleCapitalize(word: string) {\r\n        if (!word) return word;\r\n        return word[0].toUpperCase() + word.substr(1).toLowerCase();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.showConceptAndTopicDetails();\r\n    }\r\n\r\n    loadSubjectTree() {\r\n        if (this.selectedSubject === null || this.selectedSubject === undefined) {\r\n            this.selectedSubject = null;\r\n            this.pluginService.alertMessage(\"Please select a filter and then apply\", \"error\")\r\n        } else {\r\n            this.subjectTree = [];\r\n            this.pluginService.jsTree(\"#treeView\", this.subjectTree, false);\r\n            let subjectId = this.selectedSubject.id;\r\n            if (subjectId) {\r\n                this.generalSubjectService.getSubjectTreeBySubjectId(subjectId).subscribe(\r\n                    (res: HttpResponse<IGeneralSubject[]>) => this.assignResponsetoTree(res.body),\r\n                    (res: HttpErrorResponse) => this.onError(res.message)\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    assignResponsetoTree(data: IGeneralSubject[]) {\r\n        this.subjectTree = data;\r\n        this.pluginService.jsTree(\"#treeView\", this.subjectTree, false);\r\n        this.nodeType = \"\";\r\n        this.enableExpandNode = false;\r\n    }\r\n\r\n    resetSelectedTopicQuestion() {\r\n        this.questionIds = [];\r\n        this.tableAction = true;\r\n        $(\".checkAll\").prop(\"checked\", false);\r\n    }\r\n\r\n    checkSelectedQuestions(event) {\r\n        let selectedId, checked, index;\r\n        checked = event.target.checked;\r\n        selectedId = event.target.id;\r\n        if (checked === true) {\r\n            this.tableAction = false;\r\n            this.questionIds.push(selectedId);\r\n        } else if (checked === false) {\r\n            index = this.questionIds.findIndex(item => item === selectedId);\r\n            this.questionIds.splice(index, 1)\r\n        }\r\n        this.questionIds = this.removeDuplicateElements(this.questionIds);\r\n        if (this.questionIds.length <= 0) {\r\n            this.tableAction = true;\r\n        }\r\n    }\r\n\r\n    removeDuplicateElements(array) {\r\n        var temp = [];\r\n        for (var i = 0; i < array.length; i++) {\r\n            if (temp.indexOf(array[i]) == -1) {\r\n                temp.push(array[i]);\r\n            }\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    deleteTopicQuestions() {\r\n        var localthisObject = this;\r\n        swal({\r\n            title: \"Are you sure to delete topic question ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm === true) {\r\n                    if (localthisObject.questionIds.length > 0) {\r\n                        localthisObject.subscribeToDeleteResponse(localthisObject.generalTopicQuestionService.deleteTopicQuestions(localthisObject.questionIds));\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    protected subscribeToDeleteResponse(result: Observable<HttpResponse<IGeneralTopicQuestion>>) {\r\n        result.subscribe((res: HttpResponse<IGeneralTopicQuestion>) => this.onDeleteSuccess(res), (errRes: HttpErrorResponse) => this.onDeleteError(errRes));\r\n    }\r\n\r\n    protected onDeleteSuccess(res: HttpResponse<IGeneralTopicQuestion>) {\r\n        this.pluginService.alertMessage(\"Topic content deleted successfully\", \"success\");\r\n        this.questions = [];\r\n        this.questionIds = [];\r\n        this.getTopicQuestionsList(this.topicId);\r\n        this.tableAction = true;\r\n    }\r\n\r\n    protected onDeleteError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not delete, please contact admin\", \"error\")\r\n    }\r\n\r\n    toggleTreeNodes() {\r\n        this.enableExpandNode = !this.enableExpandNode;\r\n        if (this.enableExpandNode) {\r\n            this.pluginService.openJsTreeAllNodes(\"#treeView\");\r\n        } else {\r\n            this.pluginService.closeJsTreeAllNodes(\"#treeView\")\r\n        }\r\n    }\r\n\r\n    openSimulateQuestionModal() {\r\n        this.pluginService.showModalWindow(\"#simulateQuestionModal\");\r\n        this.simulateTopicQuestionList();\r\n    }\r\n\r\n    closeSimulateQuestionModal() {\r\n        this.pluginService.hideModalWindow(\"#simulateQuestionModal\");\r\n    }\r\n\r\n    openPreviewQuestionModal() {\r\n        this.pluginService.showModalWindow(\"#previewQuestionModal\");\r\n        this.previewTopicQuestionList();\r\n    }\r\n\r\n    closePreviewQuestionModal() {\r\n        this.pluginService.hideModalWindow(\"#previewQuestionModal\");\r\n    }\r\n\r\n    protected previewTopicQuestionList() {\r\n        let questionDetails: any, options: any[] = [], answers: any[] = [], choices: any[] = [];\r\n        this.topicQuestions = [];\r\n        for (let i = 0; i < this.questionResources.length; i++) {\r\n            questionDetails = this.questionBuilderService.convertStringToJson(this.questionResources[i].contentJson);\r\n            if (questionDetails.QuestionType === \"MCQ_MATCH_LIST\" || questionDetails.QuestionType === \"MCQ_CHOICE_MATRIX\") {\r\n                answers = []; choices = [];\r\n                options = questionDetails.Options;\r\n                choices = questionDetails.Choices;\r\n                for (let k = 0; k < questionDetails.Answers.length; k++) {\r\n                    answers.push({\r\n                        choiceName: choices.find(item => item.ChoiceId === questionDetails.Answers[k].ChoiceId).ChoiceText,\r\n                        optionName: options.find(item => item.OptionId === questionDetails.Answers[k].OptionId).OptionText\r\n                    })\r\n                }\r\n            } else if (questionDetails.QuestionType === \"MCQ_SINGLE\" || questionDetails.QuestionType === \"MCQ_MULTIPLE\" || questionDetails.QuestionType === \"MCQ_TRUE_FALSE\") {\r\n                options = []; answers = [];\r\n                for (let j = 0; j < questionDetails.Answers.length; j++) {\r\n                    let answerText = questionDetails.Choices.find(item => item.ChoiceId === questionDetails.Answers[j]).ChoiceText;\r\n                    answers.push(answerText);\r\n                    answerText = \"\"\r\n                }\r\n            }\r\n            this.topicQuestions.push({\r\n                id: this.questionResources[i].id,\r\n                question: questionDetails.Question,\r\n                questionType: questionDetails.QuestionType,\r\n                generalTopicId: this.questionResources[i].generalTopicId,\r\n                questionId: this.questionResources[i].id,\r\n                choices: questionDetails.Choices,\r\n                options: options,\r\n                answers: answers\r\n            })\r\n        }\r\n    }\r\n\r\n    protected simulateTopicQuestionList() {\r\n        let questionDetails: MatchList, options: any[] = [], choices: any[] = [];\r\n        this.topicQuestions = [];\r\n        for (let i = 0; i < this.questionResources.length; i++) {\r\n            questionDetails = this.questionBuilderService.convertStringToJson(this.questionResources[i].contentJson);\r\n            if (questionDetails.QuestionType === \"MCQ_MATCH_LIST\" || questionDetails.QuestionType === \"MCQ_CHOICE_MATRIX\") {\r\n                options = this.shuffleArray(questionDetails.Options);\r\n                choices = questionDetails.Choices;\r\n            } else {\r\n                options = [];\r\n                choices = this.shuffleArray(questionDetails.Choices)\r\n            }\r\n            this.topicQuestions.push({\r\n                id: this.questionResources[i].id,\r\n                questionType: questionDetails.QuestionType,\r\n                question: questionDetails.Question,\r\n                generalTopicId: this.questionResources[i].generalTopicId,\r\n                questionId: this.questionResources[i].id,\r\n                choices: choices,\r\n                options: options,\r\n                answers: questionDetails.Answers,\r\n                checkAnswer: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    shuffleArray(array) {\r\n        array.sort(() => Math.random() - 0.5);\r\n        return array\r\n    }\r\n\r\n    public onSelectMCQSingleAnswer(questionId, choiceId) {\r\n        let topicIndex: number;\r\n        topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        for (let i = 0; i < this.topicQuestions[topicIndex].answers.length; i++) {\r\n            if (this.topicQuestions[topicIndex].answers[i] === choiceId) {\r\n                this.topicQuestions[topicIndex].checkAnswer = \"Correct\"\r\n            } else {\r\n                this.topicQuestions[topicIndex].checkAnswer = \"Wrong\"\r\n            }\r\n        }\r\n    }\r\n\r\n    public onSelectMCQMultipleAnswer(questionId, choiceId, event) {\r\n        let topicIndex: number, checked: boolean, choiceIndex: number;\r\n        checked = event.target.checked;\r\n        topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (checked === true) {\r\n            this.selectedAnswer.push(choiceId);\r\n        } else {\r\n            choiceIndex = this.selectedAnswer.findIndex(item => item === choiceId);\r\n            this.selectedAnswer.splice(choiceIndex, 1);\r\n        }\r\n        this.checkMultipleAnswer(topicIndex);\r\n    }\r\n\r\n    checkMultipleAnswer(index) {\r\n        let answers: any[] = this.topicQuestions[index].answers.sort();\r\n        let selectedAnswers: any[] = this.selectedAnswer.sort();\r\n        let duplicateAnswers: any[] = [];\r\n        for (let i = 0; i < answers.length; i++) {\r\n            for (let j = 0; j < selectedAnswers.length; j++) {\r\n                if (answers[i] === selectedAnswers[j]) {\r\n                    duplicateAnswers.push(selectedAnswers[j]);\r\n                    this.topicQuestions[index].checkAnswer = \"Partial\"\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Wrong\"\r\n                }\r\n            }\r\n        }\r\n        if (duplicateAnswers.length > 0) {\r\n            if (duplicateAnswers.length === answers.length) {\r\n                if (JSON.stringify(duplicateAnswers.sort()) === JSON.stringify(selectedAnswers)) {\r\n                    this.topicQuestions[index].checkAnswer = \"Correct\"\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Partial\"\r\n                }\r\n            } else {\r\n                this.topicQuestions[index].checkAnswer = \"Partial\"\r\n            }\r\n        }\r\n    }\r\n\r\n    public onSelectChoiceMatrixAnswer(questionId, choiceId, optionId) {\r\n        let topicIndex: number, index: number;\r\n        topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (this.selectedAnswer.length === 0) {\r\n            this.selectedAnswer = [];\r\n        }\r\n        this.selectedAnswer.push({\r\n            ChoiceId: choiceId,\r\n            OptionId: optionId\r\n        });\r\n        if (this.selectedAnswer.length > 1) {\r\n            for (let i = 0; i < this.selectedAnswer.length; i++) {\r\n                for (let j = i + 1; j < this.selectedAnswer.length; j++) {\r\n                    if (this.selectedAnswer[i].ChoiceId === this.selectedAnswer[j].ChoiceId) {\r\n                        index = this.selectedAnswer.findIndex(item => item.ChoiceId === this.selectedAnswer[i].ChoiceId);\r\n                        this.selectedAnswer.splice(index, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.checkMatrixAndMatchListAnswers(topicIndex);\r\n    }\r\n\r\n    checkAnswerStatus(questionId) {\r\n        let topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (this.topicQuestions[topicIndex].checkAnswer === \"Correct\") {\r\n            this.pluginService.alertMessage(\"Good keep going...Correct answer\", \"success\");\r\n        } else if (this.topicQuestions[topicIndex].checkAnswer === \"Partial\") {\r\n            this.pluginService.alertMessage(\"This is partially correct\", \"warning\");\r\n        } else if (this.topicQuestions[topicIndex].checkAnswer === \"Wrong\") {\r\n            this.pluginService.alertMessage(\"Oops..! this is wrong\", \"error\");\r\n        } else {\r\n            this.pluginService.alertMessage(\"Please select a answer and check it\", \"error\");\r\n        }\r\n    }\r\n\r\n    updatedDropList(questionId, event: CdkDragDrop<string[]>) {\r\n        let topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (event.previousContainer === event.container) {\r\n            moveItemInArray(\r\n                event.container.data,\r\n                event.previousIndex,\r\n                event.currentIndex\r\n            );\r\n            this.selectedAnswer = [];\r\n            for (let i = 0; i < this.topicQuestions[topicIndex].choices.length; i++) {\r\n                for (let j = 0; j < this.topicQuestions[topicIndex].options.length; j++) {\r\n                    if (i === j) {\r\n                        this.selectedAnswer.push({\r\n                            ChoiceId: this.topicQuestions[topicIndex].choices[i].ChoiceId,\r\n                            OptionId: this.topicQuestions[topicIndex].options[j].OptionId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            this.checkMatrixAndMatchListAnswers(topicIndex);\r\n        }\r\n    }\r\n\r\n    checkMatrixAndMatchListAnswers(index) {\r\n        let sortArr1, sortArr2, duplicateAnswers: any[] = [];\r\n        for (let i = 0; i < this.topicQuestions[index].answers.length; i++) {\r\n            for (let j = 0; j < this.selectedAnswer.length; j++) {\r\n                if (this.topicQuestions[index].answers[i].ChoiceId === this.selectedAnswer[j].ChoiceId) {\r\n                    if (this.topicQuestions[index].answers[i].OptionId === this.selectedAnswer[j].OptionId) {\r\n                        duplicateAnswers.push({\r\n                            ChoiceId: this.selectedAnswer[j].ChoiceId,\r\n                            OptionId: this.selectedAnswer[j].OptionId\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Wrong\"\r\n                }\r\n            }\r\n        }\r\n        if (duplicateAnswers.length > 0) {\r\n            sortArr1 = (obj1, obj2) => { return obj1.ChoiceId - obj2.ChoiceId; }\r\n            const sortedArray1: any[] = duplicateAnswers.sort(sortArr1);\r\n            sortArr2 = (obj1, obj2) => { return obj1.ChoiceId - obj2.ChoiceId; }\r\n            const sortedArray2: any[] = this.selectedAnswer.sort(sortArr2);\r\n            if (duplicateAnswers.length === this.topicQuestions[index].answers.length) {\r\n                if (JSON.stringify(sortedArray1) === JSON.stringify(sortedArray2)) {\r\n                    this.topicQuestions[index].checkAnswer = \"Correct\"\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Partial\"\r\n                }\r\n            } else {\r\n                this.topicQuestions[index].checkAnswer = \"Partial\"\r\n            }\r\n        }\r\n    }\r\n\r\n    previousQuestion() {\r\n        this.selectedAnswer = [];\r\n    }\r\n\r\n    nextQuestion() {\r\n        this.selectedAnswer = [];\r\n    }\r\n}"],"sourceRoot":"webpack:///"}