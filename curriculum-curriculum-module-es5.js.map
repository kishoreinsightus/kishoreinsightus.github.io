{"version":3,"sources":["src/app/curriculum/curriculum-affiliations.component.html","src/app/curriculum/curriculum-create.component.html","src/app/curriculum/curriculum-details.component.html","src/app/curriculum/curriculum-manage.component.html","src/app/curriculum/curriculum-update.component.html","src/app/curriculum/curriculum-affiliations.component.ts","src/app/curriculum/curriculum-create.component.ts","src/app/curriculum/curriculum-delete.component.ts","src/app/curriculum/curriculum-details.component.ts","src/app/curriculum/curriculum-manage.component.ts","src/app/curriculum/curriculum-update-publish.component.ts","src/app/curriculum/curriculum-update-unpublish.component.ts","src/app/curriculum/curriculum-update.component.ts","src/app/curriculum/curriculum.module.ts","src/app/curriculum/curriculum.route.ts","src/app/curriculum/curriculum.service.ts","src/app/shared/constants/common.constants.ts","src/app/shared/model/content/curriculum.model.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"w-100 my-3\\\">\\r\\n    <div class=\\\"btn btn-danger\\\" (click)=\\\"onBack()\\\">\\r\\n        <i class=\\\"fa fa-chevron-left mr-2\\\"></i>Back\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"w-100 p-3 alert-warning\\\">\\r\\n    Coming soon...!\\r\\n</div>\"","export default \"<div class=\\\"col-md-12 d-flex justify-content-between my-3\\\">\\r\\n    <div class=\\\"btn btn-danger\\\" (click)=\\\"onBack()\\\">\\r\\n        <i class=\\\"fa fa-chevron-left mr-2\\\">\\r\\n        </i>Back\\r\\n    </div>\\r\\n</div>\\r\\n<form [formGroup]=\\\"curriculumForm\\\">\\r\\n    <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n        <label class=\\\"col-form-label\\\">Curriculum name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter curriculum name (minlength: 3 and maxlength: 75)\\\"\\r\\n            formControlName=\\\"curriculumName\\\" minlength=\\\"3\\\" maxlength=\\\"75\\\" inputRestriction=\\\"alphabetsWithSpace\\\">\\r\\n        <span class=\\\"font-15 text-muted\\\">Allowed characters - Alphabets</span>\\r\\n    </div>\\r\\n    <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n        <label class=\\\"col-form-label\\\">Acronym</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"Enter acronym for curriculum(minlength: 2 and maxlength: 10)\\\"\\r\\n            formControlName=\\\"curriculumAcronym\\\" minlength=\\\"2\\\" maxlength=\\\"10\\\" inputRestriction=\\\"alphabetsWithSpace\\\">\\r\\n        <span class=\\\"font-15 text-muted\\\">Allowed characters - Alphabets (CAPITAL LETTERS ONLY) </span>\\r\\n    </div>\\r\\n    <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n        <label class=\\\"col-form-label\\\">Description <span class=\\\"text-muted\\\">(Optional)</span></label>\\r\\n        <textarea class=\\\"form-control\\\" placeholder=\\\"Enter description (minlength: 3 and maxlength: 250)\\\"\\r\\n            formControlName=\\\"curriculumDescription\\\" minlength=\\\"3\\\" maxlength=\\\"250\\\"></textarea>\\r\\n        <span class=\\\"font-15 text-muted\\\">Allowed characters - Alphabets, Numbers and Special characters</span>\\r\\n    </div>\\r\\n    <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n        <label for=\\\"country\\\" class=\\\"col-form-label\\\">Country</label>\\r\\n        <ng-select [items]=\\\"countryList\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"name\\\"\\r\\n            placeholder=\\\"Select country\\\" [(ngModel)]=\\\"selectedCountry\\\" (change)=\\\"onCountryChange()\\\"\\r\\n            formControlName=\\\"country\\\">\\r\\n        </ng-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n        <label for=\\\"state\\\" class=\\\"col-form-label\\\">State</label>\\r\\n        <ng-select [items]=\\\"stateList\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select state\\\"\\r\\n            [(ngModel)]=\\\"selectedState\\\" formControlName=\\\"state\\\">\\r\\n        </ng-select>\\r\\n    </div>\\r\\n    <div class=\\\"row mr-0 ml-0 w-100 mb-2\\\">\\r\\n        <div class=\\\"form-group col-xxl-6\\\">\\r\\n            <label for=\\\"startDate\\\" class=\\\"col-form-label\\\">Start date (dd/mm)</label>\\r\\n            <input id=\\\"startDate\\\" name=\\\"inputMask\\\" formControlName=\\\"startDate\\\" class=\\\"form-control input-mask\\\"\\r\\n                type=\\\"text\\\" placeholder=\\\"_ _ /_ _ \\\" minlength=\\\"5\\\" maxlength=\\\"5\\\" (click)=\\\"applyInputMaskForDate()\\\"\\r\\n                inputRestriction=\\\"onlyIntegers\\\">\\r\\n            <span class=\\\"font-15 text-muted\\\">Allowed characters - Numbers</span>\\r\\n        </div>\\r\\n        <div class=\\\"form-group  col-xxl-6\\\">\\r\\n            <label for=\\\"endDate\\\" name=\\\"inputMask\\\" class=\\\"col-form-label\\\">End date (dd/mm)</label>\\r\\n            <input id=\\\"endDate\\\" formControlName=\\\"endDate\\\" class=\\\"form-control input-mask\\\" type=\\\"text\\\"\\r\\n                placeholder=\\\"_ _ /_ _ \\\" (click)=\\\"applyInputMaskForDate()\\\" minlength=\\\"5\\\" maxlength=\\\"5\\\">\\r\\n            <span class=\\\"font-15 text-muted\\\">Allowed characters - Numbers</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row mr-0 ml-0 w-100 mb-2\\\">\\r\\n        <div class=\\\"form-group col-xxl-6\\\">\\r\\n            <label for=\\\"fromGrade\\\" class=\\\"col-form-label\\\">From grade</label>\\r\\n            <ng-select [items]=\\\"gradesFromList\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"name\\\"\\r\\n                placeholder=\\\"Select grade\\\" [(ngModel)]=\\\"selectedFromGrade\\\" (change)=\\\"onFromGradeChange()\\\"\\r\\n                formControlName=\\\"fromGrade\\\">\\r\\n            </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-xxl-6\\\">\\r\\n            <label for=\\\"to\\\" class=\\\"col-form-label\\\">To grade</label>\\r\\n            <ng-select [items]=\\\"gradesToList\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"name\\\"\\r\\n                placeholder=\\\"Select grade\\\" [(ngModel)]=\\\"selectedToGrade\\\" formControlName=\\\"toGrade\\\">\\r\\n            </ng-select>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12 d-flex justify-content-end\\\">\\r\\n        <button class=\\\"btn btn-danger mr-2 mb-2\\\" (click)=\\\"resetCurriculum()\\\">\\r\\n            <i class=\\\"fa fa-times mr-2\\\"></i>Reset\\r\\n        </button>\\r\\n        <button class=\\\"btn btn-info mb-2 mr-2\\\" (click)=\\\"saveAsDraft()\\\" [disabled]=\\\"validateForm\\\">\\r\\n            <i class=\\\"fa fa-save mr-2\\\"></i>Save as draft\\r\\n        </button>\\r\\n        <button class=\\\"btn btn-success mb-2\\\" (click)=\\\"saveAsPublish()\\\" [disabled]=\\\"validateForm\\\">\\r\\n            <i class=\\\"fe fe-file-plus mr-2\\\"></i>Save and publish\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\"","export default \"<div class=\\\"col-md-12 d-flex justify-content-between my-3\\\">\\r\\n    <div class=\\\"btn btn-danger\\\" (click)=\\\"onBack()\\\">\\r\\n        <i class=\\\"fa fa-chevron-left mr-2\\\">\\r\\n        </i>Back\\r\\n    </div>\\r\\n    <a class=\\\"btn btn-success\\\" [routerLink]=\\\"['/curriculum', curriculumId, 'edit' ]\\\">\\r\\n        <i class=\\\"fa fa-edit mr-2\\\">\\r\\n        </i>Edit curriculum\\r\\n    </a>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xxl-12\\\">\\r\\n        <div class=\\\"mb-2 col-xxl-6\\\">\\r\\n            <label> Curriculum name </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" disabled value={{curriculum.name}}>\\r\\n        </div>\\r\\n        <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n            <label> Acronym </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" disabled value={{curriculum.acronym}}>\\r\\n        </div>\\r\\n        <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n            <label> Description </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" disabled value={{curriculum.description}}>\\r\\n        </div>\\r\\n        <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n            <label> Country </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" disabled value={{country}}>\\r\\n        </div>\\r\\n        <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n            <label> State </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" disabled value={{curriculum.state}}>\\r\\n        </div>\\r\\n        <div class=\\\"row mr-0 ml-0 w-100 mb-2\\\">\\r\\n            <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n                <label> Start date (dd/mm) </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" disabled value={{startDate}}>\\r\\n            </div>\\r\\n            <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n                <label> End date (dd/mm) </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" disabled value={{endDate}}>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row mr-0 ml-0 w-100 mb-2\\\">\\r\\n            <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n                <label> From grade </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" disabled value={{curriculum.gradesApplicableFrom}}>\\r\\n            </div>\\r\\n            <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n                <label> To grade </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" disabled value={{curriculum.gradesApplicableTo}}>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"w-100 d-flex justify-content-end my-3\\\">\\r\\n    <a routerLink=\\\"/curriculum/create\\\">\\r\\n        <div class=\\\"btn btn-primary\\\">\\r\\n            <i class=\\\"fa fa-plus-circle mr-2\\\"></i> Create new curriculum\\r\\n        </div>\\r\\n    </a>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-responsive\\\" *ngIf=\\\"curriculums\\\">\\r\\n    <table class=\\\"table table-hover table-striped table-bordered nowrap w-100\\\">\\r\\n        <thead>\\r\\n            <tr jhiSort [(predicate)]=\\\"predicate\\\" [(ascending)]=\\\"reverse\\\" [callback]=\\\"reset.bind(this)\\\">\\r\\n                <th jhiSortBy=\\\"name\\\">Curriculum <span class=\\\"fa fa-sort  ml-1\\\"></span></th>\\r\\n                <th jhiSortBy=\\\"startDate\\\">Start Month (dd/mm)<span class=\\\"fa fa-sort  ml-1\\\"></span></th>\\r\\n                <th jhiSortBy=\\\"endDate\\\">End Month (dd/mm)<span class=\\\"fa fa-sort  ml-1\\\"></span></th>\\r\\n                <th jhiSortBy=\\\"status\\\">Status <span class=\\\"fa fa-sort  ml-1\\\"></span></th>\\r\\n                <th class=\\\"fixed-column\\\">Update status</th>\\r\\n                <th class=\\\"fixed-column\\\">Affiliations</th>\\r\\n                <th class=\\\"fixed-column\\\">Actions</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody infinite-scroll (scrolled)=\\\"loadPage(page + 1)\\\" [infiniteScrollDisabled]=\\\"page >= links['last']\\\"\\r\\n            [infiniteScrollDistance]=\\\"0\\\">\\r\\n            <tr *ngFor=\\\"let curriculum of curriculums ;trackBy: trackId\\\">\\r\\n                <td data-column=\\\"Curriculum\\\">{{curriculum.acronym}}</td>\\r\\n                <td data-column=\\\"Start Month\\\">\\r\\n                    {{startDate}}\\r\\n                </td>\\r\\n                <td data-column=\\\"End Month\\\">\\r\\n                    {{endDate}}\\r\\n                </td>\\r\\n                <td data-column=\\\"Status\\\">{{curriculum.status}}</td>\\r\\n                <td class=\\\"fixed-column\\\" data-column=\\\"Update status\\\">\\r\\n                    <a class=\\\"btn btn-outline-success mr-1\\\"\\r\\n                        *ngIf=\\\"curriculum.status === 'DRAFT' || curriculum.status === 'INACTIVE'\\\"\\r\\n                        [routerLink]=\\\"['/curriculum', curriculum.id, 'publish' ]\\\">\\r\\n                        Publish\\r\\n                    </a>\\r\\n                    <a class=\\\"btn btn-outline-danger mr-1\\\" *ngIf=\\\"curriculum.status === 'ACTIVE'\\\"\\r\\n                        [routerLink]=\\\"['/curriculum', curriculum.id, 'unpublish' ]\\\">\\r\\n                        Unpublish\\r\\n                    </a>\\r\\n                </td>\\r\\n                <td class=\\\"fixed-column\\\" data-column=\\\"Affiliations\\\">\\r\\n                    <a class=\\\"btn btn-outline-info mr-1 mb-1\\\"\\r\\n                        [routerLink]=\\\"['/curriculum', curriculum.id, 'affiliations' ]\\\">\\r\\n                        View\\r\\n                    </a>\\r\\n                </td>\\r\\n                <td class=\\\"fixed-column\\\" data-column=\\\"Actions\\\">\\r\\n                    <div>\\r\\n                        <a class=\\\"btn btn-outline-info btn-icon-size mr-1 mb-1\\\"\\r\\n                            [routerLink]=\\\"['/curriculum', curriculum.id, 'view' ]\\\">\\r\\n                            <i class=\\\"fa fa-eye\\\"></i>\\r\\n                        </a>\\r\\n\\r\\n                        <a class=\\\"btn btn-outline-success btn-icon-size mr-1 mb-1\\\"\\r\\n                            [routerLink]=\\\"['/curriculum', curriculum.id, 'edit' ]\\\">\\r\\n                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                        </a>\\r\\n\\r\\n                        <a class=\\\"btn btn-outline-danger mb-1 btn-icon-size\\\"\\r\\n                            *ngIf=\\\"curriculum.status === 'DRAFT' || curriculum.status === 'INACTIVE'\\\"\\r\\n                            [routerLink]=\\\"['/curriculum', curriculum.id, 'delete' ]\\\">\\r\\n                            <i class=\\\"fa fa-trash\\\"></i>\\r\\n                        </a>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\"","export default \"<div class=\\\"col-md-12 d-flex justify-content-between my-3\\\">\\r\\n    <div class=\\\"btn btn-danger\\\" (click)=\\\"onBack()\\\">\\r\\n        <i class=\\\"fa fa-chevron-left mr-2\\\">\\r\\n        </i>Back\\r\\n    </div>\\r\\n</div>\\r\\n<form [formGroup]=\\\"curriculumForm\\\">\\r\\n    <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n        <label class=\\\"col-form-label\\\">Curriculum name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter curriculum name (minlength: 3 and maxlength: 75)\\\"\\r\\n            formControlName=\\\"curriculumName\\\" minlength=\\\"3\\\" maxlength=\\\"75\\\" inputRestriction=\\\"alphabetsWithSpace\\\">\\r\\n        <span class=\\\"font-15 text-muted\\\">Allowed characters - Alphabets</span>\\r\\n    </div>\\r\\n    <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n        <label class=\\\"col-form-label\\\">Acronym</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"Enter acronym for curriculum (minlength: 2 and maxlength: 10)\\\"\\r\\n            formControlName=\\\"curriculumAcronym\\\" minlength=\\\"2\\\" maxlength=\\\"10\\\" inputRestriction=\\\"alphabetsWithSpace\\\">\\r\\n        <span class=\\\"font-15 text-muted\\\">Allowed characters - Alphabets (CAPITAL LETTERS ONLY)</span>\\r\\n    </div>\\r\\n    <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n        <label class=\\\"col-form-label\\\">Description <span class=\\\"text-muted\\\">(Optional)</span></label>\\r\\n        <textarea class=\\\"form-control\\\" placeholder=\\\"Enter description (minlength: 3 and maxlength: 250)\\\"\\r\\n            formControlName=\\\"curriculumDescription\\\" minlength=\\\"3\\\" maxlength=\\\"250\\\"></textarea>\\r\\n        <span class=\\\"font-15 text-muted\\\">Allowed characters - Alphabets, Numbers and Special characters</span>\\r\\n    </div>\\r\\n    <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n        <label for=\\\"country\\\" class=\\\"col-form-label\\\">Country</label>\\r\\n        <ng-select [items]=\\\"countryList\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"name\\\"\\r\\n            placeholder=\\\"Select country\\\" [(ngModel)]=\\\"selectedCountry\\\" (change)=\\\"onCountryChange()\\\"\\r\\n            formControlName=\\\"country\\\">\\r\\n        </ng-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group mb-2 col-xxl-6\\\">\\r\\n        <label for=\\\"state\\\" class=\\\"col-form-label\\\">State</label>\\r\\n        <ng-select [items]=\\\"stateList\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select state\\\"\\r\\n            [(ngModel)]=\\\"selectedState\\\" formControlName=\\\"state\\\">\\r\\n        </ng-select>\\r\\n    </div>\\r\\n    <div class=\\\"row mr-0 ml-0 w-100 mb-2\\\">\\r\\n        <div class=\\\"form-group col-xxl-6\\\">\\r\\n            <label for=\\\"startDate\\\" class=\\\"col-form-label\\\">Start date (dd/mm)</label>\\r\\n            <input id=\\\"startDate\\\" name=\\\"inputMask\\\" formControlName=\\\"startDate\\\" class=\\\"form-control input-mask\\\"\\r\\n                type=\\\"text\\\" placeholder=\\\"d d /m m \\\" minlength=\\\"5\\\" maxlength=\\\"5\\\" (click)=\\\"applyInputMaskForDate()\\\"\\r\\n                inputRestriction=\\\"onlyIntegers\\\">\\r\\n            <span class=\\\"font-15 text-muted\\\">Allowed characters - Numbers, Data format - dd/mm</span>\\r\\n        </div>\\r\\n        <div class=\\\"form-group  col-xxl-6\\\">\\r\\n            <label for=\\\"endDate\\\" name=\\\"inputMask\\\" class=\\\"col-form-label\\\">End date (dd/mm)</label>\\r\\n            <input id=\\\"endDate\\\" formControlName=\\\"endDate\\\" class=\\\"form-control input-mask\\\" type=\\\"text\\\"\\r\\n                placeholder=\\\"d d /m m \\\" (click)=\\\"applyInputMaskForDate()\\\" minlength=\\\"5\\\" maxlength=\\\"5\\\">\\r\\n            <span class=\\\"font-15 text-muted\\\">Allowed characters - Numbers, Data format - dd/mm</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row mr-0 ml-0 w-100 mb-2\\\">\\r\\n        <div class=\\\"form-group col-xxl-6\\\">\\r\\n            <label for=\\\"fromGrade\\\" class=\\\"col-form-label\\\">From grade</label>\\r\\n            <ng-select [items]=\\\"gradesFromList\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"name\\\"\\r\\n                placeholder=\\\"Select grade\\\" [(ngModel)]=\\\"selectedFromGrade\\\" (change)=\\\"onFromGradeChange()\\\"\\r\\n                formControlName=\\\"fromGrade\\\">\\r\\n            </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-xxl-6\\\">\\r\\n            <label for=\\\"to\\\" class=\\\"col-form-label\\\">To grade</label>\\r\\n            <ng-select [items]=\\\"gradesToList\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"name\\\"\\r\\n                placeholder=\\\"Select grade\\\" [(ngModel)]=\\\"selectedToGrade\\\" formControlName=\\\"toGrade\\\">\\r\\n            </ng-select>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12 d-flex justify-content-end\\\">\\r\\n        <button class=\\\"btn btn-danger mr-2 mb-2\\\" (click)=\\\"cancelCurriculum()\\\">\\r\\n            <i class=\\\"fa fa-times mr-2\\\"></i>Reset\\r\\n        </button>\\r\\n        <button class=\\\"btn btn-info mb-2 mr-2\\\" (click)=\\\"saveAsDraft()\\\" [disabled]=\\\"validateForm\\\">\\r\\n            <i class=\\\"fa fa-save mr-2\\\"></i>Save as draft\\r\\n        </button>\\r\\n        <button class=\\\"btn btn-success mb-2\\\" (click)=\\\"saveAndPublish()\\\" [disabled]=\\\"validateForm\\\">\\r\\n            <i class=\\\"fe fe-file-plus mr-2\\\"></i>Save and publish\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\"","import { CurriculumService } from './curriculum.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./curriculum-affiliations.component.html\",\r\n    providers: [CurriculumService]\r\n})\r\nexport class CurriculumAffiliationsComponent implements OnInit {\r\n    constructor(public router: Router, public pluginService: PluginService) { }\r\n\r\n    ngOnInit() {\r\n        this.pluginService.sideMenuToggle();\r\n    }\r\n\r\n    public onBack() {\r\n        var localObj = this;\r\n        swal({\r\n            title: \"Are you sure to go previous page ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    localObj.previousUrl();\r\n                    localObj.pluginService.sideMenuToggle();\r\n                }\r\n            });\r\n    }\r\n\r\n    previousUrl() {\r\n        this.router.navigateByUrl('/curriculum');\r\n    }\r\n}","import { OnInit, AfterViewInit, Component, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\r\nimport { CurriculumService } from './curriculum.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { JhiEventManager } from 'ng-jhipster';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ICurriculum } from '../shared/model/content/curriculum.model';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { ICountry } from '../shared/model/common/country.model';\r\nimport { IGrade } from '../shared/model/common/grade.model';\r\nimport { DRAFT, ACTIVE } from '../shared/constants/common.constants';\r\nimport { Observable } from 'rxjs';\r\nimport { CommonService } from '../shared/common/common.service';\r\nimport { IState } from '../shared/model/common/state.model';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./curriculum-create.component.html\",\r\n    providers: [CurriculumService]\r\n})\r\nexport class CurriculumCreateComponent implements OnInit, AfterViewInit, AfterViewChecked {\r\n    curriculumForm: FormGroup;\r\n    curriculum: ICurriculum = {};\r\n    grades: IGrade[];\r\n    gradesFromList: IGrade[] = [];\r\n    gradesToList: IGrade[] = [];\r\n    countryList: ICountry[] = [];\r\n    stateList: IState[] = [];\r\n    endDate: string;\r\n    startDate: string;\r\n    curriculumStatus: string;\r\n    validateForm: boolean;\r\n    selectedCountry: any;\r\n    selectedState: any;\r\n    selectedFromGrade: any;\r\n    selectedToGrade: any;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        public activatedRoute: ActivatedRoute,\r\n        public curriculumService: CurriculumService,\r\n        protected eventManager: JhiEventManager,\r\n        public pluginService: PluginService,\r\n        public formBuilder: FormBuilder,\r\n        public commonService: CommonService,\r\n        private changeDetectRef: ChangeDetectorRef\r\n    ) {\r\n        this.validateForm = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.pluginService.sideMenuToggle();\r\n        this.createCurriculumFormGroup();\r\n        this.getCountryList();\r\n        this.getGradeList();\r\n    }\r\n\r\n    //Get grade list from local JSON data\r\n    getGradeList() {\r\n        this.commonService.getGeneralDataList().subscribe((data: any) => {\r\n            this.grades = data.grade;\r\n            this.gradesFromList = data.grade;\r\n        });\r\n    }\r\n\r\n    //Get country list from local JSON data\r\n    getCountryList() {\r\n        this.commonService.getCountryList().subscribe((countryData: any) => {\r\n            this.countryList = countryData;\r\n        });\r\n    }\r\n\r\n    //Initializing curriculum formfields\r\n    createCurriculumFormGroup() {\r\n        this.curriculumForm = this.formBuilder.group({\r\n            curriculumAcronym: new FormControl(\"\", [Validators.required, Validators.minLength(2), Validators.maxLength(10)]),\r\n            curriculumName: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(75)]),\r\n            curriculumDescription: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(250)]),\r\n            startDate: new FormControl(\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(5)]),\r\n            endDate: new FormControl(\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(5)]),\r\n            country: new FormControl(null, Validators.required),\r\n            state: new FormControl(null, Validators.required),\r\n            fromGrade: new FormControl(null, Validators.required),\r\n            toGrade: new FormControl(null, Validators.required)\r\n        });\r\n    }\r\n\r\n    //Creating formcontrol for a curriculum formfields\r\n    //Used for validations\r\n    get formControl() { return this.curriculumForm.controls; }\r\n\r\n    ngAfterViewInit() {\r\n        this.removeSlashInDate();\r\n    }\r\n\r\n    //Applying input mask format for start date and end date \r\n    applyInputMaskForDate() {\r\n        $(document).ready(function () {\r\n            $('.input-mask').mask('00/00');\r\n        });\r\n    }\r\n\r\n    //Country dropdown on selection\r\n    onCountryChange() {\r\n        let countryId;\r\n        if (this.selectedCountry) {\r\n            countryId = this.selectedCountry.id;\r\n            this.getStateListByCountryId(countryId);\r\n        }\r\n    }\r\n\r\n    //From grade dropdown on selection\r\n    onFromGradeChange() {\r\n        let grade;\r\n        if (this.selectedFromGrade) {\r\n            grade = this.selectedFromGrade.name;\r\n            this.generateGradesToList(grade);\r\n        }\r\n    }\r\n\r\n    //Get state list based on country selection\r\n    getStateListByCountryId(countryId) {\r\n        let stateList: IState[] = [];\r\n        this.commonService.getStateList().subscribe((stateData: any) => {\r\n            stateList = stateData;\r\n            this.stateList = stateList.filter(item => item.country_id === countryId.toString());\r\n        });\r\n    }\r\n\r\n    //Generate To grade list based on From grade selection\r\n    generateGradesToList(selectedGrade) {\r\n        this.gradesToList = [];\r\n        for (let i = selectedGrade; i < this.grades.length; i++) {\r\n            this.gradesToList.push(this.grades[i])\r\n        }\r\n        return this.gradesToList;\r\n    }\r\n\r\n    //Trim value for validation\r\n    trimValue(value) {\r\n        if (value === null || value === undefined) {\r\n            return value;\r\n        } else {\r\n            return value.trim();\r\n        }\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        this.validateCurriculumForm();\r\n        this.changeDetectRef.detectChanges();\r\n    }\r\n\r\n    //Curriculum form validation\r\n    validateCurriculumForm() {\r\n        let curriculumName, acronym;\r\n        curriculumName = this.trimValue(this.curriculumForm.value.curriculumName);\r\n        acronym = this.trimValue(this.curriculumForm.value.curriculumAcronym);\r\n        if (curriculumName === \"\" || curriculumName === undefined || curriculumName === null) {\r\n            this.validateForm = true;\r\n        }\r\n        if (acronym === \"\" || acronym === undefined || acronym === null) {\r\n            this.validateForm = true;\r\n        }\r\n        if (this.curriculumForm.invalid) {\r\n            this.validateForm = true;\r\n        }\r\n        if (this.curriculumForm.valid) {\r\n            this.validateForm = false;\r\n        }\r\n    }\r\n\r\n    //Save curriculum with status DRAFT \r\n    saveAsDraft() {\r\n        if (this.curriculumForm.valid) {\r\n            this.curriculumStatus = DRAFT;\r\n            this.saveCurriculum();\r\n        }\r\n        if (this.curriculumForm.invalid) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    //Save curriculum with status ACTIVE \r\n    saveAsPublish() {\r\n        if (this.curriculumForm.valid) {\r\n            this.curriculumStatus = ACTIVE;\r\n            this.saveCurriculum();\r\n        }\r\n        if (this.curriculumForm.invalid) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    //Removing slash in start date and end date \r\n    //While saving date, we need to send numbers without slash\r\n    removeSlashInDate() {\r\n        this.startDate = this.curriculumForm.get('startDate').value;\r\n        this.startDate = this.startDate.replace(\"/\", \"\");\r\n        this.endDate = this.curriculumForm.get('endDate').value;\r\n        this.endDate = this.endDate.replace(\"/\", \"\");\r\n    }\r\n\r\n    //Save curriculum service\r\n    saveCurriculum() {\r\n        this.subscribeToSaveResponse(this.curriculumService.createCurriculum(this.createCurriculumForm()));\r\n    }\r\n\r\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<ICurriculum>>) {\r\n        result.subscribe((res: HttpResponse<ICurriculum>) => this.onSaveCurriculumSuccess(), (res: HttpErrorResponse) => this.onSaveCurriculumError());\r\n    }\r\n\r\n    protected onSaveCurriculumSuccess() {\r\n        if (this.curriculumStatus === DRAFT) {\r\n            this.pluginService.alertMessage(\"Curriculum created successfully\", \"success\")\r\n        } else {\r\n            this.pluginService.alertMessage(\"Curriculum published successfully\", \"success\")\r\n        }\r\n        this.curriculumForm.reset();\r\n        this.router.navigateByUrl('/curriculum');\r\n    }\r\n\r\n    protected onSaveCurriculumError() {\r\n        if (this.curriculumStatus === DRAFT) {\r\n            this.pluginService.alertMessage(\"Error while curriculum save\", \"error\")\r\n        } else {\r\n            this.pluginService.alertMessage(\"Error while curriculum publish\", \"error\")\r\n        }\r\n    }\r\n\r\n    //Creating curriculum object\r\n    private createCurriculumForm(): ICurriculum {\r\n        this.removeSlashInDate();\r\n        this.curriculum.name = this.trimValue(this.curriculumForm.get('curriculumName').value);\r\n        this.curriculum.acronym = this.trimValue(this.curriculumForm.get('curriculumAcronym').value);\r\n        this.curriculum.description = this.trimValue(this.curriculumForm.get('curriculumDescription').value);\r\n        this.curriculum.startDate = this.startDate;\r\n        this.curriculum.endDate = this.endDate\r\n        this.curriculum.status = this.curriculumStatus;\r\n        this.curriculum.isExtraCurriculum = false;\r\n        this.curriculum.country = this.selectedCountry.sortname;\r\n        this.curriculum.state = this.selectedState.name;\r\n        this.curriculum.gradesApplicableFrom = this.selectedFromGrade.name;\r\n        this.curriculum.gradesApplicableTo = this.selectedToGrade.name;\r\n        this.curriculum.organisationId = null;\r\n        return this.curriculum\r\n    }\r\n\r\n    //Reset curriculum formfields\r\n    resetCurriculum() {\r\n        this.curriculumForm.reset();\r\n        this.selectedCountry = null;\r\n        this.selectedState = null;\r\n        this.selectedFromGrade = null;\r\n        this.selectedToGrade = null;\r\n    }\r\n\r\n    public onBack() {\r\n        var localObj = this;\r\n        swal({\r\n            title: \"Are you sure to go previous page ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    localObj.router.navigateByUrl('/curriculum');\r\n                    localObj.pluginService.sideMenuToggle();\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CurriculumService } from './curriculum.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { JhiEventManager } from 'ng-jhipster';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    template: \"\",\r\n    providers: [CurriculumService]\r\n})\r\nexport class CurriculumDeleteComponent implements OnInit {\r\n\r\n    constructor(\r\n        public router: Router,\r\n        public activatedRoute: ActivatedRoute,\r\n        protected eventManager: JhiEventManager,\r\n        public curriculumService: CurriculumService,\r\n        protected pluginService: PluginService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.data.subscribe(({ curriculum }) => {\r\n            this.deleteCurriculum(curriculum);\r\n        });\r\n    }\r\n\r\n    protected subscribeToDeleteCurriculumResponse(resp: Observable<HttpResponse<any>>) {\r\n        resp.subscribe((res: HttpResponse<any>) => this.onDeleteCurriculumSuccess(res), (res: HttpErrorResponse) => this.onDeleteCurriculumError(res));\r\n    }\r\n\r\n    //Delete curriculum\r\n    deleteCurriculum(curriculum) {\r\n        var localthisObject = this;\r\n        swal({\r\n            title: \"Are you sure to delete this curriculum ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: false,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    localthisObject.confirmDelete(curriculum.id);\r\n                } else {\r\n                    localthisObject.previousUrl();\r\n                }\r\n            });\r\n    }\r\n\r\n    confirmDelete(id: number) {\r\n        this.subscribeToDeleteCurriculumResponse(this.curriculumService.delete(id));\r\n    }\r\n\r\n    previousUrl() {\r\n        this.router.navigateByUrl('/curriculum');\r\n    }\r\n\r\n    protected onDeleteCurriculumSuccess(resp) {\r\n        this.pluginService.alertMessage(\"Curriculum deleted successfully\", \"success\");\r\n        this.previousUrl();\r\n    }\r\n\r\n    onDeleteCurriculumError(err: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not delete curriculum, please contact admin\", \"error\")\r\n    }\r\n\r\n}","import { OnInit, Component } from '@angular/core';\r\nimport { CurriculumService } from './curriculum.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { JhiEventManager } from 'ng-jhipster';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ICurriculum } from '../shared/model/content/curriculum.model';\r\nimport { ICountry } from '../shared/model/common/country.model';\r\nimport { CommonService } from '../shared/common/common.service';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./curriculum-details.component.html\",\r\n    providers: [CurriculumService]\r\n})\r\nexport class CurriculumDetailsComponent implements OnInit {\r\n    curriculumForm: FormGroup;\r\n    curriculum: ICurriculum = {};\r\n    countryList: ICountry[];\r\n    curriculumId: number;\r\n    startDate: string;\r\n    endDate: string;\r\n    country: string;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        public activatedRoute: ActivatedRoute,\r\n        public curriculumService: CurriculumService,\r\n        protected eventManager: JhiEventManager,\r\n        public pluginService: PluginService,\r\n        public formBuilder: FormBuilder,\r\n        public commonService: CommonService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.pluginService.sideMenuToggle();\r\n        this.activatedRoute.data.subscribe(({ curriculum }) => {\r\n            this.curriculum = curriculum;\r\n            this.getCountryList();\r\n        });\r\n    }\r\n\r\n    //Get country list from local JSON data\r\n    getCountryList() {\r\n        this.commonService.getCountryList().subscribe((countryData: any) => {\r\n            this.countryList = countryData;\r\n            this.mapCurriculumValues();\r\n        });\r\n    }\r\n\r\n    mapCurriculumValues() {\r\n        this.curriculumId = this.curriculum.id;\r\n        this.country = this.countryList.find(item => item.sortname === this.curriculum.country).name;\r\n        this.startDate = this.addSlashBetweenDateMonth(this.curriculum.startDate);\r\n        this.endDate = this.addSlashBetweenDateMonth(this.curriculum.endDate);\r\n    }\r\n    \r\n    //Adding slash in start date and end date \r\n    addSlashBetweenDateMonth(dateValue: string): string {\r\n        let date, month, dateWithSlash;\r\n        date = dateValue.substring(0, 2);\r\n        month = dateValue.substring(2, 4);\r\n        dateWithSlash = date + \"/\" + month;\r\n        return dateWithSlash;\r\n    }\r\n\r\n    public onBack() {\r\n        var localObj = this;\r\n        swal({\r\n            title: \"Are you sure to go previous page ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    localObj.router.navigateByUrl('/curriculum');\r\n                    localObj.pluginService.sideMenuToggle();\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CurriculumService } from './curriculum.service';\r\nimport { ICurriculum } from '../shared/model/content/curriculum.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { JhiEventManager, JhiParseLinks } from 'ng-jhipster';\r\nimport { Principal } from '../core';\r\nimport { ITEMS_PER_PAGE } from '../shared';\r\nimport { HttpResponse, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n  templateUrl: \"./curriculum-manage.component.html\",\r\n  providers: [CurriculumService]\r\n})\r\nexport class CurriculumManageComponent implements OnInit, OnDestroy {\r\n  curriculums: ICurriculum[];\r\n  eventSubscriber: Subscription;\r\n  startDate: string;\r\n  endDate: string;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n  currentAccount: any;\r\n  predicate: any;\r\n  reverse: any;\r\n  links: any;\r\n  page: any;\r\n\r\n  constructor(\r\n    public _router: Router,\r\n    public curriculumService: CurriculumService,\r\n    protected eventManager: JhiEventManager,\r\n    protected parseLinks: JhiParseLinks,\r\n    protected principalService: Principal,\r\n    protected pluginService: PluginService\r\n  ) {\r\n    this.curriculums = [];\r\n    this.itemsPerPage = ITEMS_PER_PAGE;\r\n    this.page = 0;\r\n    this.links = {\r\n      last: 0\r\n    };\r\n    this.predicate = 'id';\r\n    this.reverse = false;\r\n  }\r\n\r\n  loadStandardCurriculums() {\r\n    this.curriculumService\r\n      .getStandardCurriculums({\r\n        page: this.page,\r\n        size: this.itemsPerPage,\r\n        sort: this.sort()\r\n      })\r\n      .subscribe(\r\n        (res: HttpResponse<ICurriculum[]>) => this.paginateCurriculums(res.body, res.headers),\r\n        (res: HttpErrorResponse) => this.onError(res.message)\r\n      );\r\n  }\r\n\r\n  protected paginateCurriculums(data: ICurriculum[], headers: HttpHeaders) {\r\n    //this.links = this.parseLinks.parse(headers.get('link'));\r\n    this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n    if (data.length > 0) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        this.curriculums.push(data[i]);\r\n        this.startDate = this.addSlashBetweenDateMonth(data[i].startDate);\r\n        this.endDate = this.addSlashBetweenDateMonth(data[i].endDate);\r\n      }\r\n    } else {\r\n      this.pluginService.alertMessage(\"No data found..!\", \"warning\");\r\n    }\r\n\r\n  }\r\n\r\n  reset() {\r\n    this.page = 0;\r\n    this.curriculums = [];\r\n    this.loadStandardCurriculums();\r\n  }\r\n\r\n  loadPage(page) {\r\n    this.page = page;\r\n    this.loadStandardCurriculums();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadStandardCurriculums();\r\n    this.principalService.identity().then(account => {\r\n      this.currentAccount = account;\r\n    });\r\n    this.registerChangeInCurriculums();\r\n  }\r\n\r\n  addSlashBetweenDateMonth(dateValue: string): string {\r\n    let date, month, dateWithSlash;\r\n    date = dateValue.substring(0, 2);\r\n    month = dateValue.substring(2, 4);\r\n    dateWithSlash = date + \"/\" + month;\r\n    return dateWithSlash;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.eventManager.destroy(this.eventSubscriber);\r\n  }\r\n\r\n  trackId(index: number, item: ICurriculum) {\r\n    return item.id;\r\n  }\r\n\r\n  registerChangeInCurriculums() {\r\n    this.eventSubscriber = this.eventManager.subscribe('curriculumListModification', response => this.reset());\r\n  }\r\n\r\n  sort() {\r\n    const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n    if (this.predicate !== 'id') {\r\n      result.push('id');\r\n    }\r\n    return result;\r\n  }\r\n\r\n  protected convertToCurriculumList(data: ICurriculum) {\r\n    this.curriculums.push(data);\r\n  }\r\n\r\n  protected onError(errorMessage: string) {\r\n    this.pluginService.alertMessage(errorMessage, \"error\");\r\n  }\r\n\r\n  ngDestroy() {\r\n    this.eventSubscriber.unsubscribe();\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { CurriculumService } from './curriculum.service';\r\nimport { ICurriculum } from '../shared/model/content/curriculum.model';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ACTIVE } from '../shared/constants/common.constants'\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\n\r\n@Component({\r\n    template: \"\",\r\n    providers: [CurriculumService]\r\n})\r\nexport class CurriculumPublishComponent implements OnInit {\r\n    constructor(\r\n        public router: Router,\r\n        public activatedRoute: ActivatedRoute,\r\n        public curriculumService: CurriculumService,\r\n        protected pluginService: PluginService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.data.subscribe(({ curriculum }) => {\r\n            this.publishCurriculum(curriculum);\r\n        });\r\n    }\r\n\r\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<ICurriculum>>) {\r\n        result.subscribe((res: HttpResponse<ICurriculum>) => this.onSaveSuccess(res), (errRes: HttpErrorResponse) => this.onSaveError(errRes));\r\n    }\r\n\r\n    publishCurriculum(curriculum) {\r\n        curriculum.status = ACTIVE;\r\n        this.subscribeToSaveResponse(this.curriculumService.updateCurriculum(curriculum));\r\n        this.pluginService.alertMessage(\"Curriculum published successfully\", \"success\")\r\n        this.router.navigateByUrl('/curriculum');\r\n    }\r\n\r\n\r\n    onSaveSuccess(resp: HttpResponse<ICurriculum>) {\r\n        if (resp.body.status === ACTIVE) {\r\n            this.pluginService.alertMessage(\"Curriculum published successfully\", \"success\")\r\n        }\r\n    }\r\n\r\n    onSaveError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not publish curriculum, please contact admin\", \"error\")\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { CurriculumService } from './curriculum.service';\r\nimport { ICurriculum } from '../shared/model/content/curriculum.model';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { INACTIVE } from '../shared/constants/common.constants'\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\n\r\n@Component({\r\n    template: \"\",\r\n    providers: [CurriculumService]\r\n})\r\nexport class CurriculumUnpublishComponent implements OnInit {\r\n    constructor(\r\n        public router: Router,\r\n        public activatedRoute: ActivatedRoute,\r\n        public curriculumService: CurriculumService,\r\n        protected pluginService: PluginService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.data.subscribe(({ curriculum }) => {\r\n            this.unpublishCurriculum(curriculum);\r\n        });\r\n    }\r\n\r\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<ICurriculum>>) {\r\n        result.subscribe((res: HttpResponse<ICurriculum>) => this.onSaveSuccess(res), (errRes: HttpErrorResponse) => this.onSaveError(errRes));\r\n    }\r\n\r\n    unpublishCurriculum(curriculum) {\r\n        curriculum.status = INACTIVE;\r\n        this.subscribeToSaveResponse(this.curriculumService.updateCurriculum(curriculum));\r\n        this.pluginService.alertMessage(\"Curriculum published successfully\", \"success\")\r\n        this.router.navigateByUrl('/curriculum');\r\n    }\r\n\r\n\r\n    onSaveSuccess(resp: HttpResponse<ICurriculum>) {\r\n        if (resp.body.status === INACTIVE) {\r\n            this.pluginService.alertMessage(\"Curriculum unpublished successfully\", \"success\")\r\n        }\r\n    }\r\n\r\n    onSaveError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not publish curriculum, please contact admin\", \"error\")\r\n    }\r\n}","import { OnInit, AfterViewInit, Component, ChangeDetectorRef, AfterViewChecked } from '@angular/core';\r\nimport { CurriculumService } from './curriculum.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { JhiEventManager } from 'ng-jhipster';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ICurriculum } from '../shared/model/content/curriculum.model';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { ICountry } from '../shared/model/common/country.model';\r\nimport { IGrade } from '../shared/model/common/grade.model';\r\nimport { DRAFT, ACTIVE } from '../shared/constants/common.constants';\r\nimport { Observable } from 'rxjs';\r\nimport { IState } from '../shared/model/common/state.model';\r\nimport { CommonService } from '../shared/common/common.service';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./curriculum-update.component.html\",\r\n    providers: [CurriculumService]\r\n})\r\nexport class CurriculumUpdateComponent implements OnInit, AfterViewInit, AfterViewChecked {\r\n    curriculumForm: FormGroup;\r\n    curriculum: ICurriculum = {};\r\n    grades: IGrade[];\r\n    gradesFromList: IGrade[] = [];\r\n    gradesToList: IGrade[] = [];\r\n    countryList: ICountry[];\r\n    allStateList: IState[];\r\n    stateList: IState[];\r\n    startDate: string;\r\n    endDate: string;\r\n    curriculumStatus: string;\r\n    selectedCountry: any;\r\n    selectedState: any;\r\n    selectedFromGrade: any;\r\n    selectedToGrade: any;\r\n    validateForm: boolean;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        public activatedRoute: ActivatedRoute,\r\n        public curriculumService: CurriculumService,\r\n        protected eventManager: JhiEventManager,\r\n        public pluginService: PluginService,\r\n        public formBuilder: FormBuilder,\r\n        public commonService: CommonService,\r\n        private changeDetectorRef: ChangeDetectorRef\r\n    ) {\r\n        this.validateForm = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.pluginService.sideMenuToggle();\r\n        this.createCurriculumFormGroup();\r\n        this.activatedRoute.data.subscribe(({ curriculum }) => {\r\n            this.curriculum = curriculum;\r\n            this.getCountryList();\r\n        });\r\n    }\r\n\r\n    getCountryList() {\r\n        this.commonService.getCountryList().subscribe((countryData: any) => {\r\n            this.countryList = countryData;\r\n            this.getStateList();\r\n            this.getGeneralDataList();\r\n        });\r\n    }\r\n\r\n    getGeneralDataList() {\r\n        this.commonService.getGeneralDataList().subscribe((generalData: any) => {\r\n            //this.curriculumTypeList = generalData.curriculumType;\r\n            this.grades = generalData.grade;\r\n            this.gradesFromList = this.grades;\r\n        });\r\n    }\r\n\r\n    getStateList() {\r\n        this.commonService.getStateList().subscribe((stateData: any) => {\r\n            this.allStateList = stateData;\r\n            this.updateCurriculumValues();\r\n        });\r\n    }\r\n\r\n    createCurriculumFormGroup() {\r\n        this.curriculumForm = this.formBuilder.group({\r\n            curriculumAcronym: new FormControl(\"\", [Validators.required, Validators.minLength(2), Validators.maxLength(10)]),\r\n            curriculumName: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(75)]),\r\n            curriculumDescription: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(250)]),\r\n            startDate: new FormControl(\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(5)]),\r\n            endDate: new FormControl(\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(5)]),\r\n            country: new FormControl(null, Validators.required),\r\n            state: new FormControl(null, Validators.required),\r\n            fromGrade: new FormControl(null, Validators.required),\r\n            toGrade: new FormControl(null, Validators.required)\r\n        });\r\n    }\r\n\r\n    get formControl() { return this.curriculumForm.controls; }\r\n\r\n    updateCurriculumValues() {\r\n        var curriculumType, stateIndex, countryIndex, fromGradeIndex, toGradeIndex;\r\n        this.stateList = [];\r\n        countryIndex = this.countryList.findIndex(item => item.sortname === this.curriculum.country);\r\n        this.selectedCountry = this.countryList[countryIndex];\r\n        this.stateList = this.allStateList.filter(item => item.country_id === this.countryList[countryIndex].id.toString());\r\n        stateIndex = this.stateList.findIndex(item => item.name === this.curriculum.state);\r\n        this.selectedState = this.stateList[stateIndex];\r\n        fromGradeIndex = this.gradesFromList.findIndex(item => item.name === this.curriculum.gradesApplicableFrom);\r\n        this.selectedFromGrade = this.gradesFromList[fromGradeIndex];\r\n        this.generateGradesToList(this.curriculum.gradesApplicableFrom);\r\n        toGradeIndex = this.gradesToList.findIndex(item => item.name === this.curriculum.gradesApplicableTo);\r\n        this.selectedToGrade = this.gradesToList[toGradeIndex];\r\n        this.curriculumForm.patchValue({\r\n            curriculumType: curriculumType,\r\n            curriculumAcronym: this.curriculum.acronym,\r\n            curriculumName: this.curriculum.name,\r\n            organisation: this.curriculum.id,\r\n            curriculumDescription: this.curriculum.description,\r\n            startDate: this.addSlashBetweenDateMonth(this.curriculum.startDate),\r\n            endDate: this.addSlashBetweenDateMonth(this.curriculum.endDate)\r\n        });\r\n    }\r\n\r\n    addSlashBetweenDateMonth(dateValue: string): string {\r\n        let date, month, dateWithSlash;\r\n        date = dateValue.substring(0, 2);\r\n        month = dateValue.substring(2, 4);\r\n        dateWithSlash = date + \"/\" + month;\r\n        return dateWithSlash;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.applyInputMaskForDate();\r\n        this.removeSlashInDate();\r\n    }\r\n\r\n    applyInputMaskForDate() {\r\n        $(document).ready(function () {\r\n            $('.input-mask').mask('00/00');\r\n        });\r\n    }\r\n\r\n    onCountryChange() {\r\n        let countryId;\r\n        if (this.selectedCountry) {\r\n            countryId = this.selectedCountry.id;\r\n            this.getStateListByCountryId(countryId);\r\n        }\r\n    }\r\n\r\n    onFromGradeChange() {\r\n        let grade;\r\n        if (this.selectedFromGrade) {\r\n            grade = this.selectedFromGrade.name;\r\n            this.generateGradesToList(grade);\r\n        }\r\n    }\r\n\r\n    getStateListByCountryId(countryId) {\r\n        let stateList: IState[] = [];\r\n        this.commonService.getStateList().subscribe((stateData: any) => {\r\n            stateList = stateData;\r\n            this.stateList = stateList.filter(item => item.country_id === countryId.toString());\r\n        });\r\n    }\r\n\r\n    generateGradesToList(selectedGrade) {\r\n        this.gradesToList = [];\r\n        for (let i = selectedGrade; i < this.grades.length; i++) {\r\n            this.gradesToList.push(this.grades[i])\r\n        }\r\n        return this.gradesToList;\r\n    }\r\n\r\n    trimValue(value) {\r\n        if (value === null || value === undefined) {\r\n            return value;\r\n        } else {\r\n            return value.trim();\r\n        }\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        this.validateCurriculumForm();\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    validateCurriculumForm() {\r\n        let curriculumName, acronym;\r\n        curriculumName = this.trimValue(this.curriculumForm.value.curriculumName);\r\n        acronym = this.trimValue(this.curriculumForm.value.curriculumAcronym);\r\n        if (curriculumName === \"\" || curriculumName === undefined || curriculumName === null) {\r\n            this.validateForm = true;\r\n        }\r\n        if (acronym === \"\" || acronym === undefined || acronym === null) {\r\n            this.validateForm = true;\r\n        }\r\n        if (this.curriculumForm.invalid) {\r\n            this.validateForm = true;\r\n        }\r\n        if (this.curriculumForm.valid) {\r\n            this.validateForm = false;\r\n        }\r\n    }\r\n\r\n    saveAsDraft() {\r\n        if (this.curriculumForm.valid) {\r\n            this.curriculumStatus = DRAFT;\r\n            this.saveCurriculum();\r\n        }\r\n        if (this.curriculumForm.invalid) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    saveAndPublish() {\r\n        if (this.curriculumForm.valid) {\r\n            this.curriculumStatus = ACTIVE;\r\n            this.saveCurriculum();\r\n        }\r\n        if (this.curriculumForm.invalid) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    removeSlashInDate() {\r\n        this.startDate = this.curriculumForm.get('startDate').value;\r\n        this.startDate = this.startDate.replace(\"/\", \"\");\r\n        this.endDate = this.curriculumForm.get('endDate').value;\r\n        this.endDate = this.endDate.replace(\"/\", \"\");\r\n    }\r\n\r\n    saveCurriculum() {\r\n        this.subscribeToSaveResponse(this.curriculumService.updateCurriculum(this.createCurriculumForm()));\r\n    }\r\n\r\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<ICurriculum>>) {\r\n        result.subscribe((res: HttpResponse<ICurriculum>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\r\n    }\r\n\r\n    protected onSaveSuccess() {\r\n        if (this.curriculumStatus === DRAFT) {\r\n            this.pluginService.alertMessage(\"Curriculum updated successfully\", \"success\")\r\n        } else {\r\n            this.pluginService.alertMessage(\"Curriculum published successfully\", \"success\")\r\n        }\r\n        this.router.navigateByUrl('/curriculum');\r\n        this.curriculumForm.reset();\r\n    }\r\n\r\n    protected onSaveError() {\r\n        if (this.curriculumStatus === DRAFT) {\r\n            this.pluginService.alertMessage(\"Error while curriculum save\", \"error\")\r\n        } else {\r\n            this.pluginService.alertMessage(\"Error while curriculum publish\", \"error\")\r\n        }\r\n    }\r\n\r\n    private createCurriculumForm(): ICurriculum {\r\n        this.removeSlashInDate();\r\n        this.curriculum.name = this.curriculumForm.value.curriculumName;\r\n        this.curriculum.acronym = this.curriculumForm.value.curriculumAcronym;\r\n        this.curriculum.description = this.curriculumForm.value.curriculumDescription;\r\n        this.curriculum.startDate = this.startDate;\r\n        this.curriculum.endDate = this.endDate;\r\n        this.curriculum.country = this.selectedCountry.sortname;\r\n        this.curriculum.state = this.selectedState.name;\r\n        this.curriculum.gradesApplicableFrom = this.selectedFromGrade.name;\r\n        this.curriculum.gradesApplicableTo = this.selectedToGrade.name;\r\n        this.curriculum.status = this.curriculumStatus;\r\n        return this.curriculum\r\n    }\r\n\r\n    public cancelCurriculum() {\r\n        this.curriculumForm.reset();\r\n        this.selectedCountry = null;\r\n        this.selectedState = null;\r\n        this.selectedFromGrade = null;\r\n        this.selectedToGrade = null;\r\n    }\r\n\r\n    public onBack() {\r\n        var localObj = this;\r\n        swal({\r\n            title: \"Are you sure to go previous page ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    localObj.router.navigateByUrl('/curriculum');\r\n                    localObj.pluginService.sideMenuToggle();\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared';\r\nimport { NgJhipsterModule } from 'ng-jhipster';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CurriculumManageComponent } from './curriculum-manage.component';\r\nimport { curriculumRoute } from './curriculum.route';\r\nimport { CurriculumCreateComponent } from './curriculum-create.component';\r\nimport { CurriculumUpdateComponent } from './curriculum-update.component';\r\nimport { CurriculumDetailsComponent } from './curriculum-details.component';\r\nimport { CurriculumPublishComponent } from './curriculum-update-publish.component';\r\nimport { CurriculumUnpublishComponent } from './curriculum-update-unpublish.component';\r\nimport { CurriculumDeleteComponent } from './curriculum-delete.component';\r\nimport { CurriculumAffiliationsComponent } from './curriculum-affiliations.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(curriculumRoute),\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        SharedModule,\r\n        NgJhipsterModule,\r\n        InfiniteScrollModule,\r\n        NgbModule\r\n    ],\r\n    declarations: [\r\n        CurriculumManageComponent,\r\n        CurriculumCreateComponent,\r\n        CurriculumUpdateComponent,\r\n        CurriculumDetailsComponent,\r\n        CurriculumDeleteComponent,\r\n        CurriculumPublishComponent,\r\n        CurriculumUnpublishComponent,\r\n        CurriculumAffiliationsComponent\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class CurriculumModule {\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { ICurriculum, Curriculum } from '../shared/model/content/curriculum.model';\r\nimport { CurriculumService } from './curriculum.service';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { CurriculumManageComponent } from './curriculum-manage.component';\r\nimport { UserRouteAccessService } from '../core';\r\nimport { CurriculumCreateComponent } from './curriculum-create.component';\r\nimport { CurriculumUpdateComponent } from './curriculum-update.component';\r\nimport { CurriculumDetailsComponent } from './curriculum-details.component';\r\nimport { CurriculumPublishComponent } from './curriculum-update-publish.component';\r\nimport { CurriculumUnpublishComponent } from './curriculum-update-unpublish.component';\r\nimport { CurriculumDeleteComponent } from './curriculum-delete.component';\r\nimport { CurriculumAffiliationsComponent } from './curriculum-affiliations.component';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CurriculumResolve implements Resolve<ICurriculum> {\r\n    constructor(private service: CurriculumService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ICurriculum> {\r\n        const id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(\r\n                filter((response: HttpResponse<Curriculum>) => response.ok),\r\n                map((curriculum: HttpResponse<Curriculum>) => curriculum.body)\r\n            );\r\n        }\r\n        return of(new Curriculum());\r\n    }\r\n}\r\n\r\nexport const curriculumRoute: Routes = [\r\n    {\r\n        path: '',\r\n        component: CurriculumManageComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Manage curriculums'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'create',\r\n        component: CurriculumCreateComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Create new curriculum',\r\n            action: \"create\"\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: CurriculumUpdateComponent,\r\n        resolve: {\r\n            curriculum: CurriculumResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Edit curriculum',\r\n            action: 'edit'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }, {\r\n        path: ':id/view',\r\n        component: CurriculumDetailsComponent,\r\n        resolve: {\r\n            curriculum: CurriculumResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'View curriculum',\r\n            action: 'view'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/delete',\r\n        component: CurriculumDeleteComponent,\r\n        resolve: {\r\n            curriculum: CurriculumResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Delete curriculum',\r\n            action: 'delete'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/publish',\r\n        component: CurriculumPublishComponent,\r\n        resolve: {\r\n            curriculum: CurriculumResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Publish curriculum',\r\n            action: 'publish'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/unpublish',\r\n        component: CurriculumUnpublishComponent,\r\n        resolve: {\r\n            curriculum: CurriculumResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Unpublish curriculum',\r\n            action: 'unpublish'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }, {\r\n        path: ':id/affiliations',\r\n        component: CurriculumAffiliationsComponent,\r\n        resolve: {\r\n            curriculum: CurriculumResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Manage curriculum affiliations',\r\n            action: 'unpublish'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }\r\n]","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { ICurriculum } from '../shared/model/content/curriculum.model';\r\nimport { environment } from '../../environments/environment';\r\nimport { createRequestOption } from '../shared';\r\nimport { Observable } from 'rxjs';\r\nimport { ACTIVE } from '../shared/constants/common.constants';\r\n\r\ntype EntityResponseType = HttpResponse<ICurriculum>;\r\ntype EntityArrayResponseType = HttpResponse<ICurriculum[]>;\r\n\r\nlet headers: HttpHeaders = new HttpHeaders();\r\nheaders = headers.append('Access-Control-Allow-Origin', '*').append('Access-Control-Allow-Headers', '*');\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CurriculumService {\r\n    public curriculumResourceUrlSearch = environment.API_URL + 'services/learning/api/curricula/search';\r\n    public curriculumResourceUrl = environment.API_URL + 'services/learning/api/curricula';\r\n\r\n    constructor(protected http: HttpClient) { }\r\n\r\n    createCurriculum(curriculum: ICurriculum): Observable<EntityResponseType> {\r\n        return this.http.post<ICurriculum>(this.curriculumResourceUrl, curriculum, { observe: 'response' });\r\n    }\r\n\r\n    updateCurriculum(curriculum: ICurriculum): Observable<EntityResponseType> {\r\n        return this.http.put<ICurriculum>(this.curriculumResourceUrl, curriculum, { observe: 'response' });\r\n    }\r\n\r\n    find(id: number): Observable<EntityResponseType> {\r\n        return this.http.get<ICurriculum>(`${this.curriculumResourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    getStandardCurriculums(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        var reqJSON = {\r\n            \"isExtraCurriculum\": false\r\n        };\r\n        return this.http.post<ICurriculum[]>(this.curriculumResourceUrlSearch, reqJSON, { params: options, observe: 'response' });\r\n    }\r\n\r\n    getCurriculumSearch(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        var reqJSON = {\r\n            \"isExtraCurriculum\": false,\r\n            \"status\": ACTIVE\r\n        };\r\n        return this.http.post<ICurriculum[]>(this.curriculumResourceUrlSearch, reqJSON, { params: options, observe: 'response' });\r\n    }\r\n\r\n    delete(id: number): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.curriculumResourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n}\r\n","export const DRAFT = 'DRAFT';\r\nexport const ACTIVE = 'ACTIVE';\r\nexport const INACTIVE = 'INACTIVE';\r\nexport const ARCHIVED = 'ARCHIVED';\r\nexport const NOCHANGE = 'NOCHANGE';\r\nexport const CREATED = 'CREATED';\r\nexport const EDITED = 'EDITED';\r\nexport const DELETED = 'DELETED';","\r\nexport interface ICurriculum {\r\n  id?: number;\r\n  acronym?: string,\r\n  country?: string,\r\n  description?: string,\r\n  endDate?: string,\r\n  gradesApplicableFrom?: number,\r\n  gradesApplicableTo?: number,\r\n  isExtraCurriculum?: boolean,\r\n  name?: string,\r\n  curriculumTypeId?: number;\r\n  organisationId?: number,\r\n  startDate?: string,\r\n  state?: string,\r\n  status?: string,\r\n  checked?: boolean\r\n}\r\n\r\n\r\n\r\nexport class Curriculum implements ICurriculum {\r\n  constructor(\r\n    public id?: number,\r\n    public acronym?: string,\r\n    public country?: string,\r\n    public description?: string,\r\n    public endDate?: string,\r\n    public gradesApplicableFrom?: number,\r\n    public gradesApplicableTo?: number,\r\n    public isExtraCurriculum?: boolean,\r\n    public name?: string,\r\n    public organisationId?: number,\r\n    public curriculumTypeId?: number,\r\n    public startDate?: string,\r\n    public state?: string,\r\n    public status?: string,\r\n    public checked?: boolean) {\r\n    this.checked = false;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"curriculum-curriculum-module-es5.js"}