{"version":3,"sources":["src/app/general-concept-topic/general-concept-question-manage.component.html","src/app/general-concept-topic/general-concept-question-manage.component.ts","src/app/general-concept-topic/general-concept-topic.module.ts","src/app/general-concept-topic/general-concept-topic.route.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"col-12 filterbg my-4 rounded\\\">\\r\\n    <div class=\\\"filtericon font-20\\\">\\r\\n        <i class=\\\"fa fa-filter\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"row d-flex justify-content-start align-items-center\\\">\\r\\n        <div class=\\\"col-xxl-3 mb-3\\\">\\r\\n            <ng-select [items]=\\\"allGrades\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"name\\\"\\r\\n                placeholder=\\\"Select grade\\\" [(ngModel)]=\\\"selectedGeneralSubjectGrade\\\"\\r\\n                (change)=\\\"onGeneralSubjectGradeChange()\\\">\\r\\n            </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"col-xxl-3 mb-3\\\">\\r\\n            <ng-select [items]=\\\"subjects\\\" bindLabel=\\\"title\\\" placeholder=\\\"Select subject\\\" [(ngModel)]=\\\"selectedSubject\\\">\\r\\n            </ng-select>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-end pb-3 row\\\">\\r\\n        <div class=\\\"col-xxl-2\\\">\\r\\n            <button class=\\\"btn btn-success float-right waves-effect waves-light\\\" (click)=\\\"loadSubjectTree()\\\">\\r\\n                <i class=\\\"fa fa-filter mr-2\\\"></i>Apply\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xxl-4 mb-3 py-3\\\">\\r\\n        <div class=\\\"d-flex justify-content-start mb-2\\\" *ngIf=\\\"subjectTree.length > 1\\\">\\r\\n            <div class=\\\"btn btn-primary mr-2\\\" (click)=\\\"toggleTreeNodes()\\\">\\r\\n                <i class=\\\"fa fa-clone mr-2\\\"></i>\\r\\n                <span *ngIf=\\\"enableExpandNode === false\\\">\\r\\n                    Expand all\\r\\n                </span>\\r\\n                <span *ngIf=\\\"enableExpandNode === true\\\">\\r\\n                    Collapse all\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tree-scroll\\\">\\r\\n            <div id=\\\"treeView\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xxl-8 mb-3 py-3\\\">\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-start badge-lightBlue rounded p-2 mb-2\\\" *ngIf=\\\"subjectTree.length > 1\\\">\\r\\n            <div>\\r\\n                NOTE : <i class=\\\"fa fa-book ml-2\\\"></i> - Subject,<i class=\\\"fa fa-sitemap ml-2\\\"></i> - Concept,\\r\\n                <i class=\\\"fa fa-file ml-2\\\"></i> - Topic, <i class=\\\"fa fa-times text-danger ml-2\\\"></i> - No question is\\r\\n                mapped\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'root'\\\">\\r\\n            <p><b>Subject name</b></p>\\r\\n            <p>{{nodeName}}</p>\\r\\n            <p><b>Subject description</b></p>\\r\\n            <p>{{nodeDescription}}</p>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'concept'\\\">\\r\\n            <div class=\\\"w-100\\\">\\r\\n                <p><b>Concept description</b></p>\\r\\n                <p class=\\\"mb-2\\\">{{nodeDescription}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex align-items-start flex-wrap justify-content-md-between justify-content-lg-end w-100\\\">\\r\\n                <div class=\\\"btn btn-info mb-2 mr-2\\\" (click)=\\\"openPreviewQuestionModal()\\\" *ngIf=\\\"questions.length > 0\\\">\\r\\n                    <i class=\\\"fa fa-list-alt mr-2\\\"></i> Preview questions\\r\\n                    <span class=\\\"badge badge-light\\\">{{questions.length}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"btn btn-success mb-2 mr-2\\\" (click)=\\\"openSimulateQuestionModal()\\\"\\r\\n                    *ngIf=\\\"questions.length > 0\\\">\\r\\n                    <i class=\\\"fa fa-cogs mr-2\\\"></i> Simulate questions\\r\\n                    <span class=\\\"badge badge-light\\\">{{questions.length}}</span>\\r\\n                </div>\\r\\n                <a class=\\\"btn btn-primary text-white mb-2 mr-2\\\" target=\\\"_blank\\\"\\r\\n                    [routerLink]=\\\"['/general-concept-and-topic',topicId,'general-topic-question-create']\\\">\\r\\n                    <i class=\\\"fa fa-plus-circle mr-2\\\"></i> Create new question\\r\\n                </a>\\r\\n                <div class=\\\"btn btn-warning text-white mb-2\\\" (click)=\\\"loadUpdatedTopicQuestions()\\\">\\r\\n                    <i class=\\\"fa fa-refresh mr-2\\\"></i> Refresh\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"accordion\\\" id=\\\"questions\\\">\\r\\n                <div class=\\\"mb-2 acd-group\\\" *ngFor=\\\"let question of questions;let index=index\\\">\\r\\n                    <div class=\\\"card-header border\\\">\\r\\n                        <h5 class=\\\"mb-0\\\">\\r\\n                            <a href=\\\"#questionDetail{{question.id}}\\\"\\r\\n                                class=\\\"btn-block text-left text-muted acd-heading collapsed d-flex\\\"\\r\\n                                data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\">\\r\\n                                <div style=\\\"width: 99%;\\\" [MathJax]=\\\"question.questionText\\\">\\r\\n                                </div>\\r\\n                            </a>\\r\\n                        </h5>\\r\\n                    </div>\\r\\n                    <div id=\\\"questionDetail{{question.id}}\\\" class=\\\"collapse\\\" data-parent=\\\"#questions\\\">\\r\\n                        <div class=\\\"card-body p-3\\\">\\r\\n                            <div class=\\\"d-flex justify-content-between mb-2\\\">\\r\\n                                <div>\\r\\n                                    <b>Question type</b> : {{question.questionType}}\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <b>Question category</b> : {{question.questionCategory}}\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <b>Completexity level</b> : {{question.complexityLevel}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xxl-4 p-0 mb-2\\\">\\r\\n                                <ng-select [items]=\\\"topicsList\\\" [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"text\\\"\\r\\n                                    placeholder=\\\"Select topic\\\" [(ngModel)]=\\\"question.mappedTopic\\\">\\r\\n                                </ng-select>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex justify-content-end w-100\\\">\\r\\n                                <a class=\\\"btn btn-info  mr-2 mb-2 d-flex justify-content-center align-items-center\\\"\\r\\n                                    target=\\\"_blank\\\"\\r\\n                                    [routerLink]=\\\"['/general-concept-and-topic', question.id, 'general-topic-question-view' ]\\\">\\r\\n                                    <i class=\\\"fa fa-eye mr-2\\\"></i> View\\r\\n                                </a>\\r\\n                                <a class=\\\"btn btn-success mr-2 mb-2 d-flex justify-content-center align-items-center\\\"\\r\\n                                    target=\\\"_blank\\\"\\r\\n                                    [routerLink]=\\\"['/general-concept-and-topic', question.id, 'general-topic-question-edit' ]\\\">\\r\\n                                    <i class=\\\"fa fa-edit mr-2\\\"></i> Edit\\r\\n                                </a>\\r\\n                                <a class=\\\"btn btn-danger mr-2 mb-2 d-flex justify-content-center align-items-center\\\"\\r\\n                                    (click)=\\\"deleteTopicQuestions(question.id)\\\">\\r\\n                                    <i class=\\\"fa fa-trash mr-2\\\"></i> Delete\\r\\n                                </a>\\r\\n                                <a class=\\\"btn btn-success mb-2 d-flex justify-content-center align-items-center\\\"\\r\\n                                    (click)=\\\"updateQuestion()\\\">\\r\\n                                    <i class=\\\"fa fa-save mr-2\\\"></i> Save\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'topic'\\\">\\r\\n            <div class=\\\"w-100\\\">\\r\\n                <p><b>Topic name</b></p>\\r\\n                <p class=\\\"mb-2\\\">{{nodeName}}</p>\\r\\n                <p><b>Topic description</b></p>\\r\\n                <p class=\\\"mb-2\\\">{{nodeDescription}}</p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal\\\" id=\\\"simulateQuestionModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"simulateQuestionModal\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-notify\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header bg-warning d-flex align-items-center\\\">\\r\\n                <h5 class=\\\"modal-title text-white\\\">\\r\\n                    Simulate question - {{nodeName}}\\r\\n                </h5>\\r\\n                <div class=\\\"close btn btn-xl\\\" (click)=\\\"closeSimulateQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div id=\\\"questionSimulateIndicators\\\" class=\\\"carousel slide carousel-fade\\\" data-ride=\\\"carousel\\\"\\r\\n                    data-interval=\\\"false\\\">\\r\\n                    <div class=\\\"carousel-inner\\\">\\r\\n                        <div class=\\\"carousel-item\\\" [ngClass]=\\\"{'active': questionIndex === 0}\\\"\\r\\n                            *ngFor=\\\"let questiondata of topicQuestions;let questionIndex = index;\\\">\\r\\n                            <div\\r\\n                                *ngIf=\\\"questiondata.questionType === 'MCQ_SINGLE' || questiondata.questionType === 'MCQ_MULTIPLE' || questiondata.questionType === 'MCQ_TRUE_FALSE'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row mb-3 p-3 text-capitalize\\\">\\r\\n                                    <div class=\\\"col-lg-6 col-md-12 d-flex justify-content-start mb-2\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices;let i = index\\\">\\r\\n                                        <div class=\\\"radio\\\" *ngIf=\\\"questiondata.questionType !== 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answer\\\"\\r\\n                                                (change)=\\\"onSelectMCQSingleAnswer(questiondata.id,choice.ChoiceId)\\\">\\r\\n                                            <label for=\\\"{{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"checkbox\\\" *ngIf=\\\"questiondata.questionType === 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answers\\\"\\r\\n                                                (click)=\\\"onSelectMCQMultipleAnswer(questiondata.id,choice.ChoiceId,$event)\\\">\\r\\n                                            <label for=\\\" {{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <label for=\\\"{{choice.ChoiceId}}\\\"\\r\\n                                            [MathJax]=\\\"choice.ChoiceText  | sanitizeHtml\\\"></label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_MATCH_LIST'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div cdkDropListGroup>\\r\\n                                    <div class=\\\"example-container d-flex justify-content-between flex-nowrap mb-2\\\">\\r\\n                                        <div class=\\\"mcq-left mr-2\\\">\\r\\n                                            <div class=\\\"match-list\\\" data-value=\\\"questiondata.choices\\\">\\r\\n                                                <div class=\\\"list-box\\\" *ngFor=\\\"let item of questiondata.choices\\\"\\r\\n                                                    [MathJax]=\\\"item.ChoiceText  | sanitizeHtml\\\"></div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <!-- <div class=\\\"line-circle w-auto\\\" *ngFor=\\\"let item of viewModel.Choices\\\" id=\\\"{{item}}\\\"></div> -->\\r\\n                                        <div class=\\\"mcq-right ml-2\\\">\\r\\n                                            <div cdkDropList [cdkDropListData]=\\\"questiondata.options\\\" class=\\\"match-list\\\"\\r\\n                                                (cdkDropListDropped)=\\\"updatedDropList(questiondata.id, $event)\\\">\\r\\n                                                <div class=\\\"list-box\\\" *ngFor=\\\"let item of questiondata.options\\\" cdkDrag\\r\\n                                                    [MathJax]=\\\"item.OptionText  | sanitizeHtml\\\">\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_CHOICE_MATRIX'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <table class=\\\"table-matrix my-2 text-capitalize\\\">\\r\\n                                    <tr class=\\\"bg-lightgray\\\">\\r\\n                                        <td></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"option.OptionText | sanitizeHtml\\\"></span>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr style=\\\"background: none !important;\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices\\\">\\r\\n                                        <td><span [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></span></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <div class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId+option.OptionId\\\"\\r\\n                                                    name=\\\"{{ choice.ChoiceId }}\\\"\\r\\n                                                    (click)=\\\"onSelectChoiceMatrixAnswer(questiondata.id,choice.ChoiceId, option.OptionId)\\\">\\r\\n                                                <label for=\\\"{{choice.ChoiceId+option.OptionId}}\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                            <div class=\\\"w-100 d-flex justify-content-end align-self-center my-2\\\">\\r\\n                                <div class=\\\"btn btn-danger mb-2\\\" href=\\\"#questionSimulateIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"prev\\\" *ngIf=\\\"questionIndex !== 0\\\" (click)=\\\"previousQuestion()\\\">\\r\\n                                    <i class=\\\"fa fa-arrow-left mr-2\\\"></i>Previous\\r\\n                                </div>\\r\\n                                <div class=\\\"btn btn-info mx-2 mb-2\\\" (click)=\\\"checkAnswerStatus(questiondata.id)\\\">\\r\\n                                    <i class=\\\"fa fa-check mr-2\\\"></i>Check answer\\r\\n                                </div>\\r\\n                                <div class=\\\"btn btn-success mb-2\\\" href=\\\"#questionSimulateIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"next\\\" *ngIf=\\\"questionIndex !== topicQuestions.length - 1\\\"\\r\\n                                    (click)=\\\"nextQuestion()\\\">\\r\\n                                    Next<i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <div class=\\\"btn btn-danger\\\" (click)=\\\"closeSimulateQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times mr-2\\\"></i> Close\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal\\\" id=\\\"previewQuestionModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"previewQuestionModal\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-notify\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header bg-warning d-flex align-items-center\\\">\\r\\n                <h5 class=\\\"modal-title text-white\\\">\\r\\n                    Preview question - {{nodeName}}\\r\\n                </h5>\\r\\n                <div class=\\\"close btn btn-xl\\\" (click)=\\\"closePreviewQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div id=\\\"questionPreviewIndicators\\\" class=\\\"carousel slide carousel-fade\\\" data-ride=\\\"carousel\\\"\\r\\n                    data-interval=\\\"false\\\">\\r\\n                    <div class=\\\"carousel-inner\\\">\\r\\n                        <div class=\\\"carousel-item\\\" [ngClass]=\\\"{'active': questionIndex === 0}\\\"\\r\\n                            *ngFor=\\\"let questiondata of topicQuestions;let questionIndex = index;\\\">\\r\\n                            <div\\r\\n                                *ngIf=\\\"questiondata.questionType === 'MCQ_SINGLE' || questiondata.questionType === 'MCQ_MULTIPLE' || questiondata.questionType === 'MCQ_TRUE_FALSE'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question  | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row mb-3 p-3 text-capitalize\\\">\\r\\n                                    <div class=\\\"col-lg-6 col-md-12 d-flex justify-content-start mb-2\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices;let i = index\\\">\\r\\n                                        <div class=\\\"radio\\\" *ngIf=\\\"questiondata.questionType !== 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answer\\\"\\r\\n                                                [answers]=\\\"questiondata.answers\\\" disabled readonly>\\r\\n                                            <label for=\\\"{{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"checkbox\\\" *ngIf=\\\"questiondata.questionType === 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answers\\\" disabled\\r\\n                                                readonly [answers]=\\\"questiondata.answers\\\">\\r\\n                                            <label for=\\\" {{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <label for=\\\"{{choice.ChoiceId}}\\\"\\r\\n                                            [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mb-3 font-18\\\">\\r\\n                                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                                        <span class=\\\"text-success\\\">Answer&nbsp;:&nbsp;</span><span class=\\\"text-dark\\\"\\r\\n                                            *ngFor=\\\"let answer of questiondata.answers;let checkIndex =index\\\">\\r\\n                                            <span [MathJax]=\\\"answer | sanitizeHtml\\\"></span>\\r\\n                                            {{checkIndex  === questiondata.answers.length - 1? ' ' : ','}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_MATCH_LIST'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <ng-container *ngFor=\\\"let answer of questiondata.answers;\\\">\\r\\n                                    <div class=\\\"choice-container\\\">\\r\\n                                        <div class=\\\"item\\\">\\r\\n                                            <div class=\\\"choice--group\\\">\\r\\n                                                <div class=\\\"choice--label\\\">\\r\\n                                                    <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"line-circle\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"item\\\">\\r\\n                                            <div class=\\\"drag--container\\\">\\r\\n                                                <div class=\\\"choice--editor option--container zone\\\" class=\\\"option--item\\\"\\r\\n                                                    [MathJax]=\\\"answer.optionName | sanitizeHtml\\\">\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </ng-container>\\r\\n                                <div class=\\\"mb-3 font-18\\\">\\r\\n                                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                                        <span class=\\\"text-success\\\">Answer&nbsp;:&nbsp;</span><span\\r\\n                                            class=\\\"d-flex text-dark flex-nowrap\\\"\\r\\n                                            *ngFor=\\\"let answer of questiondata.answers;let checkIndex =index\\\">\\r\\n                                            <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span> <span>-</span>\\r\\n                                            <span [MathJax]=\\\"answer.optionName | sanitizeHtml\\\"></span>\\r\\n                                            {{checkIndex  === questiondata.answers.length - 1? ' ' : ' ,'}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_CHOICE_MATRIX'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <table class=\\\"table-matrix my-2 text-capitalize\\\">\\r\\n                                    <tr class=\\\"bg-lightgray\\\">\\r\\n                                        <td></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"option.OptionText | sanitizeHtml\\\"></span>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr style=\\\"background: none !important;\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices\\\">\\r\\n                                        <td><span [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></span></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <div class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId+option.OptionId\\\"\\r\\n                                                    name=\\\"{{ choice.ChoiceId }}\\\" disabled readonly>\\r\\n                                                <label for=\\\"{{choice.ChoiceId+option.OptionId}}\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                                <div class=\\\"mb-3 font-18\\\">\\r\\n                                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                                        <span class=\\\"text-success\\\">Answer&nbsp;:&nbsp;</span><span\\r\\n                                            class=\\\"d-flex text-dark flex-nowrap\\\"\\r\\n                                            *ngFor=\\\"let answer of questiondata.answers;let checkIndex =index\\\">\\r\\n                                            <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span> <span>-</span>\\r\\n                                            <span [MathJax]=\\\"answer.optionName | sanitizeHtml\\\"></span>\\r\\n                                            {{checkIndex  === questiondata.answers.length - 1? ' ' : ','}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"w-100 d-flex justify-content-end align-self-center my-2\\\">\\r\\n                                <div class=\\\"btn btn-danger mb-2\\\" href=\\\"#questionPreviewIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"prev\\\" *ngIf=\\\"questionIndex !== 0\\\">\\r\\n                                    <i class=\\\"fa fa-arrow-left mr-2\\\"></i>Previous\\r\\n                                </div>\\r\\n                                <div class=\\\"btn btn-success ml-2  mb-2\\\" href=\\\"#questionPreviewIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"next\\\" *ngIf=\\\"questionIndex !== topicQuestions.length - 1\\\">\\r\\n                                    Next<i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <div class=\\\"btn btn-danger\\\" (click)=\\\"closePreviewQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times mr-2\\\"></i> Close\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, AfterViewInit } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\nimport { IGeneralTopicQuestion } from '../shared/model/content/general-topic.question.model';\r\nimport { Router } from '@angular/router';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { GeneralConceptAndTopicService } from './general-concept-topic.service';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { QuestionBuilderService } from '../question-builder/question-builder.service';\r\nimport { IGeneralSubject } from '../shared/model/content/general-subject.model';\r\nimport { GeneralSubjectService } from '../general-subject/general-subject.service';\r\nimport { moveItemInArray, CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { MatchList } from '../question-builder/matchlist/matchlist.component';\r\nimport { ITopicAllDetails } from '../shared/model/content/topic-all-details.model';\r\nimport { CoreErrorHandler } from '../shared/error-handler/error-handler.service';\r\nimport { ACTIVE } from '../shared/constants/common.constants';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./general-concept-question-manage.component.html\",\r\n    providers: [GeneralConceptAndTopicService, CoreErrorHandler]\r\n})\r\nexport class GeneralConceptQuestionManageComponent implements OnInit, AfterViewInit {\r\n    subjects: IGeneralTopicQuestion[];\r\n    subjectTree: IGeneralSubject[] = [];\r\n    questions: any[] = [];\r\n    topicQuestions: any[] = [];\r\n    questionResources: any[] = [];\r\n    selectedAnswer: any[] = [];\r\n    topicsList: any[] = [];\r\n    allGrades: any[] = [];\r\n    nodeType: string;\r\n    nodeName: string;\r\n    nodeDescription: string;\r\n    topicId: number;\r\n    selectedSubject: any;\r\n    selectedGeneralSubjectGrade: any;\r\n    enableExpandNode: boolean;\r\n    tableAction: boolean;\r\n\r\n    constructor(\r\n        public _router: Router,\r\n        private generalSubjectService: GeneralSubjectService,\r\n        private generalTopicQuestionService: GeneralConceptAndTopicService,\r\n        public pluginService: PluginService,\r\n        public questionBuilderService: QuestionBuilderService,\r\n        public errorHandler: CoreErrorHandler\r\n    ) {\r\n        this.enableExpandNode = false;\r\n        this.tableAction = true;\r\n        this.allGrades = [\r\n            {\r\n                \"id\": 1,\r\n                \"name\": 1\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"name\": 2\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"name\": 3\r\n            },\r\n            {\r\n                \"id\": 4,\r\n                \"name\": 4\r\n            },\r\n            {\r\n                \"id\": 5,\r\n                \"name\": 5\r\n            },\r\n            {\r\n                \"id\": 6,\r\n                \"name\": 6\r\n            },\r\n            {\r\n                \"id\": 7,\r\n                \"name\": 7\r\n            },\r\n            {\r\n                \"id\": 8,\r\n                \"name\": 8\r\n            },\r\n            {\r\n                \"id\": 9,\r\n                \"name\": 9\r\n            },\r\n            {\r\n                \"id\": 10,\r\n                \"name\": 10\r\n            },\r\n            {\r\n                \"id\": 11,\r\n                \"name\": 11\r\n            },\r\n            {\r\n                \"id\": 12,\r\n                \"name\": 12\r\n            }\r\n        ];\r\n        this.selectedGeneralSubjectGrade = null;\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    protected onError(errRes: HttpErrorResponse) {\r\n        this.errorHandler.handleError(errRes);\r\n    }\r\n\r\n    showConceptAndTopicDetails() {\r\n        var localThisObj = this;\r\n        $('#treeView')\r\n            .on('changed.jstree', function (e, data) {\r\n                var i, j, conceptId;\r\n                for (i = 0, j = data.selected.length; i < j; i++) {\r\n                    localThisObj.nodeType = data.node.type;\r\n                    if (localThisObj.nodeType === \"root\") {\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                    }\r\n                    else if (localThisObj.nodeType === \"concept\") {\r\n                        conceptId = data.node.id;\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                        localThisObj.getTopicsList(conceptId);\r\n                    } else if (localThisObj.nodeType === \"topic\") {\r\n                        localThisObj.topicId = data.node.data.id;\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                        localThisObj.questions = [];\r\n                        localThisObj.getTopicQuestionsList(localThisObj.topicId);\r\n                    } else {\r\n                        localThisObj.nodeType = \"\";\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    getTopicsList(conceptId) {\r\n        let conceptChildrenList: any[];\r\n        conceptChildrenList = this.subjectTree.filter(item => item.parent === conceptId);\r\n        this.topicsList = conceptChildrenList.filter(item => item.type === 'topic');\r\n    }\r\n\r\n    loadUpdatedTopicQuestions() {\r\n        this.getTopicQuestionsList(this.topicId);\r\n    }\r\n\r\n    getTopicQuestionsList(topicId: number) {\r\n        this.generalTopicQuestionService.getTopicQuestionList(topicId).subscribe(\r\n            (res: HttpResponse<IGeneralTopicQuestion>) => this.assignResponseToQuestionList(res.body),\r\n            (res: HttpErrorResponse) => this.onError(res)\r\n        )\r\n    }\r\n\r\n    protected assignResponseToQuestionList(data: ITopicAllDetails) {\r\n        let questionDetails: any[] = [], question, complexityLevel: string, questionType;\r\n        this.questions = [];\r\n        this.questionResources = data.questions;\r\n        if (this.questionResources.length > 0) {\r\n            for (let i = 0; i < this.questionResources.length; i++) {\r\n                questionDetails.push(this.questionBuilderService.convertStringToJson(this.questionResources[i].contentJson));\r\n                question = questionDetails[i].Question;\r\n                if (this.questionResources[i].complexityLevel === 1) {\r\n                    complexityLevel = \"Low\";\r\n                } else if (this.questionResources[i].complexityLevel === 2) {\r\n                    complexityLevel = \"Medium\";\r\n                } else if (this.questionResources[i].complexityLevel === 3) {\r\n                    complexityLevel = \"High\";\r\n                } else {\r\n                    complexityLevel = \"\";\r\n                }\r\n                if (questionDetails[i].QuestionType === \"MCQ_SINGLE\") {\r\n                    questionType = \"MCQ single answer\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_MULTIPLE\") {\r\n                    questionType = \"MCQ multiple answers\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_CHOICE_MATRIX\") {\r\n                    questionType = \"Choice matrix\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_TRUE_FALSE\") {\r\n                    questionType = \"MCQ true or false\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_MATCH_LIST\") {\r\n                    questionType = \"MCQ match list\";\r\n                } else {\r\n                    questionType = \"\"\r\n                }\r\n                this.questions.push({\r\n                    id: this.questionResources[i].id,\r\n                    complexityLevel: complexityLevel,\r\n                    questionCategory: this.titleCapitalize(this.questionResources[i].category),\r\n                    questionText: question,\r\n                    questionType: questionType\r\n                })\r\n            }\r\n        }\r\n        this.tableAction = true;\r\n    }\r\n\r\n    titleCapitalize(word: string) {\r\n        if (!word) return word;\r\n        return word[0].toUpperCase() + word.substr(1).toLowerCase();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.showConceptAndTopicDetails();\r\n    }\r\n\r\n    onGeneralSubjectGradeChange() {\r\n        if (this.selectedGeneralSubjectGrade) {\r\n            let grade = this.selectedGeneralSubjectGrade.name;\r\n            let status = ACTIVE;\r\n            this.selectedSubject = null;\r\n            this.generalSubjectService\r\n                .getSubjectListByGrade(grade, status)\r\n                .subscribe(\r\n                    (res: HttpResponse<IGeneralSubject[]>) => this.assignGeneralSubjectList(res.body),\r\n                    (res: HttpErrorResponse) => this.onError(res)\r\n                );\r\n        }\r\n        this.selectedGeneralSubjectGrade = null;\r\n        this.subjects = [];\r\n    }\r\n\r\n    assignGeneralSubjectList(data: IGeneralSubject[]) {\r\n        this.subjects = [];\r\n        this.subjects = data;\r\n    }\r\n\r\n\r\n    loadSubjectTree() {\r\n        if (!this.selectedSubject && !this.selectedGeneralSubjectGrade) {\r\n            this.selectedSubject = null;\r\n            this.selectedGeneralSubjectGrade = null;\r\n            this.pluginService.alertMessage(\"Please select a filter and then apply\", \"error\");\r\n        } else {\r\n            this.subjectTree = [];\r\n            this.pluginService.jsTree(\"#treeView\", this.subjectTree, false);\r\n            let subjectId = this.selectedSubject.id;\r\n            if (subjectId) {\r\n                this.generalSubjectService.getSubjectTreeBySubjectId(subjectId).subscribe(\r\n                    (res: HttpResponse<IGeneralSubject[]>) => this.assignResponsetoTree(res.body),\r\n                    (res: HttpErrorResponse) => this.onError(res)\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    assignResponsetoTree(subject: IGeneralSubject[]) {\r\n        this.subjectTree = [];\r\n        if (subject.length > 0) {\r\n            for (let i = 0; i < subject.length; i++) {\r\n                if (subject[i].data.questionsCount === 0) {\r\n                    subject[i].icon = \"fa fa-times text-danger\";\r\n                }\r\n                this.subjectTree.push(subject[i]);\r\n            }\r\n            this.pluginService.jsTree(\"#treeView\", this.subjectTree, false);\r\n        }\r\n        this.nodeType = \"\";\r\n        this.enableExpandNode = false;\r\n    }\r\n\r\n    removeDuplicateElements(array) {\r\n        var temp = [];\r\n        for (var i = 0; i < array.length; i++) {\r\n            if (temp.indexOf(array[i]) == -1) {\r\n                temp.push(array[i]);\r\n            }\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    deleteTopicQuestions(questionId) {\r\n        var localthisObject = this;\r\n        swal({\r\n            title: \"Are you sure to delete topic question ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm === true) {\r\n                    localthisObject.subscribeToDeleteResponse(localthisObject.generalTopicQuestionService.deleteTopicQuestion(questionId));\r\n                }\r\n            });\r\n    }\r\n\r\n    protected subscribeToDeleteResponse(result: Observable<HttpResponse<IGeneralTopicQuestion>>) {\r\n        result.subscribe((res: HttpResponse<IGeneralTopicQuestion>) => this.onDeleteSuccess(res), (errRes: HttpErrorResponse) => this.onError(errRes));\r\n    }\r\n\r\n    protected onDeleteSuccess(res: HttpResponse<IGeneralTopicQuestion>) {\r\n        this.pluginService.alertMessage(\"Topic content deleted successfully\", \"success\");\r\n        this.questions = [];\r\n        this.getTopicQuestionsList(this.topicId);\r\n        this.tableAction = true;\r\n    }\r\n\r\n    toggleTreeNodes() {\r\n        this.enableExpandNode = !this.enableExpandNode;\r\n        if (this.enableExpandNode) {\r\n            this.pluginService.openJsTreeAllNodes(\"#treeView\");\r\n        } else {\r\n            this.pluginService.closeJsTreeAllNodes(\"#treeView\")\r\n        }\r\n    }\r\n\r\n    openSimulateQuestionModal() {\r\n        this.pluginService.showModalWindow(\"#simulateQuestionModal\");\r\n        this.simulateTopicQuestionList();\r\n    }\r\n\r\n    closeSimulateQuestionModal() {\r\n        this.pluginService.hideModalWindow(\"#simulateQuestionModal\");\r\n    }\r\n\r\n    openPreviewQuestionModal() {\r\n        this.pluginService.showModalWindow(\"#previewQuestionModal\");\r\n        this.previewTopicQuestionList();\r\n    }\r\n\r\n    closePreviewQuestionModal() {\r\n        this.pluginService.hideModalWindow(\"#previewQuestionModal\");\r\n    }\r\n\r\n    protected previewTopicQuestionList() {\r\n        let questionDetails: any, options: any[] = [], answers: any[] = [], choices: any[] = [];\r\n        this.topicQuestions = [];\r\n        for (let i = 0; i < this.questionResources.length; i++) {\r\n            questionDetails = this.questionBuilderService.convertStringToJson(this.questionResources[i].contentJson);\r\n            if (questionDetails.QuestionType === \"MCQ_MATCH_LIST\" || questionDetails.QuestionType === \"MCQ_CHOICE_MATRIX\") {\r\n                answers = []; choices = [];\r\n                options = questionDetails.Options;\r\n                choices = questionDetails.Choices;\r\n                for (let k = 0; k < questionDetails.Answers.length; k++) {\r\n                    answers.push({\r\n                        choiceName: choices.find(item => item.ChoiceId === questionDetails.Answers[k].ChoiceId).ChoiceText,\r\n                        optionName: options.find(item => item.OptionId === questionDetails.Answers[k].OptionId).OptionText\r\n                    })\r\n                }\r\n            } else if (questionDetails.QuestionType === \"MCQ_SINGLE\" || questionDetails.QuestionType === \"MCQ_MULTIPLE\" || questionDetails.QuestionType === \"MCQ_TRUE_FALSE\") {\r\n                options = []; answers = [];\r\n                for (let j = 0; j < questionDetails.Answers.length; j++) {\r\n                    let answerText = questionDetails.Choices.find(item => item.ChoiceId === questionDetails.Answers[j]).ChoiceText;\r\n                    answers.push(answerText);\r\n                    answerText = \"\"\r\n                }\r\n            }\r\n            this.topicQuestions.push({\r\n                id: this.questionResources[i].id,\r\n                question: questionDetails.Question,\r\n                questionType: questionDetails.QuestionType,\r\n                generalTopicId: this.questionResources[i].generalTopicId,\r\n                questionId: this.questionResources[i].id,\r\n                choices: questionDetails.Choices,\r\n                options: options,\r\n                answers: answers\r\n            })\r\n        }\r\n    }\r\n\r\n    protected simulateTopicQuestionList() {\r\n        let questionDetails: MatchList, options: any[] = [], choices: any[] = [];\r\n        this.topicQuestions = [];\r\n        for (let i = 0; i < this.questionResources.length; i++) {\r\n            questionDetails = this.questionBuilderService.convertStringToJson(this.questionResources[i].contentJson);\r\n            if (questionDetails.QuestionType === \"MCQ_MATCH_LIST\" || questionDetails.QuestionType === \"MCQ_CHOICE_MATRIX\") {\r\n                options = this.shuffleArray(questionDetails.Options);\r\n                choices = questionDetails.Choices;\r\n            } else {\r\n                options = [];\r\n                choices = this.shuffleArray(questionDetails.Choices)\r\n            }\r\n            this.topicQuestions.push({\r\n                id: this.questionResources[i].id,\r\n                questionType: questionDetails.QuestionType,\r\n                question: questionDetails.Question,\r\n                generalTopicId: this.questionResources[i].generalTopicId,\r\n                questionId: this.questionResources[i].id,\r\n                choices: choices,\r\n                options: options,\r\n                answers: questionDetails.Answers,\r\n                checkAnswer: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    shuffleArray(array) {\r\n        array.sort(() => Math.random() - 0.5);\r\n        return array\r\n    }\r\n\r\n    public onSelectMCQSingleAnswer(questionId, choiceId) {\r\n        let topicIndex: number;\r\n        topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        for (let i = 0; i < this.topicQuestions[topicIndex].answers.length; i++) {\r\n            if (this.topicQuestions[topicIndex].answers[i] === choiceId) {\r\n                this.topicQuestions[topicIndex].checkAnswer = \"Correct\"\r\n            } else {\r\n                this.topicQuestions[topicIndex].checkAnswer = \"Wrong\"\r\n            }\r\n        }\r\n    }\r\n\r\n    public onSelectMCQMultipleAnswer(questionId, choiceId, event) {\r\n        let topicIndex: number, checked: boolean, choiceIndex: number;\r\n        checked = event.target.checked;\r\n        topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (checked === true) {\r\n            this.selectedAnswer.push(choiceId);\r\n        } else {\r\n            choiceIndex = this.selectedAnswer.findIndex(item => item === choiceId);\r\n            this.selectedAnswer.splice(choiceIndex, 1);\r\n        }\r\n        this.checkMultipleAnswer(topicIndex);\r\n    }\r\n\r\n    checkMultipleAnswer(index) {\r\n        let answers: any[] = this.topicQuestions[index].answers.sort();\r\n        let selectedAnswers: any[] = this.selectedAnswer.sort();\r\n        let duplicateAnswers: any[] = [];\r\n        for (let i = 0; i < answers.length; i++) {\r\n            for (let j = 0; j < selectedAnswers.length; j++) {\r\n                if (answers[i] === selectedAnswers[j]) {\r\n                    duplicateAnswers.push(selectedAnswers[j]);\r\n                    this.topicQuestions[index].checkAnswer = \"Partial\"\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Wrong\"\r\n                }\r\n            }\r\n        }\r\n        if (duplicateAnswers.length > 0) {\r\n            if (duplicateAnswers.length === answers.length) {\r\n                if (JSON.stringify(duplicateAnswers.sort()) === JSON.stringify(selectedAnswers)) {\r\n                    this.topicQuestions[index].checkAnswer = \"Correct\"\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Partial\"\r\n                }\r\n            } else {\r\n                this.topicQuestions[index].checkAnswer = \"Partial\"\r\n            }\r\n        }\r\n    }\r\n\r\n    public onSelectChoiceMatrixAnswer(questionId, choiceId, optionId) {\r\n        let topicIndex: number, index: number;\r\n        topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (this.selectedAnswer.length === 0) {\r\n            this.selectedAnswer = [];\r\n        }\r\n        this.selectedAnswer.push({\r\n            ChoiceId: choiceId,\r\n            OptionId: optionId\r\n        });\r\n        if (this.selectedAnswer.length > 1) {\r\n            for (let i = 0; i < this.selectedAnswer.length; i++) {\r\n                for (let j = i + 1; j < this.selectedAnswer.length; j++) {\r\n                    if (this.selectedAnswer[i].ChoiceId === this.selectedAnswer[j].ChoiceId) {\r\n                        index = this.selectedAnswer.findIndex(item => item.ChoiceId === this.selectedAnswer[i].ChoiceId);\r\n                        this.selectedAnswer.splice(index, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.checkMatrixAndMatchListAnswers(topicIndex);\r\n    }\r\n\r\n    checkAnswerStatus(questionId) {\r\n        let topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (this.topicQuestions[topicIndex].checkAnswer === \"Correct\") {\r\n            this.pluginService.alertMessage(\"Good keep going...Correct answer\", \"success\");\r\n        } else if (this.topicQuestions[topicIndex].checkAnswer === \"Partial\") {\r\n            this.pluginService.alertMessage(\"This is partially correct\", \"warning\");\r\n        } else if (this.topicQuestions[topicIndex].checkAnswer === \"Wrong\") {\r\n            this.pluginService.alertMessage(\"Oops..! this is wrong\", \"error\");\r\n        } else {\r\n            this.pluginService.alertMessage(\"Please select a answer and check it\", \"error\");\r\n        }\r\n    }\r\n\r\n    updatedDropList(questionId, event: CdkDragDrop<string[]>) {\r\n        let topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (event.previousContainer === event.container) {\r\n            moveItemInArray(\r\n                event.container.data,\r\n                event.previousIndex,\r\n                event.currentIndex\r\n            );\r\n            this.selectedAnswer = [];\r\n            for (let i = 0; i < this.topicQuestions[topicIndex].choices.length; i++) {\r\n                for (let j = 0; j < this.topicQuestions[topicIndex].options.length; j++) {\r\n                    if (i === j) {\r\n                        this.selectedAnswer.push({\r\n                            ChoiceId: this.topicQuestions[topicIndex].choices[i].ChoiceId,\r\n                            OptionId: this.topicQuestions[topicIndex].options[j].OptionId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            this.checkMatrixAndMatchListAnswers(topicIndex);\r\n        }\r\n    }\r\n\r\n    checkMatrixAndMatchListAnswers(index) {\r\n        let sortArr1, sortArr2, duplicateAnswers: any[] = [];\r\n        for (let i = 0; i < this.topicQuestions[index].answers.length; i++) {\r\n            for (let j = 0; j < this.selectedAnswer.length; j++) {\r\n                if (this.topicQuestions[index].answers[i].ChoiceId === this.selectedAnswer[j].ChoiceId) {\r\n                    if (this.topicQuestions[index].answers[i].OptionId === this.selectedAnswer[j].OptionId) {\r\n                        duplicateAnswers.push({\r\n                            ChoiceId: this.selectedAnswer[j].ChoiceId,\r\n                            OptionId: this.selectedAnswer[j].OptionId\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Wrong\"\r\n                }\r\n            }\r\n        }\r\n        if (duplicateAnswers.length > 0) {\r\n            sortArr1 = (obj1, obj2) => { return obj1.ChoiceId - obj2.ChoiceId; }\r\n            const sortedArray1: any[] = duplicateAnswers.sort(sortArr1);\r\n            sortArr2 = (obj1, obj2) => { return obj1.ChoiceId - obj2.ChoiceId; }\r\n            const sortedArray2: any[] = this.selectedAnswer.sort(sortArr2);\r\n            if (duplicateAnswers.length === this.topicQuestions[index].answers.length) {\r\n                if (JSON.stringify(sortedArray1) === JSON.stringify(sortedArray2)) {\r\n                    this.topicQuestions[index].checkAnswer = \"Correct\"\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Partial\"\r\n                }\r\n            } else {\r\n                this.topicQuestions[index].checkAnswer = \"Partial\"\r\n            }\r\n        }\r\n    }\r\n\r\n    previousQuestion() {\r\n        this.selectedAnswer = [];\r\n    }\r\n\r\n    nextQuestion() {\r\n        this.selectedAnswer = [];\r\n    }\r\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { generalConceptAndTopicRoute } from './general-concept-topic.route';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgJhipsterModule } from 'ng-jhipster';\r\nimport { SharedModule } from '../shared';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { QuestionBuilderModule } from '../question-builder/question-builder.module';\r\nimport {\r\n    GeneralTopicQuestionManageComponent,\r\n    GeneralTopicContentManageComponent,\r\n    GeneralTopicQuestionCreateComponent,\r\n    GeneralConceptAndTopicService\r\n} from './index';\r\nimport { SyllabusLessonTopicModule } from '../syllabus-lesson-topic/syllabus-lesson-topic.module';\r\nimport { GeneralConceptQuestionManageComponent } from './general-concept-question-manage.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        SharedModule,\r\n        NgJhipsterModule,\r\n        InfiniteScrollModule,\r\n        NgbModule,\r\n        RouterModule.forChild(generalConceptAndTopicRoute),\r\n        QuestionBuilderModule,\r\n        SyllabusLessonTopicModule\r\n    ],\r\n    declarations: [\r\n        GeneralTopicContentManageComponent,\r\n        GeneralTopicQuestionManageComponent,\r\n        GeneralTopicQuestionCreateComponent,\r\n        GeneralConceptQuestionManageComponent\r\n    ],\r\n    providers: [GeneralConceptAndTopicService],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class GeneralConceptAndTopicModule {\r\n\r\n}","import { GeneralTopicQuestionManageComponent } from './general-topic-question-manage.component';\r\nimport { UserRouteAccessService } from '../core';\r\nimport { Routes } from '@angular/router';\r\nimport { GeneralTopicQuestionCreateComponent } from './general-topic-question-create.component';\r\nimport { MCQStandardComponent } from '../question-builder/mcq-standard';\r\nimport { MatchlistComponent } from '../question-builder/matchlist/matchlist.component';\r\nimport { MCQChoiceMatrixComponent } from '../question-builder/mcq-choicematrix';\r\nimport { GeneralTopicContentManageComponent } from './general-topic-content-manage.component';\r\nimport { CurriculumTopicQuestionDetailsComponent } from '../syllabus-lesson-topic/topic-question/topic-question-details.component';\r\nimport { DragAndDropComponent } from '../question-builder/cloze/drag-n-drop/drag-n-drop.component';\r\nimport { CurriculumTopicQuestionUpdateComponent } from '../syllabus-lesson-topic/topic-question/topic-question-update.component';\r\nimport { GeneralConceptQuestionManageComponent } from './general-concept-question-manage.component';\r\n\r\nexport const generalConceptAndTopicRoute: Routes = [\r\n    {\r\n        path: \"\", redirectTo: \"general-topic-question\", pathMatch: \"full\"\r\n    },\r\n    {\r\n        path: 'general-topic-question',\r\n        component: GeneralTopicQuestionManageComponent,\r\n        data: {\r\n            authorities: ['SYSTEM_ADMIN'],\r\n            pageTitle: 'Manage general topic questions'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'general-concept-question',\r\n        component: GeneralConceptQuestionManageComponent,\r\n        data: {\r\n            authorities: ['SYSTEM_ADMIN'],\r\n            pageTitle: 'Manage general concept questions'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/general-topic-question-create',\r\n        component: GeneralTopicQuestionCreateComponent,\r\n        children: [\r\n            {\r\n                path: 'mcqstandard',\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_SINGLE\",\r\n                    title: \"Create\"\r\n                },\r\n            },\r\n            {\r\n                path: \"mcqstandard/:qid\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_SINGLE\",\r\n                    title: \"Edit\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqmultiple\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_MULTIPLE\",\r\n                    mode: \"Create\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqmultiple/:qid\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_MULTIPLE\",\r\n                    mode: \"Edit\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqtruefalse\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_TRUE_FALSE\",\r\n                    title: \"Create\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqtruefalse/:qid\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_TRUE_FALSE\",\r\n                    title: \"Edit\"\r\n                }\r\n            },\r\n            {\r\n                path: 'mcqchoicematrix',\r\n                component: MCQChoiceMatrixComponent,\r\n                data: {\r\n                    title: \"Create\",\r\n                    type: \"MCQ_CHOICE_MATRIX\"\r\n                }\r\n            }, {\r\n                path: 'mcqchoicematrix/:qid',\r\n                component: MCQChoiceMatrixComponent,\r\n                data: {\r\n                    title: \"Edit\",\r\n                    type: \"MCQ_CHOICE_MATRIX\"\r\n                }\r\n            }, {\r\n                path: \"matchlist\",\r\n                component: MatchlistComponent,\r\n                data: {\r\n                    title: \"Create\",\r\n                    type: \"MCQ_MATCH_LIST\"\r\n                }\r\n            },\r\n            {\r\n                path: \"matchlist/:qid\",\r\n                component: MatchlistComponent,\r\n                data: {\r\n                    title: \"Edit\",\r\n                    type: \"MCQ_MATCH_LIST\"\r\n                }\r\n            },\r\n            {\r\n                path: \"clozedrag\",\r\n                component: DragAndDropComponent,\r\n                data: {\r\n                    title: \"Create\",\r\n                    type: \"mcq-drag\"\r\n                }\r\n            },\r\n            {\r\n                path: \"clozedrag/:qid\",\r\n                component: DragAndDropComponent,\r\n                data: {\r\n                    title: \"Edit\",\r\n                    type: \"mcq-drag\"\r\n                }\r\n            }\r\n        ],\r\n        data: {\r\n            authorities: ['SYSTEM_ADMIN'],\r\n            pageTitle: 'Create general topic question'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/general-topic-question-view',\r\n        component: CurriculumTopicQuestionDetailsComponent,\r\n        data: {\r\n            authorities: ['SYSTEM_ADMIN'],\r\n            pageTitle: 'View general topic question'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n\r\n    },\r\n    {\r\n        path: ':id/general-topic-question-edit',\r\n        component: CurriculumTopicQuestionUpdateComponent,\r\n        data: {\r\n            authorities: ['SYSTEM_ADMIN'],\r\n            pageTitle: 'Edit general topic question'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n\r\n    },\r\n    {\r\n        path: 'general-topic-content',\r\n        component: GeneralTopicContentManageComponent,\r\n        data: {\r\n            authorities: ['SYSTEM_ADMIN'],\r\n            pageTitle: 'Manage general video content mapping'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }\r\n];\r\n"],"sourceRoot":"webpack:///","file":"general-concept-topic-general-concept-topic-module-es5.js"}