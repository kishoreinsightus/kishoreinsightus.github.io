{"version":3,"sources":["src/app/general-concept-topic/general-topic-content-manage.component.html","src/app/general-concept-topic/general-topic-question-create.component.html","src/app/general-concept-topic/general-topic-question-manage.component.html","src/app/general-concept-topic/general-concept-topic.module.ts","src/app/general-concept-topic/general-concept-topic.route.ts","src/app/general-concept-topic/general-concept-topic.service.ts","src/app/general-concept-topic/general-topic-content-manage.component.ts","src/app/general-concept-topic/general-topic-question-create.component.ts","src/app/general-concept-topic/general-topic-question-manage.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"col-12 filterbg my-4 rounded\\\">\\r\\n    <div class=\\\"filtericon font-20\\\">\\r\\n        <i class=\\\"fa fa-filter\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"row d-flex justify-content-start align-items-center\\\">\\r\\n        <div class=\\\"col-lg-3 mb-3\\\">\\r\\n            <ng-select [items]=\\\"subjects\\\" bindLabel=\\\"title\\\" placeholder=\\\"Select subject\\\" [(ngModel)]=\\\"selectedSubject\\\">\\r\\n            </ng-select>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-end pb-3 row\\\">\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n            <button class=\\\"btn btn-success float-right waves-effect waves-light\\\" (click)=\\\"loadSubjectTree()\\\">\\r\\n                <i class=\\\"fa fa-filter mr-2\\\"></i>Apply\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xxl-3 mb-3 py-3\\\">\\r\\n        <div class=\\\"d-flex justify-content-start mb-2\\\" *ngIf=\\\"subjectTree.length > 1\\\">\\r\\n            <div class=\\\"btn btn-primary mr-2\\\" (click)=\\\"toggleTreeNodes()\\\">\\r\\n                <i class=\\\"fa fa-clone mr-2\\\"></i>\\r\\n                <span *ngIf=\\\"enableExpandNode === false\\\">\\r\\n                    Expand all\\r\\n                </span>\\r\\n                <span *ngIf=\\\"enableExpandNode === true\\\">\\r\\n                    Collapse all\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div id=\\\"treeView\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xxl-9 mb-3 py-3\\\">\\r\\n        <div *ngIf=\\\"nodeType === 'root'\\\">\\r\\n            <p><b>Subject name</b></p>\\r\\n            <p>{{nodeName}}</p>\\r\\n            <p><b>Subject description</b></p>\\r\\n            <p>{{nodeDescription}}</p>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'concept'\\\">\\r\\n            <p><b>Concept name</b></p>\\r\\n            <p>{{nodeName}}</p>\\r\\n            <p><b>Concept description</b></p>\\r\\n            <p>{{nodeDescription}}</p>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'topic'\\\">\\r\\n            <div class=\\\"d-flex w-100 justify-content-between align-items-center\\\">\\r\\n                <div>\\r\\n                    <h4 class=\\\"font-24 mb-2\\\">{{nodeName}}</h4>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex align-items-start justify-content-end\\\">\\r\\n                    <div class=\\\"btn btn-primary text-white mb-2\\\" (click)=\\\"addContent()\\\">\\r\\n                        <i class=\\\"fa fa-plus-circle mr-2\\\"></i> Add content\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"d-flex flex-wrap w-100\\\" *ngIf=\\\"topicContents\\\">\\r\\n                <table class=\\\"table table-hover table-striped table-bordered nowrap w-100\\\" id=\\\"dragTable\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Select</th>\\r\\n                            <th>Order number</th>\\r\\n                            <th>Title</th>\\r\\n                            <th>Active Web URL</th>\\r\\n                            <th>Actions</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody id=\\\"dragBody\\\">\\r\\n                        <tr *ngFor=\\\"let topiccontent of topicContents;trackBy: trackId;let topicIndex = index\\\">\\r\\n                            <td data-column=\\\"Select\\\" title=\\\"{{topiccontent.id}}\\\">\\r\\n                                <div class=\\\"checkbox\\\">\\r\\n                                    <input type=\\\"checkbox\\\" id=\\\"{{topiccontent.id}}\\\"\\r\\n                                        (change)=\\\"checkSelectedContents($event)\\\" class=\\\"checkAll\\\">\\r\\n                                    <label for=\\\"{{topiccontent.id}}\\\"></label>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                            <td data-column=\\\"Order number\\\" class=\\\"index\\\">\\r\\n                                {{topiccontent.orderNumber}}\\r\\n                            </td>\\r\\n                            <td data-column=\\\"Title\\\">\\r\\n                                {{topiccontent.content.title}}\\r\\n                            </td>\\r\\n                            <td data-column=\\\"Active Web URL\\\">\\r\\n                                <a class=\\\"btn btn-link text-ellipsis\\\" href=\\\"{{topiccontent.content.webUrl}}\\\"\\r\\n                                    target=\\\"_blank\\\">\\r\\n                                    {{topiccontent.content.webUrl}}\\r\\n                                </a>\\r\\n                            </td>\\r\\n                            <td data-column=\\\"Actions\\\">\\r\\n                                <div>\\r\\n                                    <a class=\\\"btn btn-outline-info mr-1 mb-1 btn-icon-size\\\"\\r\\n                                        (click)=\\\"viewContent(topiccontent.content.id)\\\">\\r\\n                                        <i class=\\\"fa fa-eye\\\"></i>\\r\\n                                    </a>\\r\\n                                    <a class=\\\"btn btn-outline-success  mr-1 mb-1 btn-icon-size\\\"\\r\\n                                        (click)=\\\"editContent(topiccontent.content.id)\\\">\\r\\n                                        <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <div class=\\\"mt-3 d-flex w-100 justify-content-end\\\" *ngIf=\\\"topicContents.length > 0\\\">\\r\\n                    <button class=\\\"btn btn-danger mr-2\\\" [disabled]=\\\"tableAction\\\" (click)=\\\"resetSelectedTopicContent()\\\">\\r\\n                        <i class=\\\"fa fa-times mr-2\\\"></i>Reset\\r\\n                    </button>\\r\\n                    <button class=\\\"btn btn-danger mr-2\\\" [disabled]=\\\"tableAction\\\" (click)=\\\"deleteTopicContents()\\\">\\r\\n                        <i class=\\\"fa fa-trash mr-2\\\"></i>Delete\\r\\n                    </button>\\r\\n                    <button class=\\\"btn btn-success\\\" [disabled]=\\\"updateAction\\\"\\r\\n                        (click)=\\\"updateTopicContentsWithOrderNumber()\\\">\\r\\n                        <i class=\\\"fa fa-save mr-2\\\"></i>Update order\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal slideInRight\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" id=\\\"generalTopicContent\\\">\\r\\n    <div class=\\\"modal-dialog modal-full-height modal-right modal-notify\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\" [formGroup]=\\\"topicContentForm\\\">\\r\\n            <div class=\\\"modal-header bg-warning d-flex align-items-center\\\">\\r\\n                <h5 class=\\\"modal-title text-white\\\">\\r\\n                    {{modalTitleName}} content\\r\\n                </h5>\\r\\n                <div class=\\\"close btn btn-xl\\\" (click)=\\\"closeTopicContentModalWithOutSaving()\\\">\\r\\n                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div *ngIf=\\\"modalTitleName === 'Add' || modalTitleName === 'Edit'\\\">\\r\\n                    <div class=\\\"form-group mb-2\\\">\\r\\n                        <label class=\\\"col-form-label\\\">Title\\r\\n                        </label>\\r\\n                        <input type=\\\"text\\\" placeholder=\\\"Enter content name (min length: 3 and max length: 75)\\\"\\r\\n                            class=\\\"form-control\\\" formControlName=\\\"contentTitle\\\" minlength=\\\"3\\\" maxlength=\\\"75\\\"\\r\\n                            inputRestriction=\\\"alphabetsNumbersWithMinus\\\" />\\r\\n                        <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                            Allowed characters - Alphabets, Numbers and One special character (-)\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\" form-group mb-2\\\">\\r\\n                        <label class=\\\"col-form-label\\\">Description <span class=\\\"text-muted\\\">(Optional)</span>\\r\\n                        </label>\\r\\n                        <textarea class=\\\"form-control description-form\\\"\\r\\n                            placeholder=\\\"Enter description (min length: 3 and max length: 250)\\\"\\r\\n                            formControlName=\\\"contentDescription\\\"></textarea>\\r\\n                        <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                            Allowed characters - Alphabets, Numbers and Special characters\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- <div class=\\\"form-group mb-2\\\">\\r\\n                    <label class=\\\"col-form-label\\\">Content type\\r\\n                    </label>\\r\\n                    <ng-select [items]=\\\"contentType\\\" [disabled]=\\\"disableDropdown\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        bindLabel=\\\"name\\\" placeholder=\\\"Select content type\\\" [(ngModel)]=\\\"selectedContentType\\\"\\r\\n                        [searchable]=\\\"false\\\">\\r\\n                    </ng-select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group mb-2\\\" *ngIf=\\\"selectedContentType\\\">\\r\\n                    <label class=\\\"col-form-label\\\">Content source\\r\\n                    </label>\\r\\n                    <ng-select [items]=\\\"contentSource\\\" [disabled]=\\\"disableDropdown\\\"\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select content source\\\"\\r\\n                        [(ngModel)]=\\\"selectedContentSource\\\" [searchable]=\\\"false\\\">\\r\\n                    </ng-select>\\r\\n                </div> -->\\r\\n                    <!-- <div *ngIf=\\\"selectedContentSource\\\"> -->\\r\\n                    <!-- <div *ngIf=\\\"selectedContentSource.name === 'File upload'\\\">\\r\\n                        <div class=\\\"form-group mb-2\\\" *ngIf=\\\"selectedContentSource.name === 'File upload'\\\">\\r\\n                            <label class=\\\"col-form-label\\\">File\\r\\n                            </label>\\r\\n                            <div class=\\\"custom-file\\\" *ngIf=\\\"selectedContentType.tag === 'DOCUMENT'\\\">\\r\\n                                <input type=\\\"file\\\" (change)=\\\"onDocumentFileChanges($event)\\\" id=\\\"documentFile\\\" />\\r\\n                                <label class=\\\"custom-file-label\\\" for=\\\"documentFile\\\">\\r\\n                                    <i>\\r\\n                                        {{fileName}}\\r\\n                                    </i></label>\\r\\n                            </div>\\r\\n                            <div class=\\\"custom-file\\\" *ngIf=\\\"selectedContentType.tag === 'VIDEO'\\\">\\r\\n                                <input type=\\\"file\\\" alife-file-to-base64 (onFileChanged)=\\\"onVideoFileChanges($event)\\\"\\r\\n                                    id=\\\"videoFile\\\" />\\r\\n                                <label class=\\\"custom-file-label\\\" for=\\\"videoFile\\\">\\r\\n                                    <i>\\r\\n                                        {{fileName}}\\r\\n                                    </i></label>\\r\\n                            </div>\\r\\n                            <div class=\\\" d-flex w-100\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"selectedContentType.tag === 'DOCUMENT'\\\">\\r\\n                                    Only PDF will allow Max file size - 100 MB\\r\\n                                </div>\\r\\n                                <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"selectedContentType.tag === 'VIDEO'\\\">\\r\\n                                    Max file size - 200 MB\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex w-100 my-2\\\">\\r\\n                                <div *ngIf=\\\"selectedContentType.tag === 'VIDEO'\\\">\\r\\n                                    <div *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                        <button class=\\\"btn btn-warning mr-2\\\" (click)=\\\"uploadVideoFile()\\\"\\r\\n                                            *ngIf=\\\"!uploadedFileName && !uploadedFilePath\\\">\\r\\n                                            <i class=\\\"fa fa-upload mr-2\\\"></i>Upload file\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"selectedContentType.tag === 'DOCUMENT'\\\">\\r\\n                                    <div *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                        <button class=\\\"btn btn-warning mr-2\\\" (click)=\\\"uploadDocumentFile()\\\"\\r\\n                                            *ngIf=\\\"!uploadedFileName && !uploadedFilePath\\\">\\r\\n                                            <i class=\\\"fa fa-upload mr-2\\\"></i>Upload file\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"showFileAction\\\" class=\\\"d-flex justify-content-between\\\">\\r\\n                                    <a class=\\\"btn btn-info mr-2\\\" (click)=\\\"downloadFile()\\\" *ngIf=\\\"uploadedFileName\\\">\\r\\n                                        <i class=\\\"fa fa-download mr-2\\\"></i>{{uploadedFileName}}\\r\\n                                    </a>\\r\\n                                    <div *ngIf=\\\" modalTitleName !=='View'\\\">\\r\\n                                        <a class=\\\" btn btn-danger\\\" (click)=\\\"deleteUploadedFile()\\\"\\r\\n                                            *ngIf=\\\"uploadedFileName\\\">\\r\\n                                            <i class=\\\"fa fa-trash mr-2\\\"></i>Delete file\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n                    <!-- <div *ngIf=\\\"selectedContentSource.name !== 'File upload'\\\"> -->\\r\\n                    <div class=\\\"border p-2 mb-2\\\">\\r\\n                        <div class=\\\"form-group mb-2\\\">\\r\\n                            <label class=\\\"col-form-label\\\">Web URL\\r\\n                            </label>\\r\\n                            <input type=\\\"url\\\" class=\\\"form-control\\\"\\r\\n                                placeholder=\\\"Enter web url (minlength: 3 and maxlength: 2048)\\\" minlength=\\\"3\\\"\\r\\n                                maxlength=\\\"2048\\\" formControlName=\\\"webUrl1\\\">\\r\\n                            <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                Allowed characters - Alphabets, Numbers and Special characters\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group mb-2\\\">\\r\\n                            <label class=\\\"col-form-label\\\">Publisher\\r\\n                            </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                placeholder=\\\"Enter publisher (minlength: 3 and maxlength: 50)\\\"\\r\\n                                inputRestriction=\\\"alphabetsWithSpace\\\" formControlName=\\\"publisher1\\\">\\r\\n                            <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                Allowed characters - Alphabets\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group mb-2 radio d-flex\\\">\\r\\n                            <input type=\\\"radio\\\" name=\\\"activeUrl\\\" id=\\\"webUrl1\\\" [checked]=\\\"checkUrl1\\\"\\r\\n                                (click)=\\\"onActiveWebUrlSelection($event)\\\" [disabled]=\\\"disableUrl\\\">\\r\\n                            <label for=\\\"webUrl1\\\">is Active</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"border p-2 mb-2\\\">\\r\\n                        <div class=\\\"form-group mb-2\\\">\\r\\n                            <label class=\\\"col-form-label\\\">Web URL <span class=\\\"text-muted\\\">\\r\\n                                    (Optional)\\r\\n                                </span>\\r\\n                            </label>\\r\\n                            <input type=\\\"url\\\" class=\\\"form-control\\\"\\r\\n                                placeholder=\\\"Enter web url (minlength: 3 and maxlength: 2048)\\\" minlength=\\\"3\\\"\\r\\n                                maxlength=\\\"2048\\\" formControlName=\\\"webUrl2\\\">\\r\\n                            <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                Allowed characters - Alphabets, Numbers and Special characters\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group mb-2\\\">\\r\\n                            <label class=\\\"col-form-label\\\">Publisher\\r\\n                            </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                placeholder=\\\"Enter publisher (minlength: 3 and maxlength: 50)\\\"\\r\\n                                inputRestriction=\\\"alphabetsWithSpace\\\" formControlName=\\\"publisher2\\\">\\r\\n                            <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                Allowed characters - Alphabets\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group mb-2 radio d-flex\\\">\\r\\n                            <input type=\\\"radio\\\" name=\\\"activeUrl\\\" id=\\\"webUrl2\\\" [checked]=\\\"checkUrl2\\\"\\r\\n                                (click)=\\\"onActiveWebUrlSelection($event)\\\" [disabled]=\\\"disableUrl\\\">\\r\\n                            <label for=\\\"webUrl2\\\">is Active</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"border p-2 mb-2\\\">\\r\\n                        <div class=\\\"form-group mb-2\\\">\\r\\n                            <label class=\\\"col-form-label\\\">Web URL <span class=\\\"text-muted\\\">\\r\\n                                    (Optional)\\r\\n                                </span>\\r\\n                            </label>\\r\\n                            <input type=\\\"url\\\" class=\\\"form-control\\\"\\r\\n                                placeholder=\\\"Enter web url (minlength: 3 and maxlength: 2048)\\\" minlength=\\\"3\\\"\\r\\n                                maxlength=\\\"2048\\\" formControlName=\\\"webUrl3\\\">\\r\\n                            <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                Allowed characters - Alphabets, Numbers and Special characters\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group mb-2\\\">\\r\\n                            <label class=\\\"col-form-label\\\">Publisher\\r\\n                            </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                placeholder=\\\"Enter publisher (minlength: 3 and maxlength: 50)\\\"\\r\\n                                inputRestriction=\\\"alphabetsWithSpace\\\" formControlName=\\\"publisher3\\\">\\r\\n                            <div class=\\\"text-muted font-15 my-2\\\" *ngIf=\\\"modalTitleName !== 'View'\\\">\\r\\n                                Allowed characters - Alphabets\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group mb-2 radio d-flex\\\">\\r\\n                            <input type=\\\"radio\\\" name=\\\"activeUrl\\\" id=\\\"webUrl3\\\" [checked]=\\\"checkUrl3\\\"\\r\\n                                (click)=\\\"onActiveWebUrlSelection($event)\\\" [disabled]=\\\"disableUrl\\\">\\r\\n                            <label for=\\\"webUrl3\\\">is Active</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- </div> -->\\r\\n                    <!-- </div> -->\\r\\n                </div>\\r\\n                <div *ngIf=\\\"modalTitleName === 'View'\\\">\\r\\n                    <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                        <p><b>Title </b></p>\\r\\n                        <p>{{contentDetails.content.title}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"d-flex justify-content-between w-100\\\" *ngIf=\\\"contentDetails.content.description\\\">\\r\\n                        <p><b>Description</b></p>\\r\\n                        <p>{{contentDetails.content.description}}</p>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"contentDetails.content.url1\\\">\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Web URL 1</b></p>\\r\\n                            <p>{{contentDetails.content.url1}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Publisher 1</b></p>\\r\\n                            <p>{{contentDetails.content.publisher1}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Active 1</b></p>\\r\\n                            <div>\\r\\n                                <div class=\\\"radio\\\">\\r\\n                                    <input type=\\\"radio\\\" id=\\\"url1\\\" name=\\\"checkActiveURL\\\" [checked]=\\\"checkUrl1\\\"\\r\\n                                        [disabled]=\\\"true\\\">\\r\\n                                    <label for=\\\"url1\\\"></label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"contentDetails.content.url2\\\">\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Web URL 2</b></p>\\r\\n                            <p>{{contentDetails.content.url2}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Publisher 2</b></p>\\r\\n                            <p>{{contentDetails.content.publisher2}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Active 2</b></p>\\r\\n                            <div>\\r\\n                                <div class=\\\"radio\\\">\\r\\n                                    <input type=\\\"radio\\\" id=\\\"url2\\\" name=\\\"checkActiveURL\\\" [checked]=\\\"checkUrl2\\\"\\r\\n                                        [disabled]=\\\"true\\\">\\r\\n                                    <label for=\\\"url2\\\"></label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"contentDetails.content.url3\\\">\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Web URL 3</b></p>\\r\\n                            <p>{{contentDetails.content.url3}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Publisher 3</b></p>\\r\\n                            <p>{{contentDetails.content.publisher3}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n                            <p><b>Active 3</b></p>\\r\\n                            <div>\\r\\n                                <div class=\\\"radio\\\">\\r\\n                                    <input type=\\\"radio\\\" id=\\\"url3\\\" name=\\\"checkActiveURL\\\" [checked]=\\\"checkUrl3\\\"\\r\\n                                        [disabled]=\\\"true\\\">\\r\\n                                    <label for=\\\"url3\\\"></label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <div *ngIf=\\\"modalTitleName === 'Add' || modalTitleName === 'Edit'\\\">\\r\\n                    <button class=\\\"btn btn-danger\\\" (click)=\\\"cancelTopicContent()\\\">\\r\\n                        <i class=\\\"fa fa-times mr-2\\\"></i>\\r\\n                        Reset\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"modalTitleName === 'Add'\\\">\\r\\n                    <button class=\\\"btn btn-success\\\" (click)=\\\"saveTopicContent()\\\" [disabled]=\\\"validateContent\\\">\\r\\n                        <i class=\\\"fa fa-save mr-2\\\"></i>\\r\\n                        Save\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"modalTitleName === 'Edit'\\\">\\r\\n                    <button class=\\\"btn btn-success\\\" (click)=\\\"updateTopicContents()\\\" [disabled]=\\\"validateContent\\\">\\r\\n                        <i class=\\\"fa fa-save mr-2\\\"></i>\\r\\n                        Save\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"modalTitleName === 'View'\\\">\\r\\n                    <button class=\\\"btn btn-danger\\\" (click)=\\\"closeTopicContentModal()\\\">\\r\\n                        <i class=\\\"fa fa-times mr-2\\\"></i>\\r\\n                        Close\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"w-100 my-3 justify-content-between d-flex\\\">\\r\\n    <div class=\\\"btn btn-danger\\\" (click)=\\\"onBack()\\\">\\r\\n        <i class=\\\"fa fa-chevron-left mr-2\\\"></i> Back\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"stepperTab\\\">\\r\\n    <ul id=\\\"progressbar\\\">\\r\\n        <li class=\\\"active\\\">\\r\\n            <span class=\\\"bar\\\">\\r\\n            </span>\\r\\n        </li>\\r\\n        <li>\\r\\n            <span class=\\\"bar\\\">\\r\\n            </span>\\r\\n        </li>\\r\\n        <li>\\r\\n            <span class=\\\"bar\\\">\\r\\n            </span>\\r\\n        </li>\\r\\n        <li>\\r\\n        </li>\\r\\n    </ul>\\r\\n\\r\\n    <fieldset>\\r\\n        <div class=\\\"row pb-4\\\">\\r\\n            <div class=\\\"col-xxl-12 p-3 alert-warning\\\">\\r\\n                <p class=\\\"font-20 text-warning\\\">Step 1 - Select question type</p>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xxl-12\\\">\\r\\n                <pick-question-type></pick-question-type>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <button class=\\\"next btn btn-success float-right\\\" [disabled]=\\\"validateQuestionType\\\">\\r\\n            Next<i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n        </button>\\r\\n\\r\\n    </fieldset>\\r\\n\\r\\n    <fieldset>\\r\\n        <div class=\\\"row mb-2\\\">\\r\\n            <div class=\\\"col-xxl-12 mb-2 alert-warning p-3\\\">\\r\\n                <p class=\\\"font-20 text-warning\\\">Step 2 - Build question</p>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xxl-12 mx-3\\\">\\r\\n                <div class=\\\"form-group mb-2 row d-flex justify-content-between flex-wrap mb-2\\\">\\r\\n                    <label class=\\\"font-16 mb-3\\\">Select question category</label>\\r\\n                    <div class=\\\"d-flex w-100 row\\\">\\r\\n                        <div class=\\\"radio col-xxl-3\\\" *ngFor=\\\"let category of questionCategory\\\">\\r\\n                            <input type=\\\"radio\\\" id=\\\"{{category.name}}\\\" name=\\\"assessmentCategory\\\"\\r\\n                                (click)=\\\"onSelectQuestionCategory(category.tag)\\\" [checked]=\\\"category.checked\\\">\\r\\n                            <label for=\\\"{{category.name}}\\\">{{category.name}}</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group  row d-flex justify-content-between flex-wrap mb-2\\\">\\r\\n                    <label class=\\\"font-16 mb-3\\\">Select question complexity level</label>\\r\\n                    <div class=\\\"d-flex w-100 row\\\">\\r\\n                        <div class=\\\"radio col-xxl-3\\\" *ngFor=\\\"let level of questionComplexityLevel\\\">\\r\\n                            <input type=\\\"radio\\\" id=\\\"{{level.name}}\\\" name=\\\"complexityLevel\\\" [checked]=\\\"level.checked\\\"\\r\\n                                (click)=\\\"onSelectComplexityLevel(level.value)\\\">\\r\\n                            <label for=\\\"{{level.name}}\\\">{{level.name}}</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"w-100\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n\\r\\n        <button class=\\\"btn btn-success ml-2 float-right next\\\" [disabled]=\\\"validateQuestion\\\">\\r\\n            Next<i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n        </button>\\r\\n        <div class=\\\"previous btn btn-danger float-right\\\">\\r\\n            <i class=\\\"fa fa-arrow-left mr-2\\\"></i>Previous\\r\\n        </div>\\r\\n    </fieldset>\\r\\n\\r\\n    <fieldset>\\r\\n        <div class=\\\"row pb-4\\\">\\r\\n            <div class=\\\"col-xxl-12 p-3 alert-warning\\\">\\r\\n                <p class=\\\"font-20 text-warning\\\">Step 3 - Add solution content (Optional)</p>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xxl-12 mb-2\\\">\\r\\n                <label for=\\\"\\\">Solution content</label>\\r\\n                <ckeditor class=\\\"w-100\\\" [config]=\\\"editorSolutionConfig\\\" [(ngModel)]=\\\"solutionContent\\\"\\r\\n                    #questionInput=\\\"ngModel\\\" placeholder=\\\"Enter question (min length: 3 and max length: 4000)\\\"\\r\\n                    [required]=\\\"true\\\">\\r\\n                </ckeditor>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <button class=\\\"btn btn-success ml-2 float-right next\\\" (click)=\\\"loadPreviewQuestion()\\\">\\r\\n            Next<i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n        </button>\\r\\n        <div class=\\\"previous btn btn-danger float-right\\\">\\r\\n            <i class=\\\"fa fa-arrow-left mr-2\\\"></i>Previous\\r\\n        </div>\\r\\n    </fieldset>\\r\\n\\r\\n    <fieldset>\\r\\n        <div class=\\\"row pb-4\\\">\\r\\n            <div class=\\\"col-xxl-12 p-3 alert-warning\\\">\\r\\n                <p class=\\\"font-20 text-warning\\\">Step 4 - Summary</p>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"w-100\\\">\\r\\n            <div\\r\\n                *ngIf='questionType === \\\"MCQ_SINGLE\\\" || questionType === \\\"MCQ_MULTIPLE\\\" || questionType === \\\"MCQ_TRUE_FALSE\\\"'>\\r\\n                <div class=\\\"row mb-3\\\">\\r\\n                    <div class=\\\"col-xxl-12\\\">\\r\\n                        <div class=\\\"border-info p-3 alert-info font-18\\\" style=\\\"line-height: 24px;\\\">\\r\\n                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questionResource.Question | sanitizeHtml\\\">\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row mb-3 p-3\\\">\\r\\n                    <div class=\\\"col-lg-6 col-md-12 d-flex justify-content-start mb-2  font-18\\\"\\r\\n                        *ngFor=\\\"let choice of questionResource.Choices;let i = index\\\">\\r\\n                        <div [ngClass]=\\\"{'radio': type === 'radio','checkbox': type === 'checkbox'}\\\">\\r\\n                            <input type=\\\"{{type}}\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answer\\\" disabled readonly>\\r\\n                            <label for=\\\"{{choice.ChoiceId}}\\\"></label>\\r\\n                        </div>\\r\\n                        <label for=\\\"{{choice.ChoiceId}}\\\">\\r\\n                            <p [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></p>\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"mb-3 font-18\\\">\\r\\n                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                        <div class=\\\"text-dark\\\" *ngFor=\\\"let data of answers;let checkIndex =index\\\">\\r\\n                            <span [MathJax]=\\\"data | sanitizeHtml\\\">\\r\\n                            </span>\\r\\n                            {{checkIndex  === answers.length - 1? ' ' : ','}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf='questionType === \\\"MCQ_CHOICE_MATRIX\\\"'>\\r\\n                <div class=\\\"row mb-3\\\">\\r\\n                    <div class=\\\"col-xxl-12\\\">\\r\\n                        <div class=\\\"border-info p-3 alert-info font-18\\\" style=\\\"line-height: 24px;\\\">\\r\\n                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questionResource.Question | sanitizeHtml\\\">\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <table class=\\\"border-collapse my-2 font-18 p-3\\\" style=\\\"pointer-events: none\\\">\\r\\n                    <tr class=\\\"bg-lightgray\\\">\\r\\n                        <td></td>\\r\\n                        <td *ngFor=\\\"let option of questionResource.Options\\\">\\r\\n                            <p [MathJax]=\\\"option.OptionText | sanitizeHtml\\\"></p>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr style=\\\"background: none !important;\\\" *ngFor=\\\"let choice of questionResource.Choices\\\">\\r\\n                        <td><p [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></p></td>\\r\\n                        <td *ngFor=\\\"let option of questionResource.Options\\\">\\r\\n                            <div class=\\\"radio\\\">\\r\\n                                <input type=\\\"radio\\\" disabled readonly [id]=\\\"option.OptionId+choice.ChoiceId\\\"\\r\\n                                    name=\\\"{{ choice.ChoiceId }}\\\">\\r\\n                                <label for=\\\"{{option.OptionId+choice.ChoiceId}}\\\"></label>\\r\\n                            </div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n                <div class=\\\"mb-3 font-18\\\">\\r\\n                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                        <span *ngIf=\\\"answers.length > 0\\\">\\r\\n                            <span class=\\\"text-dark\\\" *ngFor=\\\"let answer of answers;let checkIndex =index\\\">\\r\\n                                <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span>\\r\\n                                -\\r\\n                                <span [MathJax]=\\\"answer.optionName | sanitizeHtml\\\"></span>\\r\\n                                {{checkIndex  === answers.length - 1? ' ' : ','}}\\r\\n                            </span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf='questionType === \\\"MCQ_MATCH_LIST\\\"'>\\r\\n                <div class=\\\"row mb-3\\\">\\r\\n                    <div class=\\\"col-xxl-12\\\">\\r\\n                        <div class=\\\"border-info p-3 alert-info font-18\\\" style=\\\"line-height: 24px;\\\">\\r\\n                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questionResource.Question | sanitizeHtml\\\">\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <ng-container *ngFor=\\\"let answer of answers\\\">\\r\\n                    <div class=\\\"choice-container\\\">\\r\\n                        <div class=\\\"item\\\">\\r\\n                            <div class=\\\"choice--group\\\">\\r\\n                                <div class=\\\"choice--label\\\">\\r\\n                                    <p [MathJax]=\\\"answer.choiceName  | sanitizeHtml\\\"></p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"line-circle\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"item\\\">\\r\\n                            <div class=\\\"drag--container\\\">\\r\\n                                <div class=\\\"choice--editor option--container zone\\\" class=\\\"option--item\\\"\\r\\n                                    [MathJax]=\\\"answer.optionName  | sanitizeHtml\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                <div class=\\\"mb-3 font-18\\\">\\r\\n                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                        <span class=\\\"text-success\\\">Answer&nbsp;:&nbsp;</span>\\r\\n                        <span *ngIf=\\\"answers.length > 0\\\">\\r\\n                            <span class=\\\"text-dark\\\" *ngFor=\\\"let answer of answers;let checkIndex =index\\\">\\r\\n                                <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span>\\r\\n                                -\\r\\n                                <span [MathJax]=\\\"answer.optionName | sanitizeHtml\\\"></span>\\r\\n                                {{checkIndex  === answers.length - 1? ' ' : ','}}</span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"showSaveQuestion\\\">\\r\\n            <button class=\\\"btn btn-success float-right ml-2\\\" (click)=\\\"saveQuestion()\\\" [disabled]=\\\"showAddQuestion\\\">\\r\\n                <i class=\\\"fa fa-save mr-2\\\"></i>\\r\\n                Save question\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"showAddQuestion\\\">\\r\\n            <button class=\\\"btn btn-info float-right\\\" (click)=\\\"addQuestion()\\\">\\r\\n                <i class=\\\"fa fa-plus-circle mr-2\\\"></i>\\r\\n                Add one more question\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"previous btn btn-danger float-right mr-2\\\" (click)=\\\"resetPreviewQuestions()\\\">\\r\\n            <i class=\\\"fa fa-arrow-left mr-2\\\"></i>Previous\\r\\n        </div>\\r\\n    </fieldset>\\r\\n</div>\"","export default \"<div class=\\\"col-12 filterbg my-4 rounded\\\">\\r\\n    <div class=\\\"filtericon font-20\\\">\\r\\n        <i class=\\\"fa fa-filter\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"row d-flex justify-content-start align-items-center\\\">\\r\\n        <div class=\\\"col-lg-3 mb-3\\\">\\r\\n            <ng-select [items]=\\\"subjects\\\" bindLabel=\\\"title\\\" placeholder=\\\"Select subject\\\" [(ngModel)]=\\\"selectedSubject\\\">\\r\\n            </ng-select>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-end pb-3 row\\\">\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n            <button class=\\\"btn btn-success float-right waves-effect waves-light\\\" (click)=\\\"loadSubjectTree()\\\">\\r\\n                <i class=\\\"fa fa-filter mr-2\\\"></i>Apply\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xxl-3 mb-3 py-3\\\">\\r\\n        <div class=\\\"d-flex justify-content-start mb-2\\\" *ngIf=\\\"subjectTree.length > 1\\\">\\r\\n            <div class=\\\"btn btn-primary mr-2\\\" (click)=\\\"toggleTreeNodes()\\\">\\r\\n                <i class=\\\"fa fa-clone mr-2\\\"></i>\\r\\n                <span *ngIf=\\\"enableExpandNode === false\\\">\\r\\n                    Expand all\\r\\n                </span>\\r\\n                <span *ngIf=\\\"enableExpandNode === true\\\">\\r\\n                    Collapse all\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div id=\\\"treeView\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xxl-9 mb-3 py-3\\\">\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'root'\\\">\\r\\n            <p><b>Subject name</b></p>\\r\\n            <p>{{nodeName}}</p>\\r\\n            <p><b>Subject description</b></p>\\r\\n            <p>{{nodeDescription}}</p>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'concept'\\\">\\r\\n            <p><b>Concept name</b></p>\\r\\n            <p>{{nodeName}}</p>\\r\\n            <p><b>Concept description</b></p>\\r\\n            <p>{{nodeDescription}}</p>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"nodeType === 'topic'\\\">\\r\\n            <div class=\\\"d-flex row justify-content-between align-items-center\\\">\\r\\n                <div class=\\\"col-xxl-3\\\">\\r\\n                    <h4 class=\\\"font-20 mb-2\\\">{{nodeName}}</h4>\\r\\n                </div>\\r\\n                <div\\r\\n                    class=\\\"d-flex align-items-start flex-wrap justify-content-md-between justify-content-lg-end col-xxl-9\\\">\\r\\n                    <div class=\\\"btn btn-info mb-2 mr-2\\\" (click)=\\\"openPreviewQuestionModal()\\\"\\r\\n                        *ngIf=\\\"questions.length > 0\\\">\\r\\n                        <i class=\\\"fa fa-list-alt mr-2\\\"></i> Preview questions\\r\\n                    </div>\\r\\n                    <div class=\\\"btn btn-success mb-2 mr-2\\\" (click)=\\\"openSimulateQuestionModal()\\\"\\r\\n                        *ngIf=\\\"questions.length > 0\\\">\\r\\n                        <i class=\\\"fa fa-cogs mr-2\\\"></i> Simulate questions\\r\\n                    </div>\\r\\n                    <a class=\\\"btn btn-primary text-white mb-2 mr-2\\\" target=\\\"_blank\\\"\\r\\n                        [routerLink]=\\\"['/general-concept-and-topic',topicId,'general-topic-question-create']\\\">\\r\\n                        <i class=\\\"fa fa-plus-circle mr-2\\\"></i> Create new question\\r\\n                    </a>\\r\\n                    <div class=\\\"btn btn-warning text-white mb-2\\\" (click)=\\\"loadUpdatedTopicQuestions()\\\">\\r\\n                        <i class=\\\"fa fa-refresh mr-2\\\"></i> Refresh\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"table-responsive\\\" *ngIf=\\\"questions\\\">\\r\\n                <table class=\\\"table table-hover table-striped table-bordered nowrap w-100\\\" id=\\\"generalSubjectsTable\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Select</th>\\r\\n                            <th>Question category</th>\\r\\n                            <th>Question type</th>\\r\\n                            <th>Complexity level</th>\\r\\n                            <th>Actions</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let question of questions ;trackBy: trackId\\\">\\r\\n                            <td data-column=\\\"Select\\\">\\r\\n                                <div class=\\\"checkbox\\\">\\r\\n                                    <input type=\\\"checkbox\\\" id=\\\"{{question.id}}\\\"\\r\\n                                        (change)=\\\"checkSelectedQuestions($event)\\\" class=\\\"checkAll\\\">\\r\\n                                    <label for=\\\"{{question.id}}\\\"></label>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                            <td data-column=\\\"Question category\\\">{{question.questionCategory}}</td>\\r\\n                            <td data-column=\\\"Question type\\\">{{question.questionType}}</td>\\r\\n                            <td data-column=\\\"Complexity level\\\">{{question.complexityLevel}}</td>\\r\\n                            <td data-column=\\\"Actions\\\">\\r\\n                                <div>\\r\\n                                    <a class=\\\"btn btn-outline-info  mr-1 mb-1 btn-icon-size\\\" target=\\\"_blank\\\"\\r\\n                                        [routerLink]=\\\"['/general-concept-and-topic', question.id, 'general-topic-question-view' ]\\\">\\r\\n                                        <i class=\\\"fa fa-eye\\\"></i>\\r\\n                                    </a>\\r\\n                                    <a class=\\\"btn btn-outline-success  mr-1 mb-1 btn-icon-size\\\" target=\\\"_blank\\\"\\r\\n                                        [routerLink]=\\\"['/general-concept-and-topic', question.id, 'general-topic-question-edit' ]\\\">\\r\\n                                        <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <div class=\\\"mt-3 d-flex w-100 justify-content-end\\\" *ngIf=\\\"questions.length > 0\\\">\\r\\n                    <button class=\\\"btn btn-danger mr-2\\\" [disabled]=\\\"tableAction\\\" (click)=\\\"resetSelectedTopicQuestion()\\\">\\r\\n                        <i class=\\\"fa fa-times mr-2\\\"></i>Reset\\r\\n                    </button>\\r\\n                    <button class=\\\"btn btn-danger\\\" [disabled]=\\\"tableAction\\\" (click)=\\\"deleteTopicQuestions()\\\">\\r\\n                        <i class=\\\"fa fa-trash mr-2\\\"></i>Delete\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal\\\" id=\\\"simulateQuestionModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"simulateQuestionModal\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-notify\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header bg-warning d-flex align-items-center\\\">\\r\\n                <h5 class=\\\"modal-title text-white\\\">\\r\\n                    Simulate question - {{nodeName}}\\r\\n                </h5>\\r\\n                <div class=\\\"close btn btn-xl\\\" (click)=\\\"closeSimulateQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div id=\\\"questionSimulateIndicators\\\" class=\\\"carousel slide carousel-fade\\\" data-ride=\\\"carousel\\\"\\r\\n                    data-interval=\\\"false\\\">\\r\\n                    <div class=\\\"carousel-inner\\\">\\r\\n                        <div class=\\\"carousel-item\\\" [ngClass]=\\\"{'active': questionIndex === 0}\\\"\\r\\n                            *ngFor=\\\"let questiondata of topicQuestions;let questionIndex = index;\\\">\\r\\n                            <div\\r\\n                                *ngIf=\\\"questiondata.questionType === 'MCQ_SINGLE' || questiondata.questionType === 'MCQ_MULTIPLE' || questiondata.questionType === 'MCQ_TRUE_FALSE'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row mb-3 p-3 text-capitalize\\\">\\r\\n                                    <div class=\\\"col-lg-6 col-md-12 d-flex justify-content-start mb-2\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices;let i = index\\\">\\r\\n                                        <div class=\\\"radio\\\" *ngIf=\\\"questiondata.questionType !== 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answer\\\"\\r\\n                                                (change)=\\\"onSelectMCQSingleAnswer(questiondata.id,choice.ChoiceId)\\\">\\r\\n                                            <label for=\\\"{{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"checkbox\\\" *ngIf=\\\"questiondata.questionType === 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answers\\\"\\r\\n                                                (click)=\\\"onSelectMCQMultipleAnswer(questiondata.id,choice.ChoiceId,$event)\\\">\\r\\n                                            <label for=\\\" {{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <label for=\\\"{{choice.ChoiceId}}\\\"\\r\\n                                            [MathJax]=\\\"choice.ChoiceText  | sanitizeHtml\\\"></label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_MATCH_LIST'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div cdkDropListGroup>\\r\\n                                    <div class=\\\"example-container d-flex justify-content-between flex-nowrap mb-2\\\">\\r\\n                                        <div class=\\\"mcq-left mr-2\\\">\\r\\n                                            <div class=\\\"match-list\\\" data-value=\\\"questiondata.choices\\\">\\r\\n                                                <div class=\\\"list-box\\\" *ngFor=\\\"let item of questiondata.choices\\\"\\r\\n                                                    [MathJax]=\\\"item.ChoiceText  | sanitizeHtml\\\"></div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <!-- <div class=\\\"line-circle w-auto\\\" *ngFor=\\\"let item of viewModel.Choices\\\" id=\\\"{{item}}\\\"></div> -->\\r\\n                                        <div class=\\\"mcq-right ml-2\\\">\\r\\n                                            <div cdkDropList [cdkDropListData]=\\\"questiondata.options\\\" class=\\\"match-list\\\"\\r\\n                                                (cdkDropListDropped)=\\\"updatedDropList(questiondata.id, $event)\\\">\\r\\n                                                <div class=\\\"list-box\\\" *ngFor=\\\"let item of questiondata.options\\\" cdkDrag\\r\\n                                                    [MathJax]=\\\"item.OptionText  | sanitizeHtml\\\">\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_CHOICE_MATRIX'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <table class=\\\"table-matrix my-2 text-capitalize\\\">\\r\\n                                    <tr class=\\\"bg-lightgray\\\">\\r\\n                                        <td></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"option.OptionText | sanitizeHtml\\\"></span>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr style=\\\"background: none !important;\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices\\\">\\r\\n                                        <td><span [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></span></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <div class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId+option.OptionId\\\"\\r\\n                                                    name=\\\"{{ choice.ChoiceId }}\\\"\\r\\n                                                    (click)=\\\"onSelectChoiceMatrixAnswer(questiondata.id,choice.ChoiceId, option.OptionId)\\\">\\r\\n                                                <label for=\\\"{{choice.ChoiceId+option.OptionId}}\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                            <div class=\\\"w-100 d-flex justify-content-end align-self-center my-2\\\">\\r\\n                                <div class=\\\"btn btn-danger mb-2\\\" href=\\\"#questionSimulateIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"prev\\\" *ngIf=\\\"questionIndex !== 0\\\" (click)=\\\"previousQuestion()\\\">\\r\\n                                    <i class=\\\"fa fa-arrow-left mr-2\\\"></i>Previous\\r\\n                                </div>\\r\\n                                <div class=\\\"btn btn-info mx-2 mb-2\\\" (click)=\\\"checkAnswerStatus(questiondata.id)\\\">\\r\\n                                    <i class=\\\"fa fa-check mr-2\\\"></i>Check answer\\r\\n                                </div>\\r\\n                                <div class=\\\"btn btn-success mb-2\\\" href=\\\"#questionSimulateIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"next\\\" *ngIf=\\\"questionIndex !== topicQuestions.length - 1\\\"\\r\\n                                    (click)=\\\"nextQuestion()\\\">\\r\\n                                    Next<i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <div class=\\\"btn btn-danger\\\" (click)=\\\"closeSimulateQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times mr-2\\\"></i> Close\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal\\\" id=\\\"previewQuestionModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"previewQuestionModal\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-notify\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header bg-warning d-flex align-items-center\\\">\\r\\n                <h5 class=\\\"modal-title text-white\\\">\\r\\n                    Preview question - {{nodeName}}\\r\\n                </h5>\\r\\n                <div class=\\\"close btn btn-xl\\\" (click)=\\\"closePreviewQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div id=\\\"questionPreviewIndicators\\\" class=\\\"carousel slide carousel-fade\\\" data-ride=\\\"carousel\\\"\\r\\n                    data-interval=\\\"false\\\">\\r\\n                    <div class=\\\"carousel-inner\\\">\\r\\n                        <div class=\\\"carousel-item\\\" [ngClass]=\\\"{'active': questionIndex === 0}\\\"\\r\\n                            *ngFor=\\\"let questiondata of topicQuestions;let questionIndex = index;\\\">\\r\\n                            <div\\r\\n                                *ngIf=\\\"questiondata.questionType === 'MCQ_SINGLE' || questiondata.questionType === 'MCQ_MULTIPLE' || questiondata.questionType === 'MCQ_TRUE_FALSE'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question  | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row mb-3 p-3 text-capitalize\\\">\\r\\n                                    <div class=\\\"col-lg-6 col-md-12 d-flex justify-content-start mb-2\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices;let i = index\\\">\\r\\n                                        <div class=\\\"radio\\\" *ngIf=\\\"questiondata.questionType !== 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answer\\\"\\r\\n                                                [answers]=\\\"questiondata.answers\\\" disabled readonly>\\r\\n                                            <label for=\\\"{{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"checkbox\\\" *ngIf=\\\"questiondata.questionType === 'MCQ_MULTIPLE'\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [id]=\\\"choice.ChoiceId\\\" name=\\\"answers\\\" disabled\\r\\n                                                readonly [answers]=\\\"questiondata.answers\\\">\\r\\n                                            <label for=\\\" {{choice.ChoiceId}}\\\"></label>\\r\\n                                        </div>\\r\\n                                        <label for=\\\"{{choice.ChoiceId}}\\\"\\r\\n                                            [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mb-3 font-18\\\">\\r\\n                                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                                        <span class=\\\"text-success\\\">Answer&nbsp;:&nbsp;</span><span class=\\\"text-dark\\\"\\r\\n                                            *ngFor=\\\"let answer of questiondata.answers;let checkIndex =index\\\">\\r\\n                                            <span [MathJax]=\\\"answer | sanitizeHtml\\\"></span>\\r\\n                                            {{checkIndex  === questiondata.answers.length - 1? ' ' : ','}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_MATCH_LIST'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <ng-container *ngFor=\\\"let answer of questiondata.answers;\\\">\\r\\n                                    <div class=\\\"choice-container\\\">\\r\\n                                        <div class=\\\"item\\\">\\r\\n                                            <div class=\\\"choice--group\\\">\\r\\n                                                <div class=\\\"choice--label\\\">\\r\\n                                                    <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"line-circle\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"item\\\">\\r\\n                                            <div class=\\\"drag--container\\\">\\r\\n                                                <div class=\\\"choice--editor option--container zone\\\" class=\\\"option--item\\\"\\r\\n                                                    [MathJax]=\\\"answer.optionName | sanitizeHtml\\\">\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </ng-container>\\r\\n                                <div class=\\\"mb-3 font-18\\\">\\r\\n                                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                                        <span class=\\\"text-success\\\">Answer&nbsp;:&nbsp;</span><span\\r\\n                                            class=\\\"d-flex text-dark flex-nowrap\\\"\\r\\n                                            *ngFor=\\\"let answer of questiondata.answers;let checkIndex =index\\\">\\r\\n                                            <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span> <span>-</span>\\r\\n                                            <span [MathJax]=\\\"answer.optionName | sanitizeHtml\\\"></span>\\r\\n                                            {{checkIndex  === questiondata.answers.length - 1? ' ' : ' ,'}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"questiondata.questionType === 'MCQ_CHOICE_MATRIX'\\\">\\r\\n                                <div class=\\\"row mb-3\\\">\\r\\n                                    <div class=\\\"col-xxl-12\\\">\\r\\n                                        <div class=\\\"border-info p-3 alert-info font-18 d-flex\\\"\\r\\n                                            style=\\\"line-height: 24px;\\\">\\r\\n                                            <span class=\\\"text-info\\\">Q&nbsp;-&nbsp;{{questionIndex + 1}}.&nbsp;</span>\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"questiondata.question | sanitizeHtml\\\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <table class=\\\"table-matrix my-2 text-capitalize\\\">\\r\\n                                    <tr class=\\\"bg-lightgray\\\">\\r\\n                                        <td></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <span class=\\\"text-dark\\\" [MathJax]=\\\"option.OptionText | sanitizeHtml\\\"></span>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr style=\\\"background: none !important;\\\"\\r\\n                                        *ngFor=\\\"let choice of questiondata.choices\\\">\\r\\n                                        <td><span [MathJax]=\\\"choice.ChoiceText | sanitizeHtml\\\"></span></td>\\r\\n                                        <td *ngFor=\\\"let option of questiondata.options\\\">\\r\\n                                            <div class=\\\"radio\\\">\\r\\n                                                <input type=\\\"radio\\\" [id]=\\\"choice.ChoiceId+option.OptionId\\\"\\r\\n                                                    name=\\\"{{ choice.ChoiceId }}\\\" disabled readonly>\\r\\n                                                <label for=\\\"{{choice.ChoiceId+option.OptionId}}\\\"></label>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                                <div class=\\\"mb-3 font-18\\\">\\r\\n                                    <div class=\\\"border-success p-3 alert-success\\\">\\r\\n                                        <span class=\\\"text-success\\\">Answer&nbsp;:&nbsp;</span><span\\r\\n                                            class=\\\"d-flex text-dark flex-nowrap\\\"\\r\\n                                            *ngFor=\\\"let answer of questiondata.answers;let checkIndex =index\\\">\\r\\n                                            <span [MathJax]=\\\"answer.choiceName | sanitizeHtml\\\"></span> <span>-</span>\\r\\n                                            <span [MathJax]=\\\"answer.optionName | sanitizeHtml\\\"></span>\\r\\n                                            {{checkIndex  === questiondata.answers.length - 1? ' ' : ','}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"w-100 d-flex justify-content-end align-self-center my-2\\\">\\r\\n                                <div class=\\\"btn btn-danger mb-2\\\" href=\\\"#questionPreviewIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"prev\\\" *ngIf=\\\"questionIndex !== 0\\\">\\r\\n                                    <i class=\\\"fa fa-arrow-left mr-2\\\"></i>Previous\\r\\n                                </div>\\r\\n                                <div class=\\\"btn btn-success ml-2  mb-2\\\" href=\\\"#questionPreviewIndicators\\\" role=\\\"button\\\"\\r\\n                                    data-slide=\\\"next\\\" *ngIf=\\\"questionIndex !== topicQuestions.length - 1\\\">\\r\\n                                    Next<i class=\\\"fa fa-arrow-right ml-2\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <div class=\\\"btn btn-danger\\\" (click)=\\\"closePreviewQuestionModal()\\\">\\r\\n                    <i class=\\\"fa fa-times mr-2\\\"></i> Close\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { GeneralTopicQuestionManageComponent } from './general-topic-question-manage.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { generalConceptAndTopicRoute } from './general-concept-topic.route';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgJhipsterModule } from 'ng-jhipster';\r\nimport { SharedModule } from '../shared';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { GeneralTopicQuestionCreateComponent } from './general-topic-question-create.component';\r\nimport { QuestionBuilderModule } from '../question-builder/question-builder.module';\r\nimport { GeneralTopicContentManageComponent } from './general-topic-content-manage.component';\r\nimport { SyllabusLessonTopicModule } from '../syllabus-lesson-topic/syllabus-lesson-topic.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        QuestionBuilderModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        SharedModule,\r\n        NgJhipsterModule,\r\n        InfiniteScrollModule,\r\n        NgbModule,\r\n        RouterModule.forChild(generalConceptAndTopicRoute),\r\n        SyllabusLessonTopicModule\r\n    ],\r\n    declarations: [\r\n        GeneralTopicContentManageComponent,\r\n        GeneralTopicQuestionManageComponent,\r\n        GeneralTopicQuestionCreateComponent\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class GeneralConceptAndTopicModule {\r\n\r\n}","import { GeneralTopicQuestionManageComponent } from './general-topic-question-manage.component';\r\nimport { UserRouteAccessService } from '../core';\r\nimport { Routes } from '@angular/router';\r\nimport { GeneralTopicQuestionCreateComponent } from './general-topic-question-create.component';\r\nimport { MCQStandardComponent } from '../question-builder/mcq-standard';\r\nimport { MatchlistComponent } from '../question-builder/matchlist/matchlist.component';\r\nimport { MCQChoiceMatrixComponent } from '../question-builder/mcq-choicematrix';\r\nimport { GeneralTopicContentManageComponent } from './general-topic-content-manage.component';\r\nimport { CurriculumTopicQuestionDetailsComponent } from '../syllabus-lesson-topic/topic-question/topic-question-details.component';\r\nimport { DragAndDropComponent } from '../question-builder/cloze/drag-n-drop/drag-n-drop.component';\r\nimport { CurriculumTopicQuestionUpdateComponent } from '../syllabus-lesson-topic/topic-question/topic-question-update.component';\r\n\r\nexport const generalConceptAndTopicRoute: Routes = [\r\n    {\r\n        path: \"\", redirectTo: \"general-topic-question\", pathMatch: \"full\"\r\n    },\r\n    {\r\n        path: 'general-topic-question',\r\n        component: GeneralTopicQuestionManageComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Manage general topic questions'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/general-topic-question-create',\r\n        component: GeneralTopicQuestionCreateComponent,\r\n        children: [\r\n            {\r\n                path: 'mcqstandard',\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_SINGLE\",\r\n                    title: \"Create\"\r\n                },\r\n            },\r\n            {\r\n                path: \"mcqstandard/:qid\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_SINGLE\",\r\n                    title: \"Edit\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqmultiple\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_MULTIPLE\",\r\n                    mode: \"Create\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqmultiple/:qid\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_MULTIPLE\",\r\n                    mode: \"Edit\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqtruefalse\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_TRUE_FALSE\",\r\n                    title: \"Create\"\r\n                }\r\n            },\r\n            {\r\n                path: \"mcqtruefalse/:qid\",\r\n                component: MCQStandardComponent,\r\n                data: {\r\n                    type: \"MCQ_TRUE_FALSE\",\r\n                    title: \"Edit\"\r\n                }\r\n            },\r\n            {\r\n                path: 'mcqchoicematrix',\r\n                component: MCQChoiceMatrixComponent,\r\n                data: {\r\n                    title: \"Create\",\r\n                    type: \"MCQ_CHOICE_MATRIX\"\r\n                }\r\n            }, {\r\n                path: 'mcqchoicematrix/:qid',\r\n                component: MCQChoiceMatrixComponent,\r\n                data: {\r\n                    title: \"Edit\",\r\n                    type: \"MCQ_CHOICE_MATRIX\"\r\n                }\r\n            }, {\r\n                path: \"matchlist\",\r\n                component: MatchlistComponent,\r\n                data: {\r\n                    title: \"Create\",\r\n                    type: \"MCQ_MATCH_LIST\"\r\n                }\r\n            },\r\n            {\r\n                path: \"matchlist/:qid\",\r\n                component: MatchlistComponent,\r\n                data: {\r\n                    title: \"Edit\",\r\n                    type: \"MCQ_MATCH_LIST\"\r\n                }\r\n            },\r\n            {\r\n                path: \"clozedrag\",\r\n                component: DragAndDropComponent,\r\n                data: {\r\n                    title: \"Create\",\r\n                    type: \"mcq-drag\"\r\n                }\r\n            },\r\n            {\r\n                path: \"clozedrag/:qid\",\r\n                component: DragAndDropComponent,\r\n                data: {\r\n                    title: \"Edit\",\r\n                    type: \"mcq-drag\"\r\n                }\r\n            }\r\n        ],\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Create general topic question'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/general-topic-question-view',\r\n        component: CurriculumTopicQuestionDetailsComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'View general topic question'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n\r\n    },\r\n    {\r\n        path: ':id/general-topic-question-edit',\r\n        component: CurriculumTopicQuestionUpdateComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Edit general topic question'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n\r\n    },\r\n    {\r\n        path: 'general-topic-content',\r\n        component: GeneralTopicContentManageComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Manage general topic content'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { IGeneralTopicQuestion } from '../shared/model/content/general-topic.question.model';\r\nimport { IGeneralTopicContent } from '../shared/model/content/general-topic-content.model';\r\n\r\ntype EntityResponseType = HttpResponse<IGeneralTopicQuestion>;\r\ntype contentEntityResponseType = HttpResponse<IGeneralTopicContent>;\r\ntype contentArrayResponseType = HttpResponse<IGeneralTopicContent[]>;\r\n\r\nlet headers: HttpHeaders = new HttpHeaders();\r\nheaders = headers.append('Access-Control-Allow-Origin', '*').append('Access-Control-Allow-Headers', '*');\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GeneralConceptAndTopicService {\r\n    public generalTopicsResourceUrl = environment.API_URL + 'services/content/api/general-topics/all-details';\r\n    public topicContentResourceUrl = environment.API_URL + 'services/content/api/general-topic-contents';\r\n    public contentResourceUrl = environment.API_URL + 'services/content/api/contents';\r\n    public questionResourceUrl = environment.API_URL + 'services/content/api/questions';\r\n\r\n    constructor(protected http: HttpClient) { }\r\n\r\n    getTopicContentList(id: number): Observable<contentEntityResponseType> {\r\n        return this.http.get<IGeneralTopicContent>(`${this.generalTopicsResourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    getTopicQuestionList(id: number): Observable<EntityResponseType> {\r\n        return this.http.get<IGeneralTopicQuestion>(`${this.generalTopicsResourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    getContentByContentId(id: number): Observable<contentEntityResponseType> {\r\n        return this.http.get<IGeneralTopicContent>(`${this.contentResourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    updateContent(content: IGeneralTopicContent): Observable<contentEntityResponseType> {\r\n        return this.http.put<IGeneralTopicContent>(this.contentResourceUrl, content, { headers: headers, observe: 'response' });\r\n    }\r\n\r\n    saveTopicContent(topicContents: IGeneralTopicContent): Observable<contentEntityResponseType> {\r\n        return this.http.post<IGeneralTopicContent>(this.topicContentResourceUrl, topicContents, { headers: headers, observe: 'response' });\r\n    }\r\n\r\n    updateTopicContents(topicContents: IGeneralTopicContent[]): Observable<contentArrayResponseType> {\r\n        return this.http.put<IGeneralTopicContent[]>(this.topicContentResourceUrl, topicContents, { headers: headers, observe: 'response' });\r\n    }\r\n\r\n    deleteTopicContents(contentIds): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.topicContentResourceUrl}/${\"batch\"}/${contentIds}`, { observe: 'response' });\r\n    }\r\n\r\n    saveTopicQuestion(question: IGeneralTopicQuestion): Observable<EntityResponseType> {\r\n        return this.http.post<IGeneralTopicQuestion>(this.questionResourceUrl, question, { headers: headers, observe: 'response' });\r\n    }\r\n\r\n    deleteTopicQuestions(questionIds): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.questionResourceUrl}/${\"batch\"}/${questionIds}`, { observe: 'response' });\r\n    }\r\n}\r\n","import { Component, OnInit, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from \"@angular/core\";\r\nimport { Router } from '@angular/router';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { GeneralConceptAndTopicService } from './general-concept-topic.service';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { IGeneralTopicContent } from '../shared/model/content/general-topic-content.model';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { CommonService } from '../shared/common/common.service';\r\nimport { IGeneralSubject } from '../shared/model/content/general-subject.model';\r\nimport { GeneralSubjectService } from '../general-subject/general-subject.service';\r\nimport { FileManagementService } from '../shared/file-management/file-management.service';\r\nimport { saveAs } from 'file-saver'\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./general-topic-content-manage.component.html\",\r\n    providers: [GeneralConceptAndTopicService]\r\n})\r\nexport class GeneralTopicContentManageComponent implements OnInit, AfterViewInit, AfterViewChecked {\r\n    topicContentForm: FormGroup;\r\n    subjects: IGeneralSubject[];\r\n    subjectTree: IGeneralSubject[] = [];\r\n    topicContents: IGeneralTopicContent[] = [];\r\n    contentDetails: IGeneralTopicContent = {};\r\n    contentSource: any[] = [];\r\n    contentType: any[] = [];\r\n    contentIds: any[] = [];\r\n    nodeType: string;\r\n    nodeName: string;\r\n    nodeDescription: string;\r\n    modalTitleName: string;\r\n    contentId: number;\r\n    topicId: number;\r\n    validateContent: boolean;\r\n    checkOrderNumChange: boolean;\r\n    enableExpandNode: boolean;\r\n    disableDropdown: boolean;\r\n    activeUrl: string;\r\n    checkUrl1: boolean;\r\n    checkUrl2: boolean;\r\n    checkUrl3: boolean;\r\n    disableUrl: boolean;\r\n    updateAction: boolean;\r\n    tableAction: boolean;\r\n    selectedSubject: any;\r\n    selectedContentSource: any;\r\n    selectedContentType: any;\r\n    fileName: string;\r\n    uploadedFileName: string;\r\n    uploadedFilePath: any;\r\n    fileType: any;\r\n    selectedFile: any = null;\r\n    showFileAction: boolean;\r\n\r\n    constructor(\r\n        public _router: Router,\r\n        private generalSubjectService: GeneralSubjectService,\r\n        private generalTopicContentService: GeneralConceptAndTopicService,\r\n        public formBuilder: FormBuilder,\r\n        public pluginService: PluginService,\r\n        public commonService: CommonService,\r\n        private changeDetectRef: ChangeDetectorRef,\r\n        public fileService: FileManagementService\r\n    ) {\r\n        this.enableExpandNode = false;\r\n        this.topicContents = [];\r\n        this.fileName = \"No file chosen\";\r\n        this.tableAction = true;\r\n        this.updateAction = true;\r\n        this.checkUrl1 = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadSubjectData();\r\n        this.createTopicContentForm();\r\n        this.getContentType();\r\n        this.getContentSource();\r\n    }\r\n\r\n    getContentType() {\r\n        this.commonService.getContentTypeList().subscribe((typeData: any) => {\r\n            this.contentType = typeData;\r\n        });\r\n    }\r\n\r\n    getContentSource() {\r\n        this.commonService.getContentSourceList().subscribe((sourceData: any) => {\r\n            this.contentSource = sourceData;\r\n        });\r\n    }\r\n\r\n    createTopicContentForm() {\r\n        this.topicContentForm = this.formBuilder.group({\r\n            contentTitle: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(75)]),\r\n            contentDescription: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(250)]),\r\n            webUrl1: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(2048)]),\r\n            publisher1: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(50)]),\r\n            webUrl2: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(2048)]),\r\n            publisher2: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(50)]),\r\n            webUrl3: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(2048)]),\r\n            publisher3: new FormControl(\"\", [Validators.minLength(3), Validators.maxLength(50)])\r\n        })\r\n    }\r\n\r\n    get contentFormControl() { return this.topicContentForm.controls; }\r\n\r\n    loadSubjectData() {\r\n        this.generalSubjectService.getSubjectSearchList().subscribe(\r\n            (res: HttpResponse<IGeneralTopicContent[]>) => this.assignResponseToList(res.body),\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        )\r\n    }\r\n\r\n    assignResponseToList(data: IGeneralTopicContent[]) {\r\n        this.subjects = data;\r\n    }\r\n\r\n    protected onError(errorMessage: string) {\r\n        this.pluginService.alertMessage(errorMessage, \"error\");\r\n    }\r\n\r\n    showConceptAndTopicDetails() {\r\n        var localThisObj = this;\r\n        $('#treeView')\r\n            .on('changed.jstree', function (e, data) {\r\n                var i, j;\r\n                for (i = 0, j = data.selected.length; i < j; i++) {\r\n                    localThisObj.nodeType = data.node.type;\r\n                    if (localThisObj.nodeType === \"root\") {\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                    }\r\n                    else if (localThisObj.nodeType === \"concept\") {\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                        localThisObj.contentIds = [];\r\n\r\n                    } else if (localThisObj.nodeType === \"topic\") {\r\n                        localThisObj.contentIds = [];\r\n                        localThisObj.topicContents = [];\r\n                        localThisObj.topicId = data.node.data.id;\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                        localThisObj.getTopicContentList(localThisObj.topicId);\r\n                    } else {\r\n\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    getTopicContentList(topicId: number) {\r\n        this.generalTopicContentService.getTopicContentList(topicId).subscribe(\r\n            (res: HttpResponse<IGeneralTopicContent>) => this.assignResponseToTopicList(res.body),\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        )\r\n    }\r\n\r\n    protected assignResponseToTopicList(data: IGeneralTopicContent) {\r\n        this.contentIds = [];\r\n        this.topicContents = [];\r\n        this.topicContents = data.generalTopicContents;\r\n        this.sortArrayByOrderNumber(this.topicContents);\r\n        this.updateAction = true;\r\n        this.tableAction = true;\r\n        if (this.topicContents.length > 0) {\r\n            this.dragTableContent();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.showConceptAndTopicDetails();\r\n    }\r\n\r\n    loadSubjectTree() {\r\n        if (this.selectedSubject === null || this.selectedSubject === undefined) {\r\n            this.selectedSubject = null;\r\n            this.pluginService.alertMessage(\"Please select a filter and then apply\", \"error\")\r\n        } else {\r\n            this.subjectTree = [];\r\n            this.pluginService.jsTree(\"#treeView\", this.subjectTree, false);\r\n            let subjectId = this.selectedSubject.id;\r\n            if (subjectId) {\r\n                this.generalSubjectService.getSubjectTreeBySubjectId(subjectId).subscribe(\r\n                    (res: HttpResponse<IGeneralSubject[]>) => this.assignResponsetoTree(res.body),\r\n                    (res: HttpErrorResponse) => this.onError(res.message)\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    assignResponsetoTree(data: IGeneralSubject[]) {\r\n        this.subjectTree = data;\r\n        this.pluginService.jsTree(\"#treeView\", this.subjectTree, false);\r\n        this.nodeType = \"\";\r\n        this.enableExpandNode = false;\r\n    }\r\n\r\n    trimValue(value) {\r\n        if (value === null || value === undefined) {\r\n            return value;\r\n        } else {\r\n            return value.trim();\r\n        }\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        this.validateTopicContentForm();\r\n        this.changeDetectRef.detectChanges();\r\n    }\r\n\r\n    validateTopicContentForm() {\r\n        let contentName, webURL1, webURL2, webURL3;\r\n        contentName = this.trimValue(this.topicContentForm.value.contentTitle);\r\n        webURL1 = this.trimValue(this.topicContentForm.value.webUrl1);\r\n        webURL2 = this.trimValue(this.topicContentForm.value.webUrl2);\r\n        webURL3 = this.trimValue(this.topicContentForm.value.webUrl3);\r\n        if (contentName === \"\" || contentName === undefined || contentName === null) {\r\n            this.validateContent = true;\r\n        }\r\n        if ((this.uploadedFilePath === \"\" || this.uploadedFilePath === undefined || this.uploadedFilePath === null)) {\r\n            this.validateContent = true;\r\n        }\r\n        if (this.topicContentForm.valid) {\r\n            this.validateContent = false;\r\n        }\r\n        if (this.topicContentForm.invalid) {\r\n            this.validateContent = true;\r\n        }\r\n        if (this.checkUrl1 === true) {\r\n            if ((webURL1 === \"\" || webURL1 === undefined || webURL1 === null)) {\r\n                this.validateContent = true;\r\n            }\r\n        }\r\n        if (this.checkUrl2 === true) {\r\n            if ((webURL2 === \"\" || webURL2 === undefined || webURL2 === null)) {\r\n                this.validateContent = true;\r\n            }\r\n        }\r\n        if (this.checkUrl3 === true) {\r\n            if ((webURL3 === \"\" || webURL3 === undefined || webURL3 === null)) {\r\n                this.validateContent = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    onActiveWebUrlSelection(event) {\r\n        if (event.target.checked === true) {\r\n            this.activeUrl = event.target.id;\r\n            if (this.activeUrl === \"webUrl1\") {\r\n                this.checkUrl1 = true;\r\n                this.checkUrl2 = false;\r\n                this.checkUrl3 = false;\r\n            } else if (this.activeUrl === \"webUrl2\") {\r\n                this.checkUrl2 = true;\r\n                this.checkUrl3 = false;\r\n                this.checkUrl1 = false;\r\n            } else if (this.activeUrl === \"webUrl3\") {\r\n                this.checkUrl3 = true;\r\n                this.checkUrl1 = false;\r\n                this.checkUrl2 = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    onVideoFileChanges(event) {\r\n        let splitType;\r\n        this.selectedFile = event[0];\r\n        splitType = this.selectedFile.type.split('/');\r\n        this.fileType = splitType[0];\r\n        this.fileName = this.selectedFile.name;\r\n        if ((this.fileType === \"video\") && (this.selectedFile.size > 209715200)) {\r\n            this.pluginService.alertMessage(\"Please upload file size lesser than 200 MB\", \"error\");\r\n        }\r\n    }\r\n\r\n    uploadVideoFile() {\r\n        if (this.fileName !== \"No file chosen\") {\r\n            if (this.fileType === \"video\") {\r\n                this.fileService.getpresignedurls(this.fileName).subscribe(res => {\r\n                    if (res.status === 200) {\r\n                        this.uploadedFileName = Object.keys(res.body)[0];\r\n                        this.uploadedFilePath = Object.values(res.body)[0];\r\n                        this.fileName = this.uploadedFileName;\r\n                        if (this.uploadedFileName && this.uploadedFilePath) {\r\n                            let block, base64Data, dataSrc;\r\n                            dataSrc = this.selectedFile.base64;\r\n                            block = dataSrc.split(\";\");\r\n                            base64Data = block[1].split(\",\")[1];\r\n                            this.fileService.uploadVideoFile(this.uploadedFilePath, base64Data).subscribe((event) => {\r\n                                if (event instanceof HttpResponse) {\r\n                                    this.showFileAction = true;\r\n                                    this.pluginService.alertMessage(\"File uploaded successfully\", \"success\");\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                this.pluginService.alertMessage(\"Invalid file, it support only Video formats\", \"error\")\r\n            }\r\n        } else {\r\n            this.pluginService.alertMessage(\"Please choose file and upload it\", \"error\")\r\n        }\r\n    }\r\n\r\n    onDocumentFileChanges(event) {\r\n        this.selectedFile = event.target.files;\r\n        this.fileName = this.selectedFile[0].name;\r\n        if ((this.selectedFile[0].type === \"application/pdf\") && (this.selectedFile[0].size > 104857600)) {\r\n            this.pluginService.alertMessage(\"Please upload file size lesser than 100 MB\", \"error\");\r\n        }\r\n    }\r\n\r\n    uploadDocumentFile() {\r\n        if (this.fileName !== \"No file chosen\") {\r\n            if (this.selectedFile[0].type === \"application/pdf\") {\r\n                let file = this.selectedFile.item(0);\r\n                this.fileService.getpresignedurls(this.fileName).subscribe(res => {\r\n                    if (res.status === 200) {\r\n                        this.uploadedFileName = Object.keys(res.body)[0];\r\n                        this.uploadedFilePath = Object.values(res.body)[0];\r\n                        this.fileName = this.uploadedFileName;\r\n                        if (this.uploadedFileName && this.uploadedFilePath) {\r\n                            this.fileService.uploadPDFFile(this.uploadedFilePath, file).subscribe((event) => {\r\n                                if (event instanceof HttpResponse) {\r\n                                    this.showFileAction = true;\r\n                                    this.pluginService.alertMessage(\"File uploaded successfully\", \"success\");\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                this.pluginService.alertMessage(\"Invalid file, it support only PDF\", \"error\");\r\n            }\r\n        } else {\r\n            this.pluginService.alertMessage(\"Please choose file and upload it\", \"error\")\r\n        }\r\n    }\r\n\r\n    downloadFile() {\r\n        if (this.uploadedFileName) {\r\n            this.subscribeToDownloadResponse(this.fileService.downloadFiles(this.uploadedFileName));\r\n        }\r\n    }\r\n\r\n    protected subscribeToDownloadResponse(result: Observable<HttpResponse<IGeneralTopicContent>>) {\r\n        result.subscribe((res: HttpResponse<IGeneralTopicContent>) => this.onDownloadSuccess(res), (errRes: HttpErrorResponse) => this.onDownloadError(errRes));\r\n    }\r\n\r\n    onDownloadSuccess(resp) {\r\n        if (resp.body) {\r\n            let downloadFilePath = Object.values(resp.body)[0];\r\n            saveAs(downloadFilePath);\r\n        }\r\n    }\r\n\r\n    onDownloadError(error) {\r\n        this.pluginService.alertMessage(\"Error in downloading file\", \"error\");\r\n    }\r\n\r\n    addContent() {\r\n        this.modalTitleName = \"Add\";\r\n        this.openTopicContentModal();\r\n        this.resetFormValues();\r\n        this.validateContent = false;\r\n        this.selectedContentSource = null;\r\n        this.selectedContentType = null;\r\n        this.uploadedFileName = \"\";\r\n        this.uploadedFilePath = \"\";\r\n        this.fileName = \"No file chosen\";\r\n    }\r\n\r\n    saveTopicContent() {\r\n        if (this.topicContentForm.valid) {\r\n            this.validateContent = false;\r\n            let generalTopicContents: IGeneralTopicContent[] = [], content: IGeneralTopicContent = {}, contentDetail = content.content;\r\n            contentDetail = {};\r\n            contentDetail.title = this.trimValue(this.topicContentForm.value.contentTitle);\r\n            contentDetail.description = this.trimValue(this.topicContentForm.value.contentDescription);\r\n            contentDetail.url1 = this.trimValue(this.topicContentForm.value.webUrl1);\r\n            contentDetail.url2 = this.trimValue(this.topicContentForm.value.webUrl2);\r\n            contentDetail.url3 = this.trimValue(this.topicContentForm.value.webUrl3);\r\n            contentDetail.publisher1 = this.trimValue(this.topicContentForm.value.publisher1);\r\n            contentDetail.publisher2 = this.trimValue(this.topicContentForm.value.publisher2);\r\n            contentDetail.publisher3 = this.trimValue(this.topicContentForm.value.publisher3);\r\n            contentDetail.contentType = \"VIDEO\";\r\n            contentDetail.contentSource = \"WEB_URL\";\r\n            //Below codes are Video and document file upload\r\n            // contentDetail.contentType = this.selectedContentType.tag;\r\n            // contentDetail.contentSource = this.selectedContentSource.tag;\r\n            // if (this.selectedContentSource.tag === \"FILE_UPLOAD\") {\r\n            //     contentDetail.fileName = this.uploadedFileName;\r\n            //     contentDetail.filePath = this.uploadedFilePath;\r\n            // } else if (this.selectedContentSource.tag === \"WEB_URL\") {\r\n            //Active web url assigning condition\r\n            if (this.checkUrl1 === true) {\r\n                contentDetail.webUrl = contentDetail.url1;\r\n                contentDetail.publisher = contentDetail.publisher1;\r\n            } else if (this.checkUrl2 === true) {\r\n                contentDetail.webUrl = contentDetail.url2;\r\n                contentDetail.publisher = contentDetail.publisher2;\r\n            } else if (this.checkUrl3 === true) {\r\n                contentDetail.webUrl = contentDetail.url3;\r\n                contentDetail.publisher = contentDetail.publisher3;\r\n            } else {\r\n                //If user not at all changed active url, defaultly it takes first url as active\r\n                contentDetail.webUrl = contentDetail.url1;\r\n                contentDetail.publisher = contentDetail.publisher1;\r\n            }\r\n            // }\r\n            generalTopicContents.push({\r\n                generalTopicId: this.topicId,\r\n                content: contentDetail,\r\n                orderNumber: this.topicContents.length + 1\r\n            })\r\n            this.saveTopicContents(generalTopicContents);\r\n        }\r\n        if (this.topicContentForm.invalid) {\r\n            this.validateContent = true;\r\n        }\r\n    }\r\n\r\n    saveTopicContents(generalTopicContents) {\r\n        this.subscribeToSaveResponse(this.generalTopicContentService.saveTopicContent(generalTopicContents));\r\n    }\r\n\r\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<IGeneralTopicContent>>) {\r\n        result.subscribe((res: HttpResponse<IGeneralTopicContent>) => this.onSaveSuccess(res), (errRes: HttpErrorResponse) => this.onSaveError(errRes));\r\n    }\r\n\r\n    protected onSaveSuccess(res: HttpResponse<IGeneralTopicContent>) {\r\n        this.pluginService.alertMessage(\"Topic content created successfully\", \"success\")\r\n        this.getTopicContentList(this.topicId);\r\n        this.checkContentType();\r\n        this.resetFormValues();\r\n        this.uploadedFileName = \"\";\r\n        this.uploadedFilePath = \"\";\r\n    }\r\n\r\n    protected onSaveError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not save, please contact admin\", \"error\")\r\n    }\r\n\r\n    openTopicContentModal() {\r\n        this.pluginService.showModalWindow(\"#generalTopicContent\");\r\n    }\r\n\r\n    closeTopicContentModal() {\r\n        this.pluginService.hideModalWindow(\"#generalTopicContent\");\r\n    }\r\n\r\n    closeTopicContentModalWithOutSaving() {\r\n        if (this.modalTitleName === \"View\") {\r\n            this.closeTopicContentModal();\r\n        } else if (this.modalTitleName === \"Add\" || this.modalTitleName === \"Edit\") {\r\n            var localthisObject = this;\r\n            swal({\r\n                title: \"Are you sure to close without saving content ?\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonText: \"Yes\",\r\n                confirmButtonColor: \"#32b432\",\r\n                cancelButtonText: \"No\",\r\n                closeOnConfirm: true,\r\n                closeOnCancel: true\r\n            },\r\n                function (isConfirm) {\r\n                    if (isConfirm === true) {\r\n                        localthisObject.checkContentType();\r\n                    } else {\r\n                        localthisObject.closeTopicContentModal();\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    checkContentType() {\r\n        this.closeTopicContentModal();\r\n        if (this.selectedContentSource) {\r\n            if (this.selectedContentSource.tag === 'FILE_UPLOAD') {\r\n                if (this.uploadedFilePath) {\r\n                    this.deleteUploadedFile();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteUploadedFile() {\r\n        this.subscribeToDeleteFiletResponse(this.fileService.deleteUploadedFile(this.uploadedFileName));\r\n    }\r\n\r\n    protected subscribeToDeleteFiletResponse(resp: Observable<HttpResponse<any>>) {\r\n        resp.subscribe((res: HttpResponse<any>) => this.onDeleteFileSuccess(res), (res: HttpErrorResponse) => this.onDeleteError(res));\r\n    }\r\n\r\n    onDeleteFileSuccess(resp) {\r\n        this.fileName = \"No file chosen\";\r\n        this.uploadedFileName = \"\";\r\n        this.uploadedFilePath = \"\";\r\n        this.pluginService.alertMessage(\"File deleted successfully\", \"success\");\r\n    }\r\n\r\n    getContent(contentId) {\r\n        let topicContents: IGeneralTopicContent[] = [], contentDetails: any = {};\r\n        topicContents = this.topicContents.filter(item => item.content.id === contentId);\r\n        contentDetails = topicContents[0].content;\r\n        this.patchContentFormfields(contentDetails);\r\n        this.openTopicContentModal()\r\n    }\r\n\r\n    getContentDetails(contentId) {\r\n        let topicContents: IGeneralTopicContent[] = [];\r\n        this.contentDetails = {};\r\n        topicContents = this.topicContents.filter(item => item.content.id === contentId);\r\n        this.contentDetails = topicContents[0];\r\n        if (this.contentDetails.content.webUrl == this.contentDetails.content.url1) {\r\n            this.checkUrl1 = true;\r\n            this.checkUrl2 = false;\r\n            this.checkUrl3 = false;\r\n        } else if (this.contentDetails.content.webUrl == this.contentDetails.content.url2) {\r\n            this.checkUrl2 = true;\r\n            this.checkUrl3 = false;\r\n            this.checkUrl1 = false;\r\n        } else if (this.contentDetails.content.webUrl == this.contentDetails.content.url3) {\r\n            this.checkUrl3 = true;\r\n            this.checkUrl2 = false;\r\n            this.checkUrl1 = false;\r\n        } else {\r\n            this.checkUrl1 = false;\r\n            this.checkUrl2 = false;\r\n            this.checkUrl3 = false;\r\n        }\r\n        this.openTopicContentModal();\r\n    }\r\n\r\n    protected onContentError(errorMessage: string) {\r\n        this.pluginService.alertMessage(errorMessage, \"error\");\r\n    }\r\n\r\n    patchContentFormfields(contentDetails) {\r\n        this.contentId = contentDetails.id;\r\n        this.topicContentForm.patchValue({\r\n            contentTitle: contentDetails.title,\r\n            contentDescription: contentDetails.description,\r\n            webUrl1: contentDetails.url1,\r\n            publisher1: contentDetails.publisher1,\r\n            webUrl2: contentDetails.url2,\r\n            publisher2: contentDetails.publisher2,\r\n            webUrl3: contentDetails.url3,\r\n            publisher3: contentDetails.publisher3\r\n        })\r\n        // this.selectedContentType = this.contentType.filter(item => item.tag === contentDetails.contentType)[0];\r\n        // this.selectedContentSource = this.contentSource.filter(item => item.tag === contentDetails.contentSource)[0];\r\n        // if (this.selectedContentSource) {\r\n        //     if (this.selectedContentSource.tag === \"WEB_URL\") {\r\n        if (contentDetails.webUrl == contentDetails.url1) {\r\n            this.checkUrl1 = true;\r\n            this.checkUrl2 = false;\r\n            this.checkUrl3 = false;\r\n        } else if (contentDetails.webUrl == contentDetails.url2) {\r\n            this.checkUrl2 = true;\r\n            this.checkUrl3 = false;\r\n            this.checkUrl1 = false;\r\n        } else if (contentDetails.webUrl == contentDetails.url3) {\r\n            this.checkUrl3 = true;\r\n            this.checkUrl2 = false;\r\n            this.checkUrl1 = false;\r\n        } else {\r\n            this.checkUrl1 = false;\r\n            this.checkUrl2 = false;\r\n            this.checkUrl3 = false;\r\n        }\r\n        // } else if (this.selectedContentSource.tag === \"FILE_UPLOAD\") {\r\n        //     this.uploadedFileName = contentDetails.fileName;\r\n        //     this.fileName = contentDetails.fileName;\r\n        //     this.uploadedFilePath = contentDetails.filePath;\r\n        // }\r\n        // }\r\n    }\r\n\r\n    viewContent(contentId) {\r\n        this.modalTitleName = \"View\";\r\n        this.getContentDetails(contentId);\r\n    }\r\n\r\n    editContent(contentId) {\r\n        this.modalTitleName = \"Edit\";\r\n        this.getContent(contentId);\r\n    }\r\n\r\n    updateTopicContents() {\r\n        if (this.topicContentForm.valid) {\r\n            let content: IGeneralTopicContent = {}, contentDetail = content.content;\r\n            contentDetail = {};\r\n            contentDetail.id = this.contentId;\r\n            contentDetail.title = this.trimValue(this.topicContentForm.value.contentTitle);\r\n            contentDetail.description = this.trimValue(this.topicContentForm.value.contentDescription);\r\n            contentDetail.url1 = this.trimValue(this.topicContentForm.value.webUrl1);\r\n            contentDetail.url2 = this.trimValue(this.topicContentForm.value.webUrl2);\r\n            contentDetail.url3 = this.trimValue(this.topicContentForm.value.webUrl3);\r\n            contentDetail.publisher1 = this.trimValue(this.topicContentForm.value.publisher1);\r\n            contentDetail.publisher2 = this.trimValue(this.topicContentForm.value.publisher2);\r\n            contentDetail.publisher3 = this.trimValue(this.topicContentForm.value.publisher3);\r\n            contentDetail.contentType = \"VIDEO\";\r\n            contentDetail.contentSource = \"WEB_URL\";\r\n            //Below codes are Video and document file upload\r\n            // contentDetail.contentType = this.selectedContentType.tag;\r\n            // contentDetail.contentSource = this.selectedContentSource.tag;\r\n            // if (this.selectedContentSource) {\r\n            //     //Active web url assigning condition\r\n            //     if (this.selectedContentSource.tag === \"WEB_URL\") {\r\n            if (this.checkUrl1 === true) {\r\n                contentDetail.webUrl = contentDetail.url1;\r\n                contentDetail.publisher = contentDetail.publisher1;\r\n            } else if (this.checkUrl2 === true) {\r\n                contentDetail.webUrl = contentDetail.url2;\r\n                contentDetail.publisher = contentDetail.publisher2;\r\n            } else if (this.checkUrl3 === true) {\r\n                contentDetail.webUrl = contentDetail.url3;\r\n                contentDetail.publisher = contentDetail.publisher3;\r\n            } else {\r\n                //If user not at all changed active url, defaultly it takes first url as active\r\n                contentDetail.webUrl = contentDetail.url1;\r\n                contentDetail.publisher = contentDetail.publisher1;\r\n            }\r\n            // } else if (this.selectedContentSource.tag === \"FILE_UPLOAD\") {\r\n            //     contentDetail.fileName = this.uploadedFileName;\r\n            //     contentDetail.filePath = this.uploadedFilePath;\r\n            // }\r\n            // }\r\n            this.subscribeToUpdateResponse(this.generalTopicContentService.updateContent(contentDetail));\r\n        }\r\n        if (this.topicContentForm.invalid) {\r\n            this.validateContent = true;\r\n        }\r\n    }\r\n\r\n    protected subscribeToUpdateResponse(result: Observable<HttpResponse<IGeneralTopicContent>>) {\r\n        result.subscribe((res: HttpResponse<IGeneralTopicContent>) => this.onUpdateSuccess(res), (errRes: HttpErrorResponse) => this.onUpdateError(errRes));\r\n    }\r\n\r\n    protected onUpdateSuccess(res: HttpResponse<IGeneralTopicContent>) {\r\n        this.getTopicContentList(this.topicId);\r\n        this.checkContentType();\r\n        this.resetFormValues();\r\n        this.pluginService.alertMessage(\"Topic content updated successfully\", \"success\")\r\n    }\r\n\r\n    protected onUpdateError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not save, please contact admin\", \"error\");\r\n    }\r\n\r\n    cancelTopicContent() {\r\n        this.resetFormValues()\r\n    }\r\n\r\n    checkSelectedContents(event) {\r\n        let selectedId, checked, index;\r\n        checked = event.target.checked;\r\n        selectedId = event.target.id;\r\n        if (checked === true) {\r\n            this.tableAction = false;\r\n            this.contentIds.push(selectedId);\r\n        } else if (checked === false) {\r\n            index = this.contentIds.findIndex(item => item === selectedId);\r\n            this.contentIds.splice(index, 1)\r\n        }\r\n        this.contentIds = this.removeDuplicateElements(this.contentIds);\r\n        if (this.contentIds.length <= 0) {\r\n            this.tableAction = true;\r\n        }\r\n    }\r\n\r\n    removeDuplicateElements(array) {\r\n        var temp = [];\r\n        for (var i = 0; i < array.length; i++) {\r\n            if (temp.indexOf(array[i]) == -1) {\r\n                temp.push(array[i]);\r\n            }\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    resetFormValues() {\r\n        this.topicContentForm.reset();\r\n        this.selectedContentSource = null;\r\n        this.selectedContentType = null;\r\n    }\r\n\r\n    resetSelectedTopicContent() {\r\n        this.contentIds = [];\r\n        $(\".checkAll\").prop(\"checked\", false);\r\n        this.tableAction = true;\r\n    }\r\n\r\n    deleteTopicContents() {\r\n        var localthisObject = this;\r\n        swal({\r\n            title: \"Are you sure to delete content ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm === true) {\r\n                    if (localthisObject.contentIds.length > 0) {\r\n                        localthisObject.subscribeToDeleteResponse(localthisObject.generalTopicContentService.deleteTopicContents(localthisObject.contentIds));\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    protected subscribeToDeleteResponse(result: Observable<HttpResponse<IGeneralTopicContent>>) {\r\n        result.subscribe((res: HttpResponse<IGeneralTopicContent>) => this.onDeleteSuccess(res), (errRes: HttpErrorResponse) => this.onDeleteError(errRes));\r\n    }\r\n\r\n    protected onDeleteSuccess(res: HttpResponse<IGeneralTopicContent>) {\r\n        this.pluginService.alertMessage(\"Topic content deleted successfully\", \"success\");\r\n        this.getTopicContentList(this.topicId);\r\n        this.tableAction = true;\r\n        this.contentIds = [];\r\n    }\r\n\r\n    protected onDeleteError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not delete, please contact admin\", \"error\")\r\n    }\r\n\r\n    dragTableContent() {\r\n        let localThisObj = this;\r\n        var fixHelperModified = function (e, tr) {\r\n            var $originals = tr.children();\r\n            var $helper = tr.clone();\r\n            $helper.children().each(function (index) {\r\n                $(this).width($originals.eq(index).width());\r\n            });\r\n            return $helper;\r\n        },\r\n            updateIndex = function (e, ui) {\r\n                $(\"td.index\", ui.item.parent()).each(function (i) {\r\n                    $(this).html(i + 1);\r\n                });\r\n                localThisObj.updateTopicContentOrder();\r\n            };\r\n\r\n        $(\"#dragTable #dragBody\")\r\n            .sortable({\r\n                helper: fixHelperModified,\r\n                stop: updateIndex\r\n            })\r\n        $(\"#dragBody\").sortable({\r\n            distance: 1,\r\n            opacity: 0, delay: 10,\r\n            cursor: \"move\",\r\n            update: function () { }\r\n        });\r\n    }\r\n\r\n    updateTopicContentOrder() {\r\n        this.updateAction = false;\r\n        this.checkOrderNumChange = true;\r\n        var table: HTMLTableElement = document.querySelector('#dragTable');\r\n        var rows = table.querySelectorAll('tbody tr');\r\n        Array.from(rows).forEach((row) => {\r\n            let list = row.querySelectorAll('td');\r\n            var contentId = Number(list[0].title);\r\n            var newOrderNum = Number(list[1].textContent);\r\n            for (let i = 0; i < this.topicContents.length; i++) {\r\n                if (this.topicContents[i].id === contentId) {\r\n                    this.topicContents[i].orderNumber = newOrderNum;\r\n                    break;\r\n                }\r\n            }\r\n            this.sortArrayByOrderNumber(this.topicContents);\r\n        })\r\n    }\r\n\r\n    sortArrayByOrderNumber(array: any[]) {\r\n        array.sort((a, b) => (a.orderNumber > b.orderNumber) ? 1 : -1);\r\n    }\r\n\r\n    updateTopicContentsWithOrderNumber() {\r\n        var localthisObject = this;\r\n        swal({\r\n            title: \"Are you sure to update order ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm === true) {\r\n                    if (localthisObject.checkOrderNumChange === true) {\r\n                        localthisObject.subscribeToUpdateTopicContentResponse(localthisObject.generalTopicContentService.updateTopicContents(localthisObject.topicContents));\r\n                        localthisObject.updateAction = true;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    protected subscribeToUpdateTopicContentResponse(result: Observable<HttpResponse<IGeneralTopicContent[]>>) {\r\n        result.subscribe((res: HttpResponse<IGeneralTopicContent[]>) => this.onUpdateTopicContentSuccess(res), (errRes: HttpErrorResponse) => this.onUpdateTopicContentError(errRes));\r\n    }\r\n\r\n    protected onUpdateTopicContentSuccess(res: HttpResponse<IGeneralTopicContent[]>) {\r\n        this.pluginService.alertMessage(\"Topic content order updated successfully\", \"success\");\r\n        this.getTopicContentList(this.topicId);\r\n        this.resetFormValues();\r\n    }\r\n\r\n    protected onUpdateTopicContentError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not save, please contact admin\", \"error\")\r\n    }\r\n\r\n    toggleTreeNodes() {\r\n        this.enableExpandNode = !this.enableExpandNode;\r\n        if (this.enableExpandNode) {\r\n            this.pluginService.openJsTreeAllNodes(\"#treeView\");\r\n        } else {\r\n            this.pluginService.closeJsTreeAllNodes(\"#treeView\")\r\n        }\r\n    }\r\n}","import { Component, OnInit, ChangeDetectorRef, AfterViewChecked } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { GeneralConceptAndTopicService } from './general-concept-topic.service';\r\nimport { QuestionBuilderService } from '../question-builder/question-builder.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { IGeneralTopicQuestion } from '../shared/model/content/general-topic.question.model';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CommonService } from '../shared/common/common.service';\r\nimport { FileManagementService } from '../shared/file-management/file-management.service';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./general-topic-question-create.component.html\",\r\n    providers: [GeneralConceptAndTopicService]\r\n})\r\nexport class GeneralTopicQuestionCreateComponent implements OnInit, AfterViewChecked {\r\n    questionResource: any = {};\r\n    questionCategory: any[] = [];\r\n    questionComplexityLevel: any[] = [];\r\n    answers: any[] = [];\r\n    contentSource: any[] = [];\r\n    questionType: string;\r\n    category: string;\r\n    selectedContentSource: string;\r\n    type: string;\r\n    topicId: number;\r\n    complexityLevel: number;\r\n    validateQuestionType: boolean;\r\n    validateQuestion: boolean;\r\n    showSaveQuestion: boolean;\r\n    showAddQuestion: boolean;\r\n    editorSolutionConfig: any;\r\n    updatedHTMLDATA: any;\r\n    solutionContent: any;\r\n\r\n    constructor(\r\n        public activatedRoute: ActivatedRoute,\r\n        public router: Router,\r\n        public pluginService: PluginService,\r\n        public questionBuilderService: QuestionBuilderService,\r\n        public questionService: GeneralConceptAndTopicService,\r\n        public commonService: CommonService,\r\n        public formBuilder: FormBuilder,\r\n        public changedetector: ChangeDetectorRef,\r\n        public fileService: FileManagementService\r\n    ) {\r\n        this.showSaveQuestion = false;\r\n        this.showAddQuestion = false;\r\n        this.validateQuestionType = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.editorSolutionConfig = this.pluginService.getCKEditorQuestionConfig();\r\n        this.pluginService.sideMenuToggle();\r\n        this.pluginService.newStepperJs();\r\n        this.topicId = Number(this.activatedRoute.snapshot.paramMap.get('id'));\r\n        this.getContentSource();\r\n        this.getQuestionCategory();\r\n        this.getQuestionComplexityLevel();\r\n        this.validateQuestionTypeSelectedOrNot();\r\n    }\r\n\r\n    getContentSource() {\r\n        this.commonService.getContentSourceList().subscribe((data: any) => {\r\n            this.contentSource = data;\r\n        });\r\n    }\r\n\r\n    getQuestionCategory() {\r\n        this.commonService.getQuestionCategoryList().subscribe((data: any) => {\r\n            this.questionCategory = data;\r\n        });\r\n    }\r\n\r\n    getQuestionComplexityLevel() {\r\n        this.commonService.getQuestionComplexityLevelList().subscribe((data: any) => {\r\n            this.questionComplexityLevel = data;\r\n        });\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        this.validateQuestionTypeSelectedOrNot();\r\n        this.changedetector.detectChanges();\r\n    }\r\n\r\n    validateQuestionTypeSelectedOrNot() {\r\n        let currentRoute, splitUrl: any[] = [], lastItem;\r\n        currentRoute = this.router.url;\r\n        splitUrl = currentRoute.split(\"/\");\r\n        lastItem = splitUrl.pop();\r\n        if (lastItem === 'general-topic-question-create') {\r\n            this.validateQuestionType = true;\r\n        } else {\r\n            this.validateQuestionType = false;\r\n        }\r\n    }\r\n\r\n    loadPreviewQuestion() {\r\n        let duplicateChoices: any[] = [], question: any, choices: any[] = [], choiceText, choiceId, answers: any[] = [], matrixChoices: any[] = [], matrixOptions: any[] = [];\r\n        this.questionResource = [];\r\n        this.questionResource = this.questionBuilderService.getQuestionResource;\r\n        this.questionType = this.questionResource.QuestionType;\r\n        answers = this.questionResource.Answers;\r\n        this.onChangeOptionType(this.questionType);\r\n        if (question === \"\" || question === \"undefined\") {\r\n            //\"Question is missing, please fill question detail\";\r\n            this.validateQuestion = true;\r\n        } else {\r\n            if (answers.length > 0) {\r\n                if (this.questionType === \"MCQ_SINGLE\" || this.questionType === \"MCQ_MULTIPLE\" || this.questionType === \"MCQ_TRUE_FALSE\") {\r\n                    this.answers = [];\r\n                    duplicateChoices = this.questionResource.Choices;\r\n                    if (duplicateChoices.length > 0) {\r\n                        choices = [];\r\n                        for (let i = 0; i < duplicateChoices.length; i++) {\r\n                            choiceId = duplicateChoices[i].ChoiceId\r\n                            choiceText = duplicateChoices[i].ChoiceText\r\n                            choices.push({\r\n                                \"choiceId\": choiceId,\r\n                                \"choiceText\": choiceText\r\n                            });\r\n                        }\r\n                        for (let j = 0; j < answers.length; j++) {\r\n                            let answerText = choices.find(item => item.choiceId === answers[j]).choiceText;\r\n                            this.answers.push(answerText);\r\n                            answerText = \"\"\r\n                        }\r\n                        this.validateQuestion = false;\r\n                    } else {\r\n                        //\"Choices are missing, Please fill the choices\";\r\n                        this.validateQuestion = true;\r\n                    }\r\n\r\n                } else if (this.questionType === \"MCQ_CHOICE_MATRIX\") {\r\n                    matrixChoices = [];\r\n                    matrixOptions = [];\r\n                    matrixChoices = this.questionResource.Choices;\r\n                    matrixOptions = this.questionResource.Options;\r\n                    if (matrixChoices.length > 0 && matrixOptions.length > 0) {\r\n                        if (answers.length > 0) {\r\n                            this.answers = [];\r\n                            for (let k = 0; k < answers.length; k++) {\r\n                                this.answers.push({\r\n                                    choiceName: matrixChoices.find(item => item.ChoiceId === answers[k].ChoiceId).ChoiceText,\r\n                                    optionName: matrixOptions.find(item => item.OptionId === answers[k].OptionId).OptionText\r\n                                })\r\n                            }\r\n                        }\r\n                        this.validateQuestion = false;\r\n                    } else {\r\n                        //\"Choices and options are missing, please fill the details\";\r\n                        this.validateQuestion = true;\r\n                    }\r\n\r\n                } else if (this.questionType === \"MCQ_MATCH_LIST\") {\r\n                    matrixChoices = [];\r\n                    matrixOptions = [];\r\n                    matrixChoices = this.questionResource.Choices;\r\n                    matrixOptions = this.questionResource.Options;\r\n                    if (matrixChoices.length > 0 && matrixOptions.length > 0) {\r\n                        if (answers.length > 0) {\r\n                            this.answers = [];\r\n                            for (let k = 0; k < answers.length; k++) {\r\n                                this.answers.push({\r\n                                    choiceName: matrixChoices.find(item => item.ChoiceId === answers[k].ChoiceId).ChoiceText,\r\n                                    optionName: matrixOptions.find(item => item.OptionId === answers[k].OptionId).OptionText\r\n                                })\r\n                            }\r\n                        }\r\n                        this.validateQuestion = false;\r\n                    } else {\r\n                        //\"Left side and right side options are missing, please fill the details\";\r\n                        this.validateQuestion = true;\r\n                    }\r\n                }\r\n                this.showSaveQuestion = true;\r\n                this.updateQuestionResource();\r\n            }\r\n            else {\r\n                //\"Answer is missing, please select a answer\";\r\n                this.validateQuestion = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    questionAlertMsg(str) {\r\n        this.pluginService.alertMessage(str, \"error\");\r\n    }\r\n\r\n    onChangeOptionType(questionType) {\r\n        if (questionType === \"MCQ_SINGLE\" || questionType === \"MCQ_TRUE_FALSE\") {\r\n            this.type = \"radio\";\r\n        } else if (questionType === \"MCQ_MULTIPLE\") {\r\n            this.type = \"checkbox\";\r\n        } else {\r\n            this.type = \"\";\r\n        }\r\n    }\r\n\r\n    onContentSource(sourceName) {\r\n        this.selectedContentSource = sourceName;\r\n    }\r\n\r\n    onSelectQuestionCategory(value) {\r\n        this.category = value;\r\n    }\r\n\r\n    onSelectComplexityLevel(value) {\r\n        this.complexityLevel = value;\r\n    }\r\n\r\n    resetPreviewQuestions() {\r\n        this.questionResource = [];\r\n        this.answers = [];\r\n    }\r\n\r\n    async getBase64ImageFromUrl(imageUrl) {\r\n        var res = await fetch(imageUrl);\r\n        var blob = await res.blob();\r\n        return new Promise((resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.addEventListener(\"load\", function () {\r\n                resolve(reader.result);\r\n            }, false);\r\n\r\n            reader.onerror = () => {\r\n                return reject(this);\r\n            };\r\n            reader.readAsDataURL(blob);\r\n        })\r\n    }\r\n\r\n    async updateImageSrc(dataSource) {\r\n        let imageTags: any, htmlElement, imageId, imageUrl, index, updatedHTMLData, base64;\r\n        htmlElement = document.createElement(\"div\");\r\n        htmlElement.innerHTML = dataSource;\r\n        imageTags = htmlElement.getElementsByTagName(\"img\");\r\n        if (imageTags.length > 0) {\r\n            for (let i = 0; i < imageTags.length; i++) {\r\n                imageId = \"image\" + [i];\r\n                index = i;\r\n                imageTags[i].setAttribute(\"id\", imageId); //Set id attribute for image \r\n                imageUrl = imageTags[i].src; //Get image source \r\n                base64 = await this.getBase64ImageFromUrl(imageUrl);\r\n                updatedHTMLData = await this.getAWSFilePath(base64, index, htmlElement);\r\n            }\r\n        } else {\r\n            updatedHTMLData = htmlElement.innerHTML;\r\n        }\r\n        return updatedHTMLData;\r\n    }\r\n\r\n    async getAWSFilePath(base64, index, htmlElement) {\r\n        let block, contentType, encodedData, fileType, imageType, presignedURL, imageTags, updatedHTMLData;\r\n        imageTags = htmlElement.getElementsByTagName(\"img\");\r\n        block = base64.split(',');\r\n        contentType = block[0].split(':')[1];\r\n        fileType = contentType.split('/')[1];\r\n        imageType = fileType.split(';')[0];\r\n        encodedData = block[1];\r\n        let fileName = new Date().getUTCMilliseconds() + \"quesImage\" + \".\" + imageType;\r\n        if (encodedData) {\r\n            let res: any = await this.fileService.getImagePresignedurls(fileName);\r\n            let map = new Map().set(Object.keys(res)[0], Object.values(res)[0]).set(Object.keys(res)[1], Object.values(res)[1]);\r\n            map.forEach((value: boolean, key: string) => {\r\n                if (key !== \"objectURL\") {\r\n                    presignedURL = value;\r\n                } else if (key === \"objectURL\") {\r\n                    let updatedFilePath = value;\r\n                    imageTags[index].setAttribute(\"src\", updatedFilePath); //Setting aws filepath in respective image source\r\n                    updatedHTMLData = htmlElement.innerHTML;\r\n                    this.getImagePathUploadedHTML(updatedHTMLData);\r\n                }\r\n            });\r\n            await this.fileService.uploadImagefileAWSS3(presignedURL, encodedData);\r\n        }\r\n    }\r\n\r\n    async  updateQuestionResource() {\r\n        let choices: any[] = [], options: any[] = [], questionResource: any = {}, choiceText, optionText;\r\n        questionResource = this.questionBuilderService.getQuestionResource;\r\n        if (questionResource.Question) {\r\n            this.updatedHTMLDATA = questionResource.Question;\r\n            await this.updateImageSrc(questionResource.Question);\r\n            questionResource.Question = this.updatedHTMLDATA;\r\n        }\r\n        if (questionResource.Choices.length > 0) {\r\n            for (let i = 0; i < questionResource.Choices.length; i++) {\r\n                this.updatedHTMLDATA = questionResource.Choices[i].ChoiceText;\r\n                await this.updateImageSrc(questionResource.Choices[i].ChoiceText);\r\n                choiceText = this.updatedHTMLDATA;\r\n                choices.push({\r\n                    ChoiceText: choiceText,\r\n                    ChoiceId: questionResource.Choices[i].ChoiceId\r\n                })\r\n            }\r\n            questionResource.Choices = choices;\r\n        }\r\n        if (questionResource.Options.length > 0) {\r\n            for (let i = 0; i < questionResource.Options.length; i++) {\r\n                this.updatedHTMLDATA = questionResource.Options[i].OptionText;\r\n                await this.updateImageSrc(questionResource.Options[i].OptionText);\r\n                optionText = this.updatedHTMLDATA;\r\n                options.push({\r\n                    OptionText: optionText,\r\n                    OptionId: questionResource.Options[i].OptionId\r\n                })\r\n            }\r\n            questionResource.Options = options;\r\n        }\r\n        await this.questionBuilderService.generateQuestionResource(questionResource);\r\n    }\r\n\r\n    async  getImagePathUploadedHTML(data) {\r\n        this.updatedHTMLDATA = data;\r\n    }\r\n\r\n    saveQuestion() {\r\n        let questionResource: IGeneralTopicQuestion = {}, jsonConversion, questionDetails, solutionContentJson, updatedQuestionResource;\r\n        if (this.category) {\r\n            questionResource.category = this.category;\r\n        } else {\r\n            questionResource.category = this.questionCategory[0].tag;\r\n        }\r\n        if (this.complexityLevel) {\r\n            questionResource.complexityLevel = this.complexityLevel;\r\n        } else {\r\n            questionResource.complexityLevel = 1;\r\n        }\r\n        solutionContentJson = this.questionBuilderService.convertJsonToString(JSON.stringify(this.solutionContent));\r\n        updatedQuestionResource = this.questionBuilderService.getQuestionResource;\r\n        questionResource.marks = updatedQuestionResource.TotalMarks;\r\n        jsonConversion = JSON.stringify(updatedQuestionResource);\r\n        questionDetails = this.questionBuilderService.convertJsonToString(jsonConversion);\r\n        questionResource.contentJson = questionDetails;\r\n        questionResource.generalTopicId = this.topicId;\r\n        questionResource.solutionJson = solutionContentJson;\r\n        this.subscribeToSaveResponse(this.questionService.saveTopicQuestion(questionResource));\r\n    }\r\n\r\n\r\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<IGeneralTopicQuestion>>) {\r\n        result.subscribe((resp: HttpResponse<IGeneralTopicQuestion>) => this.onSaveSuccess(resp), (errRes: HttpErrorResponse) => this.onSaveError(errRes));\r\n    }\r\n\r\n    protected onSaveSuccess(res: HttpResponse<IGeneralTopicQuestion>) {\r\n        this.pluginService.alertMessage(\"General Topic question created successfully\", \"success\");\r\n        this.showAddQuestion = true;\r\n        this.showSaveQuestion = false;\r\n    }\r\n\r\n    protected onSaveError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not save, please contact admin\", \"error\")\r\n    }\r\n\r\n    onBack() {\r\n        var localObj = this;\r\n        swal({\r\n            title: \"Are you sure to go previous page ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    localObj.router.navigateByUrl('/general-concept-and-topic/general-topic-question');\r\n                    localObj.pluginService.sideMenuToggle();\r\n                }\r\n            });\r\n    }\r\n\r\n    addQuestion() {\r\n        window.location.reload();\r\n        this.questionType = \"\";\r\n        this.showSaveQuestion = true;\r\n    }\r\n}","import { Component, OnInit, AfterViewInit } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\nimport { IGeneralTopicQuestion } from '../shared/model/content/general-topic.question.model';\r\nimport { Router } from '@angular/router';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { GeneralConceptAndTopicService } from './general-concept-topic.service';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { QuestionBuilderService } from '../question-builder/question-builder.service';\r\nimport { IGeneralSubject } from '../shared/model/content/general-subject.model';\r\nimport { GeneralSubjectService } from '../general-subject/general-subject.service';\r\nimport { moveItemInArray, CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { MatchList } from '../question-builder/matchlist/matchlist.component';\r\nimport { ITopicAllDetails } from '../shared/model/content/topic-all-details.model';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    templateUrl: \"./general-topic-question-manage.component.html\",\r\n    providers: [GeneralConceptAndTopicService]\r\n})\r\nexport class GeneralTopicQuestionManageComponent implements OnInit, AfterViewInit {\r\n    subjects: IGeneralTopicQuestion[];\r\n    subjectTree: IGeneralSubject[] = [];\r\n    questions: any[] = [];\r\n    topicQuestions: any[] = [];\r\n    questionResources: any[] = [];\r\n    questionIds: any[] = [];\r\n    selectedAnswer: any[] = [];\r\n    nodeType: string;\r\n    nodeName: string;\r\n    nodeDescription: string;\r\n    topicId: number;\r\n    selectedSubject: any;\r\n    enableExpandNode: boolean;\r\n    tableAction: boolean;\r\n\r\n    constructor(\r\n        public _router: Router,\r\n        private generalSubjectService: GeneralSubjectService,\r\n        private generalTopicQuestionService: GeneralConceptAndTopicService,\r\n        public pluginService: PluginService,\r\n        public questionBuilderService: QuestionBuilderService\r\n    ) {\r\n        this.enableExpandNode = false;\r\n        this.tableAction = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadSubjectData();\r\n    }\r\n\r\n    loadSubjectData() {\r\n        this.generalSubjectService.getSubjectSearchList().subscribe(\r\n            (res: HttpResponse<IGeneralTopicQuestion[]>) => this.assignResponseToList(res.body),\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        )\r\n    }\r\n\r\n    assignResponseToList(data: IGeneralTopicQuestion[]) {\r\n        this.subjects = data;\r\n    }\r\n\r\n    protected onError(errorMessage: string) {\r\n        this.pluginService.alertMessage(errorMessage, \"error\");\r\n    }\r\n\r\n    showConceptAndTopicDetails() {\r\n        var localThisObj = this;\r\n        $('#treeView')\r\n            .on('changed.jstree', function (e, data) {\r\n                var i, j;\r\n                for (i = 0, j = data.selected.length; i < j; i++) {\r\n                    localThisObj.nodeType = data.node.type;\r\n                    if (localThisObj.nodeType === \"root\") {\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                    }\r\n                    else if (localThisObj.nodeType === \"concept\") {\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                    } else if (localThisObj.nodeType === \"topic\") {\r\n                        localThisObj.topicId = data.node.data.id;\r\n                        localThisObj.nodeName = data.node.data.name;\r\n                        localThisObj.nodeDescription = data.node.data.description;\r\n                        localThisObj.questions = [];\r\n                        localThisObj.questionIds = [];\r\n                        localThisObj.getTopicQuestionsList(localThisObj.topicId);\r\n                    } else {\r\n                        localThisObj.nodeType = \"\";\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    loadUpdatedTopicQuestions() {\r\n        this.getTopicQuestionsList(this.topicId);\r\n    }\r\n\r\n    getTopicQuestionsList(topicId: number) {\r\n        this.generalTopicQuestionService.getTopicQuestionList(topicId).subscribe(\r\n            (res: HttpResponse<IGeneralTopicQuestion>) => this.assignResponseToQuestionList(res.body),\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        )\r\n    }\r\n\r\n    protected assignResponseToQuestionList(data: ITopicAllDetails) {\r\n        let questionDetails: any[] = [], question, complexityLevel: string, questionType;\r\n        this.questions = [];\r\n        this.questionResources = data.questions;\r\n        if (this.questionResources.length > 0) {\r\n            for (let i = 0; i < this.questionResources.length; i++) {\r\n                questionDetails.push(this.questionBuilderService.convertStringToJson(this.questionResources[i].contentJson));\r\n                question = questionDetails[i].Question;\r\n                if (this.questionResources[i].complexityLevel === 1) {\r\n                    complexityLevel = \"Low\";\r\n                } else if (this.questionResources[i].complexityLevel === 2) {\r\n                    complexityLevel = \"Medium\";\r\n                } else if (this.questionResources[i].complexityLevel === 3) {\r\n                    complexityLevel = \"High\";\r\n                } else {\r\n                    complexityLevel = \"\";\r\n                }\r\n                if (questionDetails[i].QuestionType === \"MCQ_SINGLE\") {\r\n                    questionType = \"MCQ single answer\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_MULTIPLE\") {\r\n                    questionType = \"MCQ multiple answers\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_CHOICE_MATRIX\") {\r\n                    questionType = \"Choice matrix\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_TRUE_FALSE\") {\r\n                    questionType = \"MCQ true or false\";\r\n                } else if (questionDetails[i].QuestionType === \"MCQ_MATCH_LIST\") {\r\n                    questionType = \"MCQ match list\";\r\n                } else {\r\n                    questionType = \"\"\r\n                }\r\n                this.questions.push({\r\n                    id: this.questionResources[i].id,\r\n                    complexityLevel: complexityLevel,\r\n                    questionCategory: this.titleCapitalize(this.questionResources[i].category),\r\n                    questionText: question,\r\n                    questionType: questionType\r\n                })\r\n            }\r\n        }\r\n        this.questionIds = [];\r\n        this.tableAction = true;\r\n    }\r\n\r\n    titleCapitalize(word: string) {\r\n        if (!word) return word;\r\n        return word[0].toUpperCase() + word.substr(1).toLowerCase();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.showConceptAndTopicDetails();\r\n    }\r\n\r\n    loadSubjectTree() {\r\n        if (this.selectedSubject === null || this.selectedSubject === undefined) {\r\n            this.selectedSubject = null;\r\n            this.pluginService.alertMessage(\"Please select a filter and then apply\", \"error\")\r\n        } else {\r\n            this.subjectTree = [];\r\n            this.pluginService.jsTree(\"#treeView\", this.subjectTree, false);\r\n            let subjectId = this.selectedSubject.id;\r\n            if (subjectId) {\r\n                this.generalSubjectService.getSubjectTreeBySubjectId(subjectId).subscribe(\r\n                    (res: HttpResponse<IGeneralSubject[]>) => this.assignResponsetoTree(res.body),\r\n                    (res: HttpErrorResponse) => this.onError(res.message)\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    assignResponsetoTree(data: IGeneralSubject[]) {\r\n        this.subjectTree = data;\r\n        this.pluginService.jsTree(\"#treeView\", this.subjectTree, false);\r\n        this.nodeType = \"\";\r\n        this.enableExpandNode = false;\r\n    }\r\n\r\n    resetSelectedTopicQuestion() {\r\n        this.questionIds = [];\r\n        this.tableAction = true;\r\n        $(\".checkAll\").prop(\"checked\", false);\r\n    }\r\n\r\n    checkSelectedQuestions(event) {\r\n        let selectedId, checked, index;\r\n        checked = event.target.checked;\r\n        selectedId = event.target.id;\r\n        if (checked === true) {\r\n            this.tableAction = false;\r\n            this.questionIds.push(selectedId);\r\n        } else if (checked === false) {\r\n            index = this.questionIds.findIndex(item => item === selectedId);\r\n            this.questionIds.splice(index, 1)\r\n        }\r\n        this.questionIds = this.removeDuplicateElements(this.questionIds);\r\n        if (this.questionIds.length <= 0) {\r\n            this.tableAction = true;\r\n        }\r\n    }\r\n\r\n    removeDuplicateElements(array) {\r\n        var temp = [];\r\n        for (var i = 0; i < array.length; i++) {\r\n            if (temp.indexOf(array[i]) == -1) {\r\n                temp.push(array[i]);\r\n            }\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    deleteTopicQuestions() {\r\n        var localthisObject = this;\r\n        swal({\r\n            title: \"Are you sure to delete topic question ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            confirmButtonColor: \"#32b432\",\r\n            cancelButtonText: \"No\",\r\n            closeOnConfirm: true,\r\n            closeOnCancel: true\r\n        },\r\n            function (isConfirm) {\r\n                if (isConfirm === true) {\r\n                    if (localthisObject.questionIds.length > 0) {\r\n                        localthisObject.subscribeToDeleteResponse(localthisObject.generalTopicQuestionService.deleteTopicQuestions(localthisObject.questionIds));\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    protected subscribeToDeleteResponse(result: Observable<HttpResponse<IGeneralTopicQuestion>>) {\r\n        result.subscribe((res: HttpResponse<IGeneralTopicQuestion>) => this.onDeleteSuccess(res), (errRes: HttpErrorResponse) => this.onDeleteError(errRes));\r\n    }\r\n\r\n    protected onDeleteSuccess(res: HttpResponse<IGeneralTopicQuestion>) {\r\n        this.pluginService.alertMessage(\"Topic content deleted successfully\", \"success\");\r\n        this.questions = [];\r\n        this.questionIds = [];\r\n        this.getTopicQuestionsList(this.topicId);\r\n        this.tableAction = true;\r\n    }\r\n\r\n    protected onDeleteError(errRes: HttpErrorResponse) {\r\n        this.pluginService.alertMessage(\"Could not delete, please contact admin\", \"error\")\r\n    }\r\n\r\n    toggleTreeNodes() {\r\n        this.enableExpandNode = !this.enableExpandNode;\r\n        if (this.enableExpandNode) {\r\n            this.pluginService.openJsTreeAllNodes(\"#treeView\");\r\n        } else {\r\n            this.pluginService.closeJsTreeAllNodes(\"#treeView\")\r\n        }\r\n    }\r\n\r\n    openSimulateQuestionModal() {\r\n        this.pluginService.showModalWindow(\"#simulateQuestionModal\");\r\n        this.simulateTopicQuestionList();\r\n    }\r\n\r\n    closeSimulateQuestionModal() {\r\n        this.pluginService.hideModalWindow(\"#simulateQuestionModal\");\r\n    }\r\n\r\n    openPreviewQuestionModal() {\r\n        this.pluginService.showModalWindow(\"#previewQuestionModal\");\r\n        this.previewTopicQuestionList();\r\n    }\r\n\r\n    closePreviewQuestionModal() {\r\n        this.pluginService.hideModalWindow(\"#previewQuestionModal\");\r\n    }\r\n\r\n    protected previewTopicQuestionList() {\r\n        let questionDetails: any, options: any[] = [], answers: any[] = [], choices: any[] = [];\r\n        this.topicQuestions = [];\r\n        for (let i = 0; i < this.questionResources.length; i++) {\r\n            questionDetails = this.questionBuilderService.convertStringToJson(this.questionResources[i].contentJson);\r\n            if (questionDetails.QuestionType === \"MCQ_MATCH_LIST\" || questionDetails.QuestionType === \"MCQ_CHOICE_MATRIX\") {\r\n                answers = []; choices = [];\r\n                options = questionDetails.Options;\r\n                choices = questionDetails.Choices;\r\n                for (let k = 0; k < questionDetails.Answers.length; k++) {\r\n                    answers.push({\r\n                        choiceName: choices.find(item => item.ChoiceId === questionDetails.Answers[k].ChoiceId).ChoiceText,\r\n                        optionName: options.find(item => item.OptionId === questionDetails.Answers[k].OptionId).OptionText\r\n                    })\r\n                }\r\n            } else if (questionDetails.QuestionType === \"MCQ_SINGLE\" || questionDetails.QuestionType === \"MCQ_MULTIPLE\" || questionDetails.QuestionType === \"MCQ_TRUE_FALSE\") {\r\n                options = []; answers = [];\r\n                for (let j = 0; j < questionDetails.Answers.length; j++) {\r\n                    let answerText = questionDetails.Choices.find(item => item.ChoiceId === questionDetails.Answers[j]).ChoiceText;\r\n                    answers.push(answerText);\r\n                    answerText = \"\"\r\n                }\r\n            }\r\n            this.topicQuestions.push({\r\n                id: this.questionResources[i].id,\r\n                question: questionDetails.Question,\r\n                questionType: questionDetails.QuestionType,\r\n                generalTopicId: this.questionResources[i].generalTopicId,\r\n                questionId: this.questionResources[i].id,\r\n                choices: questionDetails.Choices,\r\n                options: options,\r\n                answers: answers\r\n            })\r\n        }\r\n    }\r\n\r\n    protected simulateTopicQuestionList() {\r\n        let questionDetails: MatchList, options: any[] = [], choices: any[] = [];\r\n        this.topicQuestions = [];\r\n        for (let i = 0; i < this.questionResources.length; i++) {\r\n            questionDetails = this.questionBuilderService.convertStringToJson(this.questionResources[i].contentJson);\r\n            if (questionDetails.QuestionType === \"MCQ_MATCH_LIST\" || questionDetails.QuestionType === \"MCQ_CHOICE_MATRIX\") {\r\n                options = this.shuffleArray(questionDetails.Options);\r\n                choices = questionDetails.Choices;\r\n            } else {\r\n                options = [];\r\n                choices = this.shuffleArray(questionDetails.Choices)\r\n            }\r\n            this.topicQuestions.push({\r\n                id: this.questionResources[i].id,\r\n                questionType: questionDetails.QuestionType,\r\n                question: questionDetails.Question,\r\n                generalTopicId: this.questionResources[i].generalTopicId,\r\n                questionId: this.questionResources[i].id,\r\n                choices: choices,\r\n                options: options,\r\n                answers: questionDetails.Answers,\r\n                checkAnswer: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    shuffleArray(array) {\r\n        array.sort(() => Math.random() - 0.5);\r\n        return array\r\n    }\r\n\r\n    public onSelectMCQSingleAnswer(questionId, choiceId) {\r\n        let topicIndex: number;\r\n        topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        for (let i = 0; i < this.topicQuestions[topicIndex].answers.length; i++) {\r\n            if (this.topicQuestions[topicIndex].answers[i] === choiceId) {\r\n                this.topicQuestions[topicIndex].checkAnswer = \"Correct\"\r\n            } else {\r\n                this.topicQuestions[topicIndex].checkAnswer = \"Wrong\"\r\n            }\r\n        }\r\n    }\r\n\r\n    public onSelectMCQMultipleAnswer(questionId, choiceId, event) {\r\n        let topicIndex: number, checked: boolean, choiceIndex: number;\r\n        checked = event.target.checked;\r\n        topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (checked === true) {\r\n            this.selectedAnswer.push(choiceId);\r\n        } else {\r\n            choiceIndex = this.selectedAnswer.findIndex(item => item === choiceId);\r\n            this.selectedAnswer.splice(choiceIndex, 1);\r\n        }\r\n        this.checkMultipleAnswer(topicIndex);\r\n    }\r\n\r\n    checkMultipleAnswer(index) {\r\n        let answers: any[] = this.topicQuestions[index].answers.sort();\r\n        let selectedAnswers: any[] = this.selectedAnswer.sort();\r\n        let duplicateAnswers: any[] = [];\r\n        for (let i = 0; i < answers.length; i++) {\r\n            for (let j = 0; j < selectedAnswers.length; j++) {\r\n                if (answers[i] === selectedAnswers[j]) {\r\n                    duplicateAnswers.push(selectedAnswers[j]);\r\n                    this.topicQuestions[index].checkAnswer = \"Partial\"\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Wrong\"\r\n                }\r\n            }\r\n        }\r\n        if (duplicateAnswers.length > 0) {\r\n            if (duplicateAnswers.length === answers.length) {\r\n                if (JSON.stringify(duplicateAnswers.sort()) === JSON.stringify(selectedAnswers)) {\r\n                    this.topicQuestions[index].checkAnswer = \"Correct\"\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Partial\"\r\n                }\r\n            } else {\r\n                this.topicQuestions[index].checkAnswer = \"Partial\"\r\n            }\r\n        }\r\n    }\r\n\r\n    public onSelectChoiceMatrixAnswer(questionId, choiceId, optionId) {\r\n        let topicIndex: number, index: number;\r\n        topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (this.selectedAnswer.length === 0) {\r\n            this.selectedAnswer = [];\r\n        }\r\n        this.selectedAnswer.push({\r\n            ChoiceId: choiceId,\r\n            OptionId: optionId\r\n        });\r\n        if (this.selectedAnswer.length > 1) {\r\n            for (let i = 0; i < this.selectedAnswer.length; i++) {\r\n                for (let j = i + 1; j < this.selectedAnswer.length; j++) {\r\n                    if (this.selectedAnswer[i].ChoiceId === this.selectedAnswer[j].ChoiceId) {\r\n                        index = this.selectedAnswer.findIndex(item => item.ChoiceId === this.selectedAnswer[i].ChoiceId);\r\n                        this.selectedAnswer.splice(index, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.checkMatrixAndMatchListAnswers(topicIndex);\r\n    }\r\n\r\n    checkAnswerStatus(questionId) {\r\n        let topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (this.topicQuestions[topicIndex].checkAnswer === \"Correct\") {\r\n            this.pluginService.alertMessage(\"Good keep going...Correct answer\", \"success\");\r\n        } else if (this.topicQuestions[topicIndex].checkAnswer === \"Partial\") {\r\n            this.pluginService.alertMessage(\"This is partially correct\", \"warning\");\r\n        } else if (this.topicQuestions[topicIndex].checkAnswer === \"Wrong\") {\r\n            this.pluginService.alertMessage(\"Oops..! this is wrong\", \"error\");\r\n        } else {\r\n            this.pluginService.alertMessage(\"Please select a answer and check it\", \"error\");\r\n        }\r\n    }\r\n\r\n    updatedDropList(questionId, event: CdkDragDrop<string[]>) {\r\n        let topicIndex = this.topicQuestions.findIndex(item => item.id === questionId);\r\n        if (event.previousContainer === event.container) {\r\n            moveItemInArray(\r\n                event.container.data,\r\n                event.previousIndex,\r\n                event.currentIndex\r\n            );\r\n            this.selectedAnswer = [];\r\n            for (let i = 0; i < this.topicQuestions[topicIndex].choices.length; i++) {\r\n                for (let j = 0; j < this.topicQuestions[topicIndex].options.length; j++) {\r\n                    if (i === j) {\r\n                        this.selectedAnswer.push({\r\n                            ChoiceId: this.topicQuestions[topicIndex].choices[i].ChoiceId,\r\n                            OptionId: this.topicQuestions[topicIndex].options[j].OptionId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            this.checkMatrixAndMatchListAnswers(topicIndex);\r\n        }\r\n    }\r\n\r\n    checkMatrixAndMatchListAnswers(index) {\r\n        let sortArr1, sortArr2, duplicateAnswers: any[] = [];\r\n        for (let i = 0; i < this.topicQuestions[index].answers.length; i++) {\r\n            for (let j = 0; j < this.selectedAnswer.length; j++) {\r\n                if (this.topicQuestions[index].answers[i].ChoiceId === this.selectedAnswer[j].ChoiceId) {\r\n                    if (this.topicQuestions[index].answers[i].OptionId === this.selectedAnswer[j].OptionId) {\r\n                        duplicateAnswers.push({\r\n                            ChoiceId: this.selectedAnswer[j].ChoiceId,\r\n                            OptionId: this.selectedAnswer[j].OptionId\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Wrong\"\r\n                }\r\n            }\r\n        }\r\n        if (duplicateAnswers.length > 0) {\r\n            sortArr1 = (obj1, obj2) => { return obj1.ChoiceId - obj2.ChoiceId; }\r\n            const sortedArray1: any[] = duplicateAnswers.sort(sortArr1);\r\n            sortArr2 = (obj1, obj2) => { return obj1.ChoiceId - obj2.ChoiceId; }\r\n            const sortedArray2: any[] = this.selectedAnswer.sort(sortArr2);\r\n            if (duplicateAnswers.length === this.topicQuestions[index].answers.length) {\r\n                if (JSON.stringify(sortedArray1) === JSON.stringify(sortedArray2)) {\r\n                    this.topicQuestions[index].checkAnswer = \"Correct\"\r\n                } else {\r\n                    this.topicQuestions[index].checkAnswer = \"Partial\"\r\n                }\r\n            } else {\r\n                this.topicQuestions[index].checkAnswer = \"Partial\"\r\n            }\r\n        }\r\n    }\r\n\r\n    previousQuestion() {\r\n        this.selectedAnswer = [];\r\n    }\r\n\r\n    nextQuestion() {\r\n        this.selectedAnswer = [];\r\n    }\r\n}"],"sourceRoot":"webpack:///","file":"general-concept-topic-general-concept-topic-module-es5.js"}