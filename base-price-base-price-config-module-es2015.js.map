{"version":3,"sources":["./src/app/base-price/base-price-config.component.html","./src/app/base-price/base-price-config.component.ts","./src/app/base-price/base-price-config.module.ts","./src/app/base-price/base-price-config.route.ts","./src/app/base-price/base-price-config.service.ts","./src/app/base-price/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,s7BAAu3B,2CAA2C,kBAAkB,kDAAkD,gBAAgB,2vBAA2vB,eAAe,ikBAAikB,wDAAwD,8nBAA8nB,sDAAsD,++B;;;;;;;;;;;;;;;;;;;;;;;;ACAzgG;AACkB;AAEZ;AAEO;AACH;AACoB;AAC7C;AACO;AAU3C,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;IAezC,YACS,OAAe,EACf,cAA8B,EAC3B,YAA6B,EAC7B,UAAyB,EACzB,gBAA2B,EAC9B,aAA4B,EAC5B,YAA8B,EAC9B,gBAAwC;QAPxC,YAAO,GAAP,OAAO,CAAQ;QACf,mBAAc,GAAd,cAAc,CAAgB;QAC3B,iBAAY,GAAZ,YAAY,CAAiB;QAC7B,eAAU,GAAV,UAAU,CAAe;QACzB,qBAAgB,GAAhB,gBAAgB,CAAW;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAkB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAwB;QArBjD,eAAU,GAAa,EAAE,CAAC;QAuBxB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,sDAAc,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,KAAK,GAAG;YACX,IAAI,EAAE,CAAC;SACR,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,gBAAgB;aAClB,UAAU,CAAC;YACV,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;SAClB,CAAC;aACD,SAAS,CACR,CAAC,GAA6B,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,EAC9E,CAAC,GAAsB,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAC9C,CAAC;IACN,CAAC;IAES,eAAe,CAAC,IAAgB,EAAE,OAAoB;QAC9D,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7D,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAC/B;SACF;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;SAChE;IACH,CAAC;IAES,OAAO,CAAC,MAAyB;QACzC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC9C,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,6BAA6B,EAAE,CAAC;IACvC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAClD,CAAC;IAED,OAAO,CAAC,KAAa,EAAE,IAAS;QAC9B,OAAO,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IAED,6BAA6B;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,8BAA8B,EAAE,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAC/G,CAAC;IAED,IAAI;QACF,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACxE,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;YAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnB;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;IAC9C,CAAC;IAED,MAAM;QACJ,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC;YACH,KAAK,EAAE,oCAAoC;YAC3C,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,KAAK;YACxB,kBAAkB,EAAE,SAAS;YAC7B,gBAAgB,EAAE,IAAI;YACtB,cAAc,EAAE,IAAI;YACpB,aAAa,EAAE,IAAI;SACpB,EACC,UAAU,SAAS;YACjB,IAAI,SAAS,EAAE;gBACb,QAAQ,CAAC,YAAY,EAAE,CAAC;gBACxB,QAAQ,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;aACzC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;IACrD,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;IACrD,CAAC;IAED,YAAY;QACV,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,UAAU,CAAC,QAAQ;QACjB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IACpF,CAAC;IAED,YAAY;QACV,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IACpF,CAAC;IAES,uBAAuB,CAAC,MAA0C;QAC1E,MAAM,CAAC,SAAS,CAAC,CAAC,GAA2B,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,GAAsB,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IACzH,CAAC;IAES,aAAa;QACrB,IAAI,IAAI,CAAC,aAAa,KAAK,KAAK,EAAE;YAChC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,6BAA6B,EAAE,SAAS,CAAC,CAAC;SAC3E;aAAM,IAAI,IAAI,CAAC,aAAa,KAAK,MAAM,EAAE;YACxC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,6BAA6B,EAAE,SAAS,CAAC,CAAC;SAC3E;QACD,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,aAAa,KAAK,KAAK,EAAE;YAChC,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;aAAM,IAAI,IAAI,CAAC,aAAa,KAAK,MAAM,EAAE;YACxC,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,GAAG,EAAE;IACtB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACrC,CAAC;CACF;;YA5KmB,sDAAM;YACC,8DAAc;YACb,2DAAe;YACjB,yDAAa;YACP,+CAAS;YACf,2EAAa;YACd,4FAAgB;YACZ,iFAAsB;;AAvBtC,8BAA8B;IAJ1C,+DAAS,CAAC;QACT,gPAAiD;QACjD,SAAS,EAAE,CAAC,iFAAsB,CAAC;KACpC,CAAC;2EAiBkB,sDAAM;QACC,8DAAc;QACb,2DAAe;QACjB,yDAAa;QACP,+CAAS;QACf,2EAAa;QACd,4FAAgB;QACZ,iFAAsB;GAvBtC,8BAA8B,CA4L1C;AA5L0C;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBsB;AAClB;AACA;AACY;AACJ;AACd;AACyB;AACe;AACtB;AAmB3D,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAEjC;AAFY,qBAAqB;IAjBjC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY,CAAC,QAAQ,CAAC,uEAAc,CAAC;YACrC,0DAAW;YACX,kEAAmB;YACnB,oDAAY;YACZ,4DAAgB;YAChB,wEAAoB;YACpB,oEAAS;SACV;QACD,YAAY,EAAE;YACZ,qEAA8B;SAC/B;QACD,SAAS,EAAE,CAAC,6DAAsB,CAAC;QACnC,OAAO,EAAE,CAAC,oEAAsB,CAAC;KAClC,CAAC;GAEW,qBAAqB,CAEjC;AAFiC;;;;;;;;;;;;;;;;;;;AC3Be;AAE8B;AAExE,MAAM,cAAc,GAAW;IACpC;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2FAA8B;QACzC,IAAI,EAAE;YACJ,WAAW,EAAE,CAAC,cAAc,CAAC;YAC7B,SAAS,EAAE,0BAA0B;SACtC;QACD,WAAW,EAAE,CAAC,4DAAsB,CAAC;KACtC;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;ACdyC;AACkC;AAEhB;AACG;AAEhB;AAOhD,IAAI,OAAO,GAAgB,IAAI,gEAAW,EAAE,CAAC;AAC7C,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;AAGzG,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAGjC,YAAsB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF/B,sBAAiB,GAAG,qEAAW,CAAC,OAAO,GAAG,2EAAO,CAAC;IAEf,CAAC;IAE3C,YAAY,CAAC,MAAgB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,IAAI,CAAC,iBAAiB,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC7G,CAAC;IAED,YAAY,CAAC,MAAgB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,iBAAiB,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC1F,CAAC;IAED,UAAU,CAAC,GAAS;QAClB,MAAM,OAAO,GAAG,mEAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACrG,CAAC;CACF;;YAd6B,+DAAU;;AAH3B,sBAAsB;IADlC,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;2EAIL,+DAAU;GAH3B,sBAAsB,CAiBlC;AAjBkC;;;;;;;;;;;;;;;;;;;;;;ACjBW;AACF","file":"base-price-base-price-config-module-es2015.js","sourcesContent":["export default \"<div class=\\\"d-flex justify-content-end mb-2\\\">\\r\\n  <div class=\\\"btn btn-primary\\\" (click)=\\\"addNewCourse()\\\">\\r\\n    <i class=\\\"fa fa-plus-circle mr-2\\\"></i>Add new course\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-responsive\\\">\\r\\n  <table class=\\\"table table-hover table-striped table-bordered nowrap w-100\\\">\\r\\n    <thead>\\r\\n      <tr jhiSort [(predicate)]=\\\"predicate\\\" [(ascending)]=\\\"reverse\\\" [callback]=\\\"reset.bind(this)\\\">\\r\\n        <th jhiSortBy=\\\"courseTitle\\\">Title<span class=\\\"fa fa-sort ml-1\\\"></span></th>\\r\\n        <th jhiSortBy=\\\"basePrice\\\">Base price<span class=\\\"fa fa-sort ml-1\\\"></span></th>\\r\\n        <th>Action</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody infinite-scroll (scrolled)=\\\"loadPage(page + 1)\\\" [infiniteScrollDisabled]=\\\"page >= links['last']\\\"\\r\\n      [infiniteScrollDistance]=\\\"0\\\">\\r\\n      <tr *ngFor=\\\"let data of courseList;\\\">\\r\\n        <td data-column=\\\"Title\\\">{{data.courseTitle}}</td>\\r\\n        <td data-column=\\\"Base price\\\">{{data.basePrice}}</td>\\r\\n        <td>\\r\\n          <a class=\\\"btn btn-outline-success btn-icon mr-1 mb-1\\\" (click)=\\\"editCourse(data.id)\\\" tooltip=\\\"Edit base price\\\">\\r\\n            <i class=\\\"fa fa-edit\\\"></i>\\r\\n          </a>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\\r\\n<form name=\\\"form\\\" (ngSubmit)=\\\"course.form.valid && onSubmit()\\\" #course=\\\"ngForm\\\" novalidate>\\r\\n  <div class=\\\"modal slideInRight\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" id=\\\"courseModal\\\">\\r\\n    <div class=\\\"modal-dialog modal-full-height modal-right modal-notify\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header bg-warning d-flex align-items-center\\\">\\r\\n          <h5 class=\\\"modal-title text-white\\\">\\r\\n            {{modeTitleName}} course\\r\\n          </h5>\\r\\n          <div class=\\\"close btn btn-xl\\\" (click)=\\\"closeCourseModal()\\\">\\r\\n            <i class=\\\"fa fa-times\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"form-group mb-2\\\">\\r\\n            <label>Course title*</label>\\r\\n            <input type=\\\"text\\\" name=\\\"courseTitle\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"courseItem.courseTitle\\\"\\r\\n              placeholder=\\\"Enter course name\\\" #courseTitle=\\\"ngModel\\\" trim minlength=\\\"3\\\" maxlength=\\\"50\\\"\\r\\n              [ngClass]=\\\"{ 'is-invalid': course.submitted && courseTitle.invalid }\\\" required [disabled]=\\\"disableTitle\\\">\\r\\n            <div *ngIf=\\\"course.submitted && courseTitle.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"courseTitle.errors.required\\\" class=\\\"text-danger font-14 my-2\\\">Course title is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group mb-2\\\">\\r\\n            <label>Base price*</label>\\r\\n            <input type=\\\"number \\\" name=\\\"basePrice\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"courseItem.basePrice\\\"\\r\\n              placeholder=\\\"Enter base price\\\" #basePrice=\\\"ngModel\\\" trim\\r\\n              [ngClass]=\\\"{ 'is-invalid': course.submitted && basePrice.invalid }\\\" required\\r\\n              inputRestriction=\\\"onlyIntegers\\\">\\r\\n            <div *ngIf=\\\"course.submitted && basePrice.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"basePrice.errors.required\\\" class=\\\"text-danger font-14 my-2\\\">Base price is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <div *ngIf=\\\"modeTitleName === 'Add' || modeTitleName === 'Edit'\\\">\\r\\n            <div class=\\\"btn btn-danger mr-2\\\" (click)=\\\"resetCourse()\\\">\\r\\n              <i class=\\\"fa fa-times mr-2\\\"></i>\\r\\n              Reset\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-success\\\" [disabled]=\\\"!course.form.valid\\\"\\r\\n              *ngIf=\\\"modeTitleName === 'Add' || modeTitleName === 'Edit'\\\">\\r\\n              <i class=\\\"fa fa-save mr-2\\\"></i>\\r\\n              Save\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\"","import { Component, OnInit, } from \"@angular/core\";\r\nimport { BasePriceConfigService } from './base-price-config.service';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpErrorResponse, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { PluginService } from '../shared/plugin/plugin.service';\r\nimport { JhiEventManager, JhiParseLinks } from 'ng-jhipster';\r\nimport { CoreErrorHandler } from '../shared/error-handler/error-handler.service';\r\nimport { Principal } from '../core';\r\nimport { ITEMS_PER_PAGE } from '../shared';\r\nimport { ICourses } from '../shared/model/common/courses.model';\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n  templateUrl: \"./base-price-config.component.html\",\r\n  providers: [BasePriceConfigService]\r\n})\r\nexport class BasePriceConfigManageComponent implements OnInit {\r\n  courseList: ICourses[];\r\n  courseItem: ICourses = {};\r\n  modeTitleName: string;\r\n  currentAccount: any;\r\n  eventSubscriber: Subscription;\r\n  itemsPerPage: number;\r\n  page: any;\r\n  predicate: any;\r\n  reverse: any;\r\n  totalItems: number;\r\n  totalPages: number;\r\n  links: any;\r\n  disableTitle: boolean;\r\n\r\n  constructor(\r\n    public _router: Router,\r\n    public activatedRoute: ActivatedRoute,\r\n    protected eventManager: JhiEventManager,\r\n    protected parseLinks: JhiParseLinks,\r\n    protected principalService: Principal,\r\n    public pluginService: PluginService,\r\n    public errorHandler: CoreErrorHandler,\r\n    public basePriceService: BasePriceConfigService\r\n  ) {\r\n    this.courseList = [];\r\n    this.itemsPerPage = ITEMS_PER_PAGE;\r\n    this.page = 0;\r\n    this.links = {\r\n      last: 0\r\n    };\r\n    this.predicate = 'id';\r\n    this.reverse = false;\r\n  }\r\n\r\n  loadCourseList() {\r\n    this.basePriceService\r\n      .getCourses({\r\n        page: this.page,\r\n        size: this.itemsPerPage,\r\n        sort: this.sort()\r\n      })\r\n      .subscribe(\r\n        (res: HttpResponse<ICourses[]>) => this.paginateCourses(res.body, res.headers),\r\n        (res: HttpErrorResponse) => this.onError(res)\r\n      );\r\n  }\r\n\r\n  protected paginateCourses(data: ICourses[], headers: HttpHeaders) {\r\n    this.courseList = [];\r\n    this.links = this.parseLinks.parse(headers.get('link'));\r\n    this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n    if (data.length > 0) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        this.courseList.push(data[i]);\r\n      }\r\n    } else {\r\n      this.pluginService.alertMessage(\"No data found..!\", \"warning\");\r\n    }\r\n  }\r\n\r\n  protected onError(errRes: HttpErrorResponse) {\r\n    this.errorHandler.handleError(errRes);\r\n  }\r\n\r\n  reset() {\r\n    this.page = 0;\r\n    this.courseList = [];\r\n    this.loadCourseList();\r\n  }\r\n\r\n  loadPage(page) {\r\n    this.page = page;\r\n    this.loadCourseList();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadCourseList();\r\n    this.principalService.identity().then(account => {\r\n      this.currentAccount = account;\r\n    });\r\n    this.registerChangeInOrganisations();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.eventManager.destroy(this.eventSubscriber);\r\n  }\r\n\r\n  trackId(index: number, item: any) {\r\n    return item.id;\r\n  }\r\n\r\n  registerChangeInOrganisations() {\r\n    this.eventSubscriber = this.eventManager.subscribe('organisationListModification', response => this.reset());\r\n  }\r\n\r\n  sort() {\r\n    const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n    if (this.predicate !== 'id') {\r\n      result.push('id');\r\n    }\r\n    return result;\r\n  }\r\n\r\n  previousPage() {\r\n    this._router.navigateByUrl('/organisation');\r\n  }\r\n\r\n  onBack() {\r\n    var localObj = this;\r\n    swal({\r\n      title: \"Are you sure to go previous page ?\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes\",\r\n      confirmButtonColor: \"#32b432\",\r\n      cancelButtonText: \"No\",\r\n      closeOnConfirm: true,\r\n      closeOnCancel: true\r\n    },\r\n      function (isConfirm) {\r\n        if (isConfirm) {\r\n          localObj.previousPage();\r\n          localObj.pluginService.sideMenuToggle();\r\n        }\r\n      });\r\n  }\r\n\r\n  openCourseModal() {\r\n    this.pluginService.showModalWindow(\"#courseModal\");\r\n  }\r\n\r\n  closeCourseModal() {\r\n    this.pluginService.hideModalWindow(\"#courseModal\");\r\n  }\r\n\r\n  addNewCourse() {\r\n    this.modeTitleName = \"Add\";\r\n    this.disableTitle = false;\r\n    this.courseItem = {};\r\n    this.openCourseModal();\r\n  }\r\n\r\n  editCourse(courseId) {\r\n    this.modeTitleName = \"Edit\";\r\n    this.disableTitle = true;\r\n    this.courseItem = this.courseList.filter(item => item.id === courseId)[0];\r\n    this.openCourseModal();\r\n  }\r\n\r\n  saveCourse() {\r\n    this.subscribeToSaveResponse(this.basePriceService.createCourse(this.courseItem));\r\n  }\r\n\r\n  updateCourse() {\r\n    this.subscribeToSaveResponse(this.basePriceService.updateCourse(this.courseItem));\r\n  }\r\n\r\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<ICourses>>) {\r\n    result.subscribe((res: HttpResponse<ICourses>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onError(res));\r\n  }\r\n\r\n  protected onSaveSuccess() {\r\n    if (this.modeTitleName === \"Add\") {\r\n      this.pluginService.alertMessage(\"Course created successfully\", \"success\");\r\n    } else if (this.modeTitleName === \"Edit\") {\r\n      this.pluginService.alertMessage(\"Course updated successfully\", \"success\");\r\n    }\r\n    this.courseItem = {};\r\n    this.loadCourseList();\r\n    this.closeCourseModal();\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.modeTitleName === \"Add\") {\r\n      this.saveCourse();\r\n    } else if (this.modeTitleName === \"Edit\") {\r\n      this.updateCourse();\r\n    }\r\n  }\r\n\r\n  resetCourse() {\r\n    this.courseItem = {}\r\n  }\r\n\r\n  ngDestroy() {\r\n    this.eventSubscriber.unsubscribe();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgJhipsterModule } from 'ng-jhipster';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from '../shared';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BasePriceConfigManageComponent, BasePriceConfigService } from './index';\r\nimport { basePriceRoute } from './base-price-config.route';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(basePriceRoute),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgJhipsterModule,\r\n    InfiniteScrollModule,\r\n    NgbModule\r\n  ],\r\n  declarations: [\r\n    BasePriceConfigManageComponent\r\n  ],\r\n  providers: [BasePriceConfigService],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class BasePriceConfigModule {\r\n\r\n}","import { UserRouteAccessService } from '../core';\r\nimport { Routes } from '@angular/router';\r\nimport { BasePriceConfigManageComponent } from './base-price-config.component';\r\n\r\nexport const basePriceRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: BasePriceConfigManageComponent,\r\n    data: {\r\n      authorities: ['SYSTEM_ADMIN'],\r\n      pageTitle: 'Base price configuration'\r\n    },\r\n    canActivate: [UserRouteAccessService]\r\n  }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { ICourses } from '../shared/model/common/courses.model';\r\nimport { environment } from '../../environments/environment';\r\nimport { courses } from '../shared/constants/service.constants';\r\nimport { Observable } from 'rxjs';\r\nimport { createRequestOption } from '../shared';\r\n\r\n\r\n\r\ntype EntityResponseType = HttpResponse<ICourses>;\r\ntype EntityArrayResponseType = HttpResponse<ICourses[]>;\r\n\r\nlet headers: HttpHeaders = new HttpHeaders();\r\nheaders = headers.append('Access-Control-Allow-Origin', '*').append('Access-Control-Allow-Headers', '*');\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BasePriceConfigService {\r\n  public courseResourceURL = environment.API_URL + courses;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  createCourse(course: ICourses): Observable<EntityResponseType> {\r\n    return this.http.post<ICourses>(this.courseResourceURL, course, { headers: headers, observe: 'response' });\r\n  }\r\n\r\n  updateCourse(course: ICourses): Observable<EntityResponseType> {\r\n    return this.http.put<ICourses>(this.courseResourceURL, course, { observe: 'response' });\r\n  }\r\n\r\n  getCourses(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<ICourses[]>(this.courseResourceURL, { params: options, observe: 'response' });\r\n  }\r\n}\r\n","export * from \"./base-price-config.component\";\r\nexport * from \"./base-price-config.service\";"],"sourceRoot":"webpack:///"}